
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model UserRoleAssignment
 * 
 */
export type UserRoleAssignment = $Result.DefaultSelection<Prisma.$UserRoleAssignmentPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Verification
 * 
 */
export type Verification = $Result.DefaultSelection<Prisma.$VerificationPayload>
/**
 * Model ProviderRequest
 * 
 */
export type ProviderRequest = $Result.DefaultSelection<Prisma.$ProviderRequestPayload>
/**
 * Model Address
 * 
 */
export type Address = $Result.DefaultSelection<Prisma.$AddressPayload>
/**
 * Model ProviderProfile
 * 
 */
export type ProviderProfile = $Result.DefaultSelection<Prisma.$ProviderProfilePayload>
/**
 * Model ProviderAvailability
 * 
 */
export type ProviderAvailability = $Result.DefaultSelection<Prisma.$ProviderAvailabilityPayload>
/**
 * Model ProviderCategory
 * 
 */
export type ProviderCategory = $Result.DefaultSelection<Prisma.$ProviderCategoryPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderSlot
 * 
 */
export type OrderSlot = $Result.DefaultSelection<Prisma.$OrderSlotPayload>
/**
 * Model OrderCategory
 * 
 */
export type OrderCategory = $Result.DefaultSelection<Prisma.$OrderCategoryPayload>
/**
 * Model OrderInvitation
 * 
 */
export type OrderInvitation = $Result.DefaultSelection<Prisma.$OrderInvitationPayload>
/**
 * Model OrderStatusHistory
 * 
 */
export type OrderStatusHistory = $Result.DefaultSelection<Prisma.$OrderStatusHistoryPayload>
/**
 * Model OrderReview
 * 
 */
export type OrderReview = $Result.DefaultSelection<Prisma.$OrderReviewPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model PaymentEvent
 * 
 */
export type PaymentEvent = $Result.DefaultSelection<Prisma.$PaymentEventPayload>
/**
 * Model Commission
 * 
 */
export type Commission = $Result.DefaultSelection<Prisma.$CommissionPayload>
/**
 * Model ClientCredit
 * 
 */
export type ClientCredit = $Result.DefaultSelection<Prisma.$ClientCreditPayload>
/**
 * Model ProviderPayout
 * 
 */
export type ProviderPayout = $Result.DefaultSelection<Prisma.$ProviderPayoutPayload>
/**
 * Model MatchScore
 * 
 */
export type MatchScore = $Result.DefaultSelection<Prisma.$MatchScorePayload>
/**
 * Model LlmClassification
 * 
 */
export type LlmClassification = $Result.DefaultSelection<Prisma.$LlmClassificationPayload>
/**
 * Model RefusalRule
 * 
 */
export type RefusalRule = $Result.DefaultSelection<Prisma.$RefusalRulePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  ADMINISTRADOR: 'ADMINISTRADOR',
  PRESTADOR: 'PRESTADOR',
  CLIENTE: 'CLIENTE'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const ProviderRequestStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

export type ProviderRequestStatus = (typeof ProviderRequestStatus)[keyof typeof ProviderRequestStatus]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type ProviderRequestStatus = $Enums.ProviderRequestStatus

export const ProviderRequestStatus: typeof $Enums.ProviderRequestStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userRoleAssignment`: Exposes CRUD operations for the **UserRoleAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserRoleAssignments
    * const userRoleAssignments = await prisma.userRoleAssignment.findMany()
    * ```
    */
  get userRoleAssignment(): Prisma.UserRoleAssignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verification`: Exposes CRUD operations for the **Verification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Verifications
    * const verifications = await prisma.verification.findMany()
    * ```
    */
  get verification(): Prisma.VerificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providerRequest`: Exposes CRUD operations for the **ProviderRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderRequests
    * const providerRequests = await prisma.providerRequest.findMany()
    * ```
    */
  get providerRequest(): Prisma.ProviderRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.address`: Exposes CRUD operations for the **Address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.address.findMany()
    * ```
    */
  get address(): Prisma.AddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providerProfile`: Exposes CRUD operations for the **ProviderProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderProfiles
    * const providerProfiles = await prisma.providerProfile.findMany()
    * ```
    */
  get providerProfile(): Prisma.ProviderProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providerAvailability`: Exposes CRUD operations for the **ProviderAvailability** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderAvailabilities
    * const providerAvailabilities = await prisma.providerAvailability.findMany()
    * ```
    */
  get providerAvailability(): Prisma.ProviderAvailabilityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providerCategory`: Exposes CRUD operations for the **ProviderCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderCategories
    * const providerCategories = await prisma.providerCategory.findMany()
    * ```
    */
  get providerCategory(): Prisma.ProviderCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderSlot`: Exposes CRUD operations for the **OrderSlot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderSlots
    * const orderSlots = await prisma.orderSlot.findMany()
    * ```
    */
  get orderSlot(): Prisma.OrderSlotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderCategory`: Exposes CRUD operations for the **OrderCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderCategories
    * const orderCategories = await prisma.orderCategory.findMany()
    * ```
    */
  get orderCategory(): Prisma.OrderCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderInvitation`: Exposes CRUD operations for the **OrderInvitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderInvitations
    * const orderInvitations = await prisma.orderInvitation.findMany()
    * ```
    */
  get orderInvitation(): Prisma.OrderInvitationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderStatusHistory`: Exposes CRUD operations for the **OrderStatusHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderStatusHistories
    * const orderStatusHistories = await prisma.orderStatusHistory.findMany()
    * ```
    */
  get orderStatusHistory(): Prisma.OrderStatusHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderReview`: Exposes CRUD operations for the **OrderReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderReviews
    * const orderReviews = await prisma.orderReview.findMany()
    * ```
    */
  get orderReview(): Prisma.OrderReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentEvent`: Exposes CRUD operations for the **PaymentEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentEvents
    * const paymentEvents = await prisma.paymentEvent.findMany()
    * ```
    */
  get paymentEvent(): Prisma.PaymentEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.commission`: Exposes CRUD operations for the **Commission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Commissions
    * const commissions = await prisma.commission.findMany()
    * ```
    */
  get commission(): Prisma.CommissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clientCredit`: Exposes CRUD operations for the **ClientCredit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientCredits
    * const clientCredits = await prisma.clientCredit.findMany()
    * ```
    */
  get clientCredit(): Prisma.ClientCreditDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providerPayout`: Exposes CRUD operations for the **ProviderPayout** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProviderPayouts
    * const providerPayouts = await prisma.providerPayout.findMany()
    * ```
    */
  get providerPayout(): Prisma.ProviderPayoutDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.matchScore`: Exposes CRUD operations for the **MatchScore** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MatchScores
    * const matchScores = await prisma.matchScore.findMany()
    * ```
    */
  get matchScore(): Prisma.MatchScoreDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.llmClassification`: Exposes CRUD operations for the **LlmClassification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LlmClassifications
    * const llmClassifications = await prisma.llmClassification.findMany()
    * ```
    */
  get llmClassification(): Prisma.LlmClassificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refusalRule`: Exposes CRUD operations for the **RefusalRule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefusalRules
    * const refusalRules = await prisma.refusalRule.findMany()
    * ```
    */
  get refusalRule(): Prisma.RefusalRuleDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.2
   * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Role: 'Role',
    UserRoleAssignment: 'UserRoleAssignment',
    Session: 'Session',
    Account: 'Account',
    Verification: 'Verification',
    ProviderRequest: 'ProviderRequest',
    Address: 'Address',
    ProviderProfile: 'ProviderProfile',
    ProviderAvailability: 'ProviderAvailability',
    ProviderCategory: 'ProviderCategory',
    Category: 'Category',
    Order: 'Order',
    OrderSlot: 'OrderSlot',
    OrderCategory: 'OrderCategory',
    OrderInvitation: 'OrderInvitation',
    OrderStatusHistory: 'OrderStatusHistory',
    OrderReview: 'OrderReview',
    Payment: 'Payment',
    PaymentEvent: 'PaymentEvent',
    Commission: 'Commission',
    ClientCredit: 'ClientCredit',
    ProviderPayout: 'ProviderPayout',
    MatchScore: 'MatchScore',
    LlmClassification: 'LlmClassification',
    RefusalRule: 'RefusalRule'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "role" | "userRoleAssignment" | "session" | "account" | "verification" | "providerRequest" | "address" | "providerProfile" | "providerAvailability" | "providerCategory" | "category" | "order" | "orderSlot" | "orderCategory" | "orderInvitation" | "orderStatusHistory" | "orderReview" | "payment" | "paymentEvent" | "commission" | "clientCredit" | "providerPayout" | "matchScore" | "llmClassification" | "refusalRule"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      UserRoleAssignment: {
        payload: Prisma.$UserRoleAssignmentPayload<ExtArgs>
        fields: Prisma.UserRoleAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserRoleAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserRoleAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          findFirst: {
            args: Prisma.UserRoleAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserRoleAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          findMany: {
            args: Prisma.UserRoleAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>[]
          }
          create: {
            args: Prisma.UserRoleAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          createMany: {
            args: Prisma.UserRoleAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserRoleAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>[]
          }
          delete: {
            args: Prisma.UserRoleAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          update: {
            args: Prisma.UserRoleAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.UserRoleAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserRoleAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserRoleAssignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>[]
          }
          upsert: {
            args: Prisma.UserRoleAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRoleAssignmentPayload>
          }
          aggregate: {
            args: Prisma.UserRoleAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserRoleAssignment>
          }
          groupBy: {
            args: Prisma.UserRoleAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserRoleAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserRoleAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<UserRoleAssignmentCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Verification: {
        payload: Prisma.$VerificationPayload<ExtArgs>
        fields: Prisma.VerificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          findFirst: {
            args: Prisma.VerificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          findMany: {
            args: Prisma.VerificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          create: {
            args: Prisma.VerificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          createMany: {
            args: Prisma.VerificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          delete: {
            args: Prisma.VerificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          update: {
            args: Prisma.VerificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          deleteMany: {
            args: Prisma.VerificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          upsert: {
            args: Prisma.VerificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          aggregate: {
            args: Prisma.VerificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerification>
          }
          groupBy: {
            args: Prisma.VerificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationCountAggregateOutputType> | number
          }
        }
      }
      ProviderRequest: {
        payload: Prisma.$ProviderRequestPayload<ExtArgs>
        fields: Prisma.ProviderRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          findFirst: {
            args: Prisma.ProviderRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          findMany: {
            args: Prisma.ProviderRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>[]
          }
          create: {
            args: Prisma.ProviderRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          createMany: {
            args: Prisma.ProviderRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>[]
          }
          delete: {
            args: Prisma.ProviderRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          update: {
            args: Prisma.ProviderRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          deleteMany: {
            args: Prisma.ProviderRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProviderRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>[]
          }
          upsert: {
            args: Prisma.ProviderRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderRequestPayload>
          }
          aggregate: {
            args: Prisma.ProviderRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderRequest>
          }
          groupBy: {
            args: Prisma.ProviderRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderRequestCountAggregateOutputType> | number
          }
        }
      }
      Address: {
        payload: Prisma.$AddressPayload<ExtArgs>
        fields: Prisma.AddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findFirst: {
            args: Prisma.AddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findMany: {
            args: Prisma.AddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          create: {
            args: Prisma.AddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          createMany: {
            args: Prisma.AddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          delete: {
            args: Prisma.AddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          update: {
            args: Prisma.AddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          deleteMany: {
            args: Prisma.AddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          upsert: {
            args: Prisma.AddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          aggregate: {
            args: Prisma.AddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddress>
          }
          groupBy: {
            args: Prisma.AddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.AddressCountArgs<ExtArgs>
            result: $Utils.Optional<AddressCountAggregateOutputType> | number
          }
        }
      }
      ProviderProfile: {
        payload: Prisma.$ProviderProfilePayload<ExtArgs>
        fields: Prisma.ProviderProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          findFirst: {
            args: Prisma.ProviderProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          findMany: {
            args: Prisma.ProviderProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>[]
          }
          create: {
            args: Prisma.ProviderProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          createMany: {
            args: Prisma.ProviderProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>[]
          }
          delete: {
            args: Prisma.ProviderProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          update: {
            args: Prisma.ProviderProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProviderProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProviderProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>[]
          }
          upsert: {
            args: Prisma.ProviderProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderProfilePayload>
          }
          aggregate: {
            args: Prisma.ProviderProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderProfile>
          }
          groupBy: {
            args: Prisma.ProviderProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderProfileCountAggregateOutputType> | number
          }
        }
      }
      ProviderAvailability: {
        payload: Prisma.$ProviderAvailabilityPayload<ExtArgs>
        fields: Prisma.ProviderAvailabilityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderAvailabilityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderAvailabilityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          findFirst: {
            args: Prisma.ProviderAvailabilityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderAvailabilityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          findMany: {
            args: Prisma.ProviderAvailabilityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>[]
          }
          create: {
            args: Prisma.ProviderAvailabilityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          createMany: {
            args: Prisma.ProviderAvailabilityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderAvailabilityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>[]
          }
          delete: {
            args: Prisma.ProviderAvailabilityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          update: {
            args: Prisma.ProviderAvailabilityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          deleteMany: {
            args: Prisma.ProviderAvailabilityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderAvailabilityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProviderAvailabilityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>[]
          }
          upsert: {
            args: Prisma.ProviderAvailabilityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderAvailabilityPayload>
          }
          aggregate: {
            args: Prisma.ProviderAvailabilityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderAvailability>
          }
          groupBy: {
            args: Prisma.ProviderAvailabilityGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderAvailabilityGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderAvailabilityCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderAvailabilityCountAggregateOutputType> | number
          }
        }
      }
      ProviderCategory: {
        payload: Prisma.$ProviderCategoryPayload<ExtArgs>
        fields: Prisma.ProviderCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProviderCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          findMany: {
            args: Prisma.ProviderCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>[]
          }
          create: {
            args: Prisma.ProviderCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          createMany: {
            args: Prisma.ProviderCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProviderCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          update: {
            args: Prisma.ProviderCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProviderCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProviderCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>[]
          }
          upsert: {
            args: Prisma.ProviderCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProviderCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderCategory>
          }
          groupBy: {
            args: Prisma.ProviderCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderCategoryCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderSlot: {
        payload: Prisma.$OrderSlotPayload<ExtArgs>
        fields: Prisma.OrderSlotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderSlotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderSlotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          findFirst: {
            args: Prisma.OrderSlotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderSlotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          findMany: {
            args: Prisma.OrderSlotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>[]
          }
          create: {
            args: Prisma.OrderSlotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          createMany: {
            args: Prisma.OrderSlotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderSlotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>[]
          }
          delete: {
            args: Prisma.OrderSlotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          update: {
            args: Prisma.OrderSlotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          deleteMany: {
            args: Prisma.OrderSlotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderSlotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderSlotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>[]
          }
          upsert: {
            args: Prisma.OrderSlotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderSlotPayload>
          }
          aggregate: {
            args: Prisma.OrderSlotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderSlot>
          }
          groupBy: {
            args: Prisma.OrderSlotGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderSlotGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderSlotCountArgs<ExtArgs>
            result: $Utils.Optional<OrderSlotCountAggregateOutputType> | number
          }
        }
      }
      OrderCategory: {
        payload: Prisma.$OrderCategoryPayload<ExtArgs>
        fields: Prisma.OrderCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          findFirst: {
            args: Prisma.OrderCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          findMany: {
            args: Prisma.OrderCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>[]
          }
          create: {
            args: Prisma.OrderCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          createMany: {
            args: Prisma.OrderCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>[]
          }
          delete: {
            args: Prisma.OrderCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          update: {
            args: Prisma.OrderCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          deleteMany: {
            args: Prisma.OrderCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>[]
          }
          upsert: {
            args: Prisma.OrderCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderCategoryPayload>
          }
          aggregate: {
            args: Prisma.OrderCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderCategory>
          }
          groupBy: {
            args: Prisma.OrderCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCategoryCountAggregateOutputType> | number
          }
        }
      }
      OrderInvitation: {
        payload: Prisma.$OrderInvitationPayload<ExtArgs>
        fields: Prisma.OrderInvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderInvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderInvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          findFirst: {
            args: Prisma.OrderInvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderInvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          findMany: {
            args: Prisma.OrderInvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>[]
          }
          create: {
            args: Prisma.OrderInvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          createMany: {
            args: Prisma.OrderInvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderInvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>[]
          }
          delete: {
            args: Prisma.OrderInvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          update: {
            args: Prisma.OrderInvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          deleteMany: {
            args: Prisma.OrderInvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderInvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderInvitationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>[]
          }
          upsert: {
            args: Prisma.OrderInvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderInvitationPayload>
          }
          aggregate: {
            args: Prisma.OrderInvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderInvitation>
          }
          groupBy: {
            args: Prisma.OrderInvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderInvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderInvitationCountArgs<ExtArgs>
            result: $Utils.Optional<OrderInvitationCountAggregateOutputType> | number
          }
        }
      }
      OrderStatusHistory: {
        payload: Prisma.$OrderStatusHistoryPayload<ExtArgs>
        fields: Prisma.OrderStatusHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderStatusHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          findFirst: {
            args: Prisma.OrderStatusHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          findMany: {
            args: Prisma.OrderStatusHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          create: {
            args: Prisma.OrderStatusHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          createMany: {
            args: Prisma.OrderStatusHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          delete: {
            args: Prisma.OrderStatusHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          update: {
            args: Prisma.OrderStatusHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          deleteMany: {
            args: Prisma.OrderStatusHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderStatusHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          upsert: {
            args: Prisma.OrderStatusHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          aggregate: {
            args: Prisma.OrderStatusHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderStatusHistory>
          }
          groupBy: {
            args: Prisma.OrderStatusHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderStatusHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderStatusHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<OrderStatusHistoryCountAggregateOutputType> | number
          }
        }
      }
      OrderReview: {
        payload: Prisma.$OrderReviewPayload<ExtArgs>
        fields: Prisma.OrderReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          findFirst: {
            args: Prisma.OrderReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          findMany: {
            args: Prisma.OrderReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>[]
          }
          create: {
            args: Prisma.OrderReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          createMany: {
            args: Prisma.OrderReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>[]
          }
          delete: {
            args: Prisma.OrderReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          update: {
            args: Prisma.OrderReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          deleteMany: {
            args: Prisma.OrderReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>[]
          }
          upsert: {
            args: Prisma.OrderReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderReviewPayload>
          }
          aggregate: {
            args: Prisma.OrderReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderReview>
          }
          groupBy: {
            args: Prisma.OrderReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderReviewCountArgs<ExtArgs>
            result: $Utils.Optional<OrderReviewCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      PaymentEvent: {
        payload: Prisma.$PaymentEventPayload<ExtArgs>
        fields: Prisma.PaymentEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findFirst: {
            args: Prisma.PaymentEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findMany: {
            args: Prisma.PaymentEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          create: {
            args: Prisma.PaymentEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          createMany: {
            args: Prisma.PaymentEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          delete: {
            args: Prisma.PaymentEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          update: {
            args: Prisma.PaymentEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          deleteMany: {
            args: Prisma.PaymentEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          upsert: {
            args: Prisma.PaymentEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          aggregate: {
            args: Prisma.PaymentEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentEvent>
          }
          groupBy: {
            args: Prisma.PaymentEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentEventCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventCountAggregateOutputType> | number
          }
        }
      }
      Commission: {
        payload: Prisma.$CommissionPayload<ExtArgs>
        fields: Prisma.CommissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          findFirst: {
            args: Prisma.CommissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          findMany: {
            args: Prisma.CommissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>[]
          }
          create: {
            args: Prisma.CommissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          createMany: {
            args: Prisma.CommissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>[]
          }
          delete: {
            args: Prisma.CommissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          update: {
            args: Prisma.CommissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          deleteMany: {
            args: Prisma.CommissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>[]
          }
          upsert: {
            args: Prisma.CommissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommissionPayload>
          }
          aggregate: {
            args: Prisma.CommissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommission>
          }
          groupBy: {
            args: Prisma.CommissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommissionCountArgs<ExtArgs>
            result: $Utils.Optional<CommissionCountAggregateOutputType> | number
          }
        }
      }
      ClientCredit: {
        payload: Prisma.$ClientCreditPayload<ExtArgs>
        fields: Prisma.ClientCreditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientCreditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientCreditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          findFirst: {
            args: Prisma.ClientCreditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientCreditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          findMany: {
            args: Prisma.ClientCreditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>[]
          }
          create: {
            args: Prisma.ClientCreditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          createMany: {
            args: Prisma.ClientCreditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreditCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>[]
          }
          delete: {
            args: Prisma.ClientCreditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          update: {
            args: Prisma.ClientCreditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          deleteMany: {
            args: Prisma.ClientCreditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientCreditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClientCreditUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>[]
          }
          upsert: {
            args: Prisma.ClientCreditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientCreditPayload>
          }
          aggregate: {
            args: Prisma.ClientCreditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientCredit>
          }
          groupBy: {
            args: Prisma.ClientCreditGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientCreditGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCreditCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCreditCountAggregateOutputType> | number
          }
        }
      }
      ProviderPayout: {
        payload: Prisma.$ProviderPayoutPayload<ExtArgs>
        fields: Prisma.ProviderPayoutFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProviderPayoutFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProviderPayoutFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          findFirst: {
            args: Prisma.ProviderPayoutFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProviderPayoutFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          findMany: {
            args: Prisma.ProviderPayoutFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>[]
          }
          create: {
            args: Prisma.ProviderPayoutCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          createMany: {
            args: Prisma.ProviderPayoutCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProviderPayoutCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>[]
          }
          delete: {
            args: Prisma.ProviderPayoutDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          update: {
            args: Prisma.ProviderPayoutUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          deleteMany: {
            args: Prisma.ProviderPayoutDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProviderPayoutUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProviderPayoutUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>[]
          }
          upsert: {
            args: Prisma.ProviderPayoutUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProviderPayoutPayload>
          }
          aggregate: {
            args: Prisma.ProviderPayoutAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviderPayout>
          }
          groupBy: {
            args: Prisma.ProviderPayoutGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProviderPayoutGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProviderPayoutCountArgs<ExtArgs>
            result: $Utils.Optional<ProviderPayoutCountAggregateOutputType> | number
          }
        }
      }
      MatchScore: {
        payload: Prisma.$MatchScorePayload<ExtArgs>
        fields: Prisma.MatchScoreFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MatchScoreFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MatchScoreFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          findFirst: {
            args: Prisma.MatchScoreFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MatchScoreFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          findMany: {
            args: Prisma.MatchScoreFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>[]
          }
          create: {
            args: Prisma.MatchScoreCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          createMany: {
            args: Prisma.MatchScoreCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MatchScoreCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>[]
          }
          delete: {
            args: Prisma.MatchScoreDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          update: {
            args: Prisma.MatchScoreUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          deleteMany: {
            args: Prisma.MatchScoreDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MatchScoreUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MatchScoreUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>[]
          }
          upsert: {
            args: Prisma.MatchScoreUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatchScorePayload>
          }
          aggregate: {
            args: Prisma.MatchScoreAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMatchScore>
          }
          groupBy: {
            args: Prisma.MatchScoreGroupByArgs<ExtArgs>
            result: $Utils.Optional<MatchScoreGroupByOutputType>[]
          }
          count: {
            args: Prisma.MatchScoreCountArgs<ExtArgs>
            result: $Utils.Optional<MatchScoreCountAggregateOutputType> | number
          }
        }
      }
      LlmClassification: {
        payload: Prisma.$LlmClassificationPayload<ExtArgs>
        fields: Prisma.LlmClassificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LlmClassificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LlmClassificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          findFirst: {
            args: Prisma.LlmClassificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LlmClassificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          findMany: {
            args: Prisma.LlmClassificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>[]
          }
          create: {
            args: Prisma.LlmClassificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          createMany: {
            args: Prisma.LlmClassificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LlmClassificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>[]
          }
          delete: {
            args: Prisma.LlmClassificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          update: {
            args: Prisma.LlmClassificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          deleteMany: {
            args: Prisma.LlmClassificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LlmClassificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LlmClassificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>[]
          }
          upsert: {
            args: Prisma.LlmClassificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LlmClassificationPayload>
          }
          aggregate: {
            args: Prisma.LlmClassificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLlmClassification>
          }
          groupBy: {
            args: Prisma.LlmClassificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LlmClassificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LlmClassificationCountArgs<ExtArgs>
            result: $Utils.Optional<LlmClassificationCountAggregateOutputType> | number
          }
        }
      }
      RefusalRule: {
        payload: Prisma.$RefusalRulePayload<ExtArgs>
        fields: Prisma.RefusalRuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefusalRuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefusalRuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          findFirst: {
            args: Prisma.RefusalRuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefusalRuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          findMany: {
            args: Prisma.RefusalRuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>[]
          }
          create: {
            args: Prisma.RefusalRuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          createMany: {
            args: Prisma.RefusalRuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefusalRuleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>[]
          }
          delete: {
            args: Prisma.RefusalRuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          update: {
            args: Prisma.RefusalRuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          deleteMany: {
            args: Prisma.RefusalRuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefusalRuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefusalRuleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>[]
          }
          upsert: {
            args: Prisma.RefusalRuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefusalRulePayload>
          }
          aggregate: {
            args: Prisma.RefusalRuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefusalRule>
          }
          groupBy: {
            args: Prisma.RefusalRuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefusalRuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefusalRuleCountArgs<ExtArgs>
            result: $Utils.Optional<RefusalRuleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    role?: RoleOmit
    userRoleAssignment?: UserRoleAssignmentOmit
    session?: SessionOmit
    account?: AccountOmit
    verification?: VerificationOmit
    providerRequest?: ProviderRequestOmit
    address?: AddressOmit
    providerProfile?: ProviderProfileOmit
    providerAvailability?: ProviderAvailabilityOmit
    providerCategory?: ProviderCategoryOmit
    category?: CategoryOmit
    order?: OrderOmit
    orderSlot?: OrderSlotOmit
    orderCategory?: OrderCategoryOmit
    orderInvitation?: OrderInvitationOmit
    orderStatusHistory?: OrderStatusHistoryOmit
    orderReview?: OrderReviewOmit
    payment?: PaymentOmit
    paymentEvent?: PaymentEventOmit
    commission?: CommissionOmit
    clientCredit?: ClientCreditOmit
    providerPayout?: ProviderPayoutOmit
    matchScore?: MatchScoreOmit
    llmClassification?: LlmClassificationOmit
    refusalRule?: RefusalRuleOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    sessions: number
    userRoles: number
    addresses: number
    providerRequests: number
    reviewedRequests: number
    providerAvailability: number
    providerCategories: number
    providerPayouts: number
    clientCredits: number
    ordersAsClient: number
    ordersAsProvider: number
    orderInvitations: number
    orderReviewsAsClient: number
    orderReviewsAsProvider: number
    orderStatusHistory: number
    matchScores: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    userRoles?: boolean | UserCountOutputTypeCountUserRolesArgs
    addresses?: boolean | UserCountOutputTypeCountAddressesArgs
    providerRequests?: boolean | UserCountOutputTypeCountProviderRequestsArgs
    reviewedRequests?: boolean | UserCountOutputTypeCountReviewedRequestsArgs
    providerAvailability?: boolean | UserCountOutputTypeCountProviderAvailabilityArgs
    providerCategories?: boolean | UserCountOutputTypeCountProviderCategoriesArgs
    providerPayouts?: boolean | UserCountOutputTypeCountProviderPayoutsArgs
    clientCredits?: boolean | UserCountOutputTypeCountClientCreditsArgs
    ordersAsClient?: boolean | UserCountOutputTypeCountOrdersAsClientArgs
    ordersAsProvider?: boolean | UserCountOutputTypeCountOrdersAsProviderArgs
    orderInvitations?: boolean | UserCountOutputTypeCountOrderInvitationsArgs
    orderReviewsAsClient?: boolean | UserCountOutputTypeCountOrderReviewsAsClientArgs
    orderReviewsAsProvider?: boolean | UserCountOutputTypeCountOrderReviewsAsProviderArgs
    orderStatusHistory?: boolean | UserCountOutputTypeCountOrderStatusHistoryArgs
    matchScores?: boolean | UserCountOutputTypeCountMatchScoresArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProviderRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProviderAvailabilityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderAvailabilityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProviderCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderCategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProviderPayoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderPayoutWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountClientCreditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCreditWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersAsClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersAsProviderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderInvitationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderReviewsAsClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderReviewsAsProviderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderStatusHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMatchScoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatchScoreWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    userRoles: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | RoleCountOutputTypeCountUserRolesArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleAssignmentWhereInput
  }


  /**
   * Count Type AddressCountOutputType
   */

  export type AddressCountOutputType = {
    orders: number
  }

  export type AddressCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | AddressCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressCountOutputType
     */
    select?: AddressCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    orders: number
    providerCategories: number
    llmClassifications: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | CategoryCountOutputTypeCountOrdersArgs
    providerCategories?: boolean | CategoryCountOutputTypeCountProviderCategoriesArgs
    llmClassifications?: boolean | CategoryCountOutputTypeCountLlmClassificationsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProviderCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderCategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountLlmClassificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmClassificationWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    orderSlots: number
    orderCategories: number
    orderInvitations: number
    orderStatusHistory: number
    payments: number
    paymentEvents: number
    clientCredits: number
    matchScores: number
    llmClassifications: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderSlots?: boolean | OrderCountOutputTypeCountOrderSlotsArgs
    orderCategories?: boolean | OrderCountOutputTypeCountOrderCategoriesArgs
    orderInvitations?: boolean | OrderCountOutputTypeCountOrderInvitationsArgs
    orderStatusHistory?: boolean | OrderCountOutputTypeCountOrderStatusHistoryArgs
    payments?: boolean | OrderCountOutputTypeCountPaymentsArgs
    paymentEvents?: boolean | OrderCountOutputTypeCountPaymentEventsArgs
    clientCredits?: boolean | OrderCountOutputTypeCountClientCreditsArgs
    matchScores?: boolean | OrderCountOutputTypeCountMatchScoresArgs
    llmClassifications?: boolean | OrderCountOutputTypeCountLlmClassificationsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderSlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderSlotWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderCategoryWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderInvitationWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderStatusHistoryWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountPaymentEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountClientCreditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCreditWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountMatchScoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatchScoreWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountLlmClassificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmClassificationWhereInput
  }


  /**
   * Count Type OrderSlotCountOutputType
   */

  export type OrderSlotCountOutputType = {
    invitations: number
  }

  export type OrderSlotCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invitations?: boolean | OrderSlotCountOutputTypeCountInvitationsArgs
  }

  // Custom InputTypes
  /**
   * OrderSlotCountOutputType without action
   */
  export type OrderSlotCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlotCountOutputType
     */
    select?: OrderSlotCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderSlotCountOutputType without action
   */
  export type OrderSlotCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderInvitationWhereInput
  }


  /**
   * Count Type PaymentCountOutputType
   */

  export type PaymentCountOutputType = {
    paymentEvents: number
  }

  export type PaymentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentEvents?: boolean | PaymentCountOutputTypeCountPaymentEventsArgs
  }

  // Custom InputTypes
  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentCountOutputType
     */
    select?: PaymentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeCountPaymentEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    role: string | null
    phoneE164: string | null
    whatsappId: string | null
    cpf: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    role: string | null
    phoneE164: string | null
    whatsappId: string | null
    cpf: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    emailVerified: number
    image: number
    role: number
    phoneE164: number
    whatsappId: number
    cpf: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    role?: true
    phoneE164?: true
    whatsappId?: true
    cpf?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    role?: true
    phoneE164?: true
    whatsappId?: true
    cpf?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    role?: true
    phoneE164?: true
    whatsappId?: true
    cpf?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    email: string | null
    emailVerified: boolean
    image: string | null
    role: string | null
    phoneE164: string | null
    whatsappId: string | null
    cpf: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    role?: boolean
    phoneE164?: boolean
    whatsappId?: boolean
    cpf?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    userRoles?: boolean | User$userRolesArgs<ExtArgs>
    addresses?: boolean | User$addressesArgs<ExtArgs>
    providerRequests?: boolean | User$providerRequestsArgs<ExtArgs>
    reviewedRequests?: boolean | User$reviewedRequestsArgs<ExtArgs>
    providerProfile?: boolean | User$providerProfileArgs<ExtArgs>
    providerAvailability?: boolean | User$providerAvailabilityArgs<ExtArgs>
    providerCategories?: boolean | User$providerCategoriesArgs<ExtArgs>
    providerPayouts?: boolean | User$providerPayoutsArgs<ExtArgs>
    clientCredits?: boolean | User$clientCreditsArgs<ExtArgs>
    ordersAsClient?: boolean | User$ordersAsClientArgs<ExtArgs>
    ordersAsProvider?: boolean | User$ordersAsProviderArgs<ExtArgs>
    orderInvitations?: boolean | User$orderInvitationsArgs<ExtArgs>
    orderReviewsAsClient?: boolean | User$orderReviewsAsClientArgs<ExtArgs>
    orderReviewsAsProvider?: boolean | User$orderReviewsAsProviderArgs<ExtArgs>
    orderStatusHistory?: boolean | User$orderStatusHistoryArgs<ExtArgs>
    matchScores?: boolean | User$matchScoresArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    role?: boolean
    phoneE164?: boolean
    whatsappId?: boolean
    cpf?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    role?: boolean
    phoneE164?: boolean
    whatsappId?: boolean
    cpf?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    role?: boolean
    phoneE164?: boolean
    whatsappId?: boolean
    cpf?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "emailVerified" | "image" | "role" | "phoneE164" | "whatsappId" | "cpf" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    userRoles?: boolean | User$userRolesArgs<ExtArgs>
    addresses?: boolean | User$addressesArgs<ExtArgs>
    providerRequests?: boolean | User$providerRequestsArgs<ExtArgs>
    reviewedRequests?: boolean | User$reviewedRequestsArgs<ExtArgs>
    providerProfile?: boolean | User$providerProfileArgs<ExtArgs>
    providerAvailability?: boolean | User$providerAvailabilityArgs<ExtArgs>
    providerCategories?: boolean | User$providerCategoriesArgs<ExtArgs>
    providerPayouts?: boolean | User$providerPayoutsArgs<ExtArgs>
    clientCredits?: boolean | User$clientCreditsArgs<ExtArgs>
    ordersAsClient?: boolean | User$ordersAsClientArgs<ExtArgs>
    ordersAsProvider?: boolean | User$ordersAsProviderArgs<ExtArgs>
    orderInvitations?: boolean | User$orderInvitationsArgs<ExtArgs>
    orderReviewsAsClient?: boolean | User$orderReviewsAsClientArgs<ExtArgs>
    orderReviewsAsProvider?: boolean | User$orderReviewsAsProviderArgs<ExtArgs>
    orderStatusHistory?: boolean | User$orderStatusHistoryArgs<ExtArgs>
    matchScores?: boolean | User$matchScoresArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      userRoles: Prisma.$UserRoleAssignmentPayload<ExtArgs>[]
      addresses: Prisma.$AddressPayload<ExtArgs>[]
      providerRequests: Prisma.$ProviderRequestPayload<ExtArgs>[]
      reviewedRequests: Prisma.$ProviderRequestPayload<ExtArgs>[]
      providerProfile: Prisma.$ProviderProfilePayload<ExtArgs> | null
      providerAvailability: Prisma.$ProviderAvailabilityPayload<ExtArgs>[]
      providerCategories: Prisma.$ProviderCategoryPayload<ExtArgs>[]
      providerPayouts: Prisma.$ProviderPayoutPayload<ExtArgs>[]
      clientCredits: Prisma.$ClientCreditPayload<ExtArgs>[]
      ordersAsClient: Prisma.$OrderPayload<ExtArgs>[]
      ordersAsProvider: Prisma.$OrderPayload<ExtArgs>[]
      orderInvitations: Prisma.$OrderInvitationPayload<ExtArgs>[]
      orderReviewsAsClient: Prisma.$OrderReviewPayload<ExtArgs>[]
      orderReviewsAsProvider: Prisma.$OrderReviewPayload<ExtArgs>[]
      orderStatusHistory: Prisma.$OrderStatusHistoryPayload<ExtArgs>[]
      matchScores: Prisma.$MatchScorePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string | null
      emailVerified: boolean
      image: string | null
      role: string | null
      phoneE164: string | null
      whatsappId: string | null
      cpf: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userRoles<T extends User$userRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$userRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    addresses<T extends User$addressesArgs<ExtArgs> = {}>(args?: Subset<T, User$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerRequests<T extends User$providerRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$providerRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviewedRequests<T extends User$reviewedRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerProfile<T extends User$providerProfileArgs<ExtArgs> = {}>(args?: Subset<T, User$providerProfileArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    providerAvailability<T extends User$providerAvailabilityArgs<ExtArgs> = {}>(args?: Subset<T, User$providerAvailabilityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerCategories<T extends User$providerCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$providerCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerPayouts<T extends User$providerPayoutsArgs<ExtArgs> = {}>(args?: Subset<T, User$providerPayoutsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clientCredits<T extends User$clientCreditsArgs<ExtArgs> = {}>(args?: Subset<T, User$clientCreditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordersAsClient<T extends User$ordersAsClientArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersAsClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordersAsProvider<T extends User$ordersAsProviderArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersAsProviderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderInvitations<T extends User$orderInvitationsArgs<ExtArgs> = {}>(args?: Subset<T, User$orderInvitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderReviewsAsClient<T extends User$orderReviewsAsClientArgs<ExtArgs> = {}>(args?: Subset<T, User$orderReviewsAsClientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderReviewsAsProvider<T extends User$orderReviewsAsProviderArgs<ExtArgs> = {}>(args?: Subset<T, User$orderReviewsAsProviderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderStatusHistory<T extends User$orderStatusHistoryArgs<ExtArgs> = {}>(args?: Subset<T, User$orderStatusHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    matchScores<T extends User$matchScoresArgs<ExtArgs> = {}>(args?: Subset<T, User$matchScoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly image: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly phoneE164: FieldRef<"User", 'String'>
    readonly whatsappId: FieldRef<"User", 'String'>
    readonly cpf: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.userRoles
   */
  export type User$userRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    where?: UserRoleAssignmentWhereInput
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    cursor?: UserRoleAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRoleAssignmentScalarFieldEnum | UserRoleAssignmentScalarFieldEnum[]
  }

  /**
   * User.addresses
   */
  export type User$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    cursor?: AddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * User.providerRequests
   */
  export type User$providerRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    where?: ProviderRequestWhereInput
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    cursor?: ProviderRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderRequestScalarFieldEnum | ProviderRequestScalarFieldEnum[]
  }

  /**
   * User.reviewedRequests
   */
  export type User$reviewedRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    where?: ProviderRequestWhereInput
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    cursor?: ProviderRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderRequestScalarFieldEnum | ProviderRequestScalarFieldEnum[]
  }

  /**
   * User.providerProfile
   */
  export type User$providerProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    where?: ProviderProfileWhereInput
  }

  /**
   * User.providerAvailability
   */
  export type User$providerAvailabilityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    where?: ProviderAvailabilityWhereInput
    orderBy?: ProviderAvailabilityOrderByWithRelationInput | ProviderAvailabilityOrderByWithRelationInput[]
    cursor?: ProviderAvailabilityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderAvailabilityScalarFieldEnum | ProviderAvailabilityScalarFieldEnum[]
  }

  /**
   * User.providerCategories
   */
  export type User$providerCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    where?: ProviderCategoryWhereInput
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    cursor?: ProviderCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderCategoryScalarFieldEnum | ProviderCategoryScalarFieldEnum[]
  }

  /**
   * User.providerPayouts
   */
  export type User$providerPayoutsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    where?: ProviderPayoutWhereInput
    orderBy?: ProviderPayoutOrderByWithRelationInput | ProviderPayoutOrderByWithRelationInput[]
    cursor?: ProviderPayoutWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderPayoutScalarFieldEnum | ProviderPayoutScalarFieldEnum[]
  }

  /**
   * User.clientCredits
   */
  export type User$clientCreditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    where?: ClientCreditWhereInput
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    cursor?: ClientCreditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientCreditScalarFieldEnum | ClientCreditScalarFieldEnum[]
  }

  /**
   * User.ordersAsClient
   */
  export type User$ordersAsClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.ordersAsProvider
   */
  export type User$ordersAsProviderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.orderInvitations
   */
  export type User$orderInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    where?: OrderInvitationWhereInput
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    cursor?: OrderInvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * User.orderReviewsAsClient
   */
  export type User$orderReviewsAsClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    where?: OrderReviewWhereInput
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    cursor?: OrderReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderReviewScalarFieldEnum | OrderReviewScalarFieldEnum[]
  }

  /**
   * User.orderReviewsAsProvider
   */
  export type User$orderReviewsAsProviderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    where?: OrderReviewWhereInput
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    cursor?: OrderReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderReviewScalarFieldEnum | OrderReviewScalarFieldEnum[]
  }

  /**
   * User.orderStatusHistory
   */
  export type User$orderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    where?: OrderStatusHistoryWhereInput
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    cursor?: OrderStatusHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * User.matchScores
   */
  export type User$matchScoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    where?: MatchScoreWhereInput
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    cursor?: MatchScoreWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MatchScoreScalarFieldEnum | MatchScoreScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    id: string | null
    name: $Enums.UserRole | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: string | null
    name: $Enums.UserRole | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: string
    name: $Enums.UserRole
    createdAt: Date
    updatedAt: Date
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userRoles?: boolean | Role$userRolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdAt" | "updatedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | Role$userRolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      userRoles: Prisma.$UserRoleAssignmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: $Enums.UserRole
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userRoles<T extends Role$userRolesArgs<ExtArgs> = {}>(args?: Subset<T, Role$userRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'String'>
    readonly name: FieldRef<"Role", 'UserRole'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.userRoles
   */
  export type Role$userRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    where?: UserRoleAssignmentWhereInput
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    cursor?: UserRoleAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRoleAssignmentScalarFieldEnum | UserRoleAssignmentScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model UserRoleAssignment
   */

  export type AggregateUserRoleAssignment = {
    _count: UserRoleAssignmentCountAggregateOutputType | null
    _min: UserRoleAssignmentMinAggregateOutputType | null
    _max: UserRoleAssignmentMaxAggregateOutputType | null
  }

  export type UserRoleAssignmentMinAggregateOutputType = {
    id: string | null
    userId: string | null
    roleId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserRoleAssignmentMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    roleId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserRoleAssignmentCountAggregateOutputType = {
    id: number
    userId: number
    roleId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserRoleAssignmentMinAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserRoleAssignmentMaxAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserRoleAssignmentCountAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserRoleAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRoleAssignment to aggregate.
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoleAssignments to fetch.
     */
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserRoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserRoleAssignments
    **/
    _count?: true | UserRoleAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserRoleAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserRoleAssignmentMaxAggregateInputType
  }

  export type GetUserRoleAssignmentAggregateType<T extends UserRoleAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateUserRoleAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserRoleAssignment[P]>
      : GetScalarType<T[P], AggregateUserRoleAssignment[P]>
  }




  export type UserRoleAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleAssignmentWhereInput
    orderBy?: UserRoleAssignmentOrderByWithAggregationInput | UserRoleAssignmentOrderByWithAggregationInput[]
    by: UserRoleAssignmentScalarFieldEnum[] | UserRoleAssignmentScalarFieldEnum
    having?: UserRoleAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserRoleAssignmentCountAggregateInputType | true
    _min?: UserRoleAssignmentMinAggregateInputType
    _max?: UserRoleAssignmentMaxAggregateInputType
  }

  export type UserRoleAssignmentGroupByOutputType = {
    id: string
    userId: string
    roleId: string
    createdAt: Date
    updatedAt: Date
    _count: UserRoleAssignmentCountAggregateOutputType | null
    _min: UserRoleAssignmentMinAggregateOutputType | null
    _max: UserRoleAssignmentMaxAggregateOutputType | null
  }

  type GetUserRoleAssignmentGroupByPayload<T extends UserRoleAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserRoleAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserRoleAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserRoleAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], UserRoleAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type UserRoleAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    roleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRoleAssignment"]>

  export type UserRoleAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    roleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRoleAssignment"]>

  export type UserRoleAssignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    roleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRoleAssignment"]>

  export type UserRoleAssignmentSelectScalar = {
    id?: boolean
    userId?: boolean
    roleId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserRoleAssignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "roleId" | "createdAt" | "updatedAt", ExtArgs["result"]["userRoleAssignment"]>
  export type UserRoleAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserRoleAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserRoleAssignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserRoleAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserRoleAssignment"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      roleId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userRoleAssignment"]>
    composites: {}
  }

  type UserRoleAssignmentGetPayload<S extends boolean | null | undefined | UserRoleAssignmentDefaultArgs> = $Result.GetResult<Prisma.$UserRoleAssignmentPayload, S>

  type UserRoleAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserRoleAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserRoleAssignmentCountAggregateInputType | true
    }

  export interface UserRoleAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserRoleAssignment'], meta: { name: 'UserRoleAssignment' } }
    /**
     * Find zero or one UserRoleAssignment that matches the filter.
     * @param {UserRoleAssignmentFindUniqueArgs} args - Arguments to find a UserRoleAssignment
     * @example
     * // Get one UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserRoleAssignmentFindUniqueArgs>(args: SelectSubset<T, UserRoleAssignmentFindUniqueArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserRoleAssignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserRoleAssignmentFindUniqueOrThrowArgs} args - Arguments to find a UserRoleAssignment
     * @example
     * // Get one UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserRoleAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, UserRoleAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRoleAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentFindFirstArgs} args - Arguments to find a UserRoleAssignment
     * @example
     * // Get one UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserRoleAssignmentFindFirstArgs>(args?: SelectSubset<T, UserRoleAssignmentFindFirstArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRoleAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentFindFirstOrThrowArgs} args - Arguments to find a UserRoleAssignment
     * @example
     * // Get one UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserRoleAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, UserRoleAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserRoleAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserRoleAssignments
     * const userRoleAssignments = await prisma.userRoleAssignment.findMany()
     * 
     * // Get first 10 UserRoleAssignments
     * const userRoleAssignments = await prisma.userRoleAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userRoleAssignmentWithIdOnly = await prisma.userRoleAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserRoleAssignmentFindManyArgs>(args?: SelectSubset<T, UserRoleAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserRoleAssignment.
     * @param {UserRoleAssignmentCreateArgs} args - Arguments to create a UserRoleAssignment.
     * @example
     * // Create one UserRoleAssignment
     * const UserRoleAssignment = await prisma.userRoleAssignment.create({
     *   data: {
     *     // ... data to create a UserRoleAssignment
     *   }
     * })
     * 
     */
    create<T extends UserRoleAssignmentCreateArgs>(args: SelectSubset<T, UserRoleAssignmentCreateArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserRoleAssignments.
     * @param {UserRoleAssignmentCreateManyArgs} args - Arguments to create many UserRoleAssignments.
     * @example
     * // Create many UserRoleAssignments
     * const userRoleAssignment = await prisma.userRoleAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserRoleAssignmentCreateManyArgs>(args?: SelectSubset<T, UserRoleAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserRoleAssignments and returns the data saved in the database.
     * @param {UserRoleAssignmentCreateManyAndReturnArgs} args - Arguments to create many UserRoleAssignments.
     * @example
     * // Create many UserRoleAssignments
     * const userRoleAssignment = await prisma.userRoleAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserRoleAssignments and only return the `id`
     * const userRoleAssignmentWithIdOnly = await prisma.userRoleAssignment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserRoleAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, UserRoleAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserRoleAssignment.
     * @param {UserRoleAssignmentDeleteArgs} args - Arguments to delete one UserRoleAssignment.
     * @example
     * // Delete one UserRoleAssignment
     * const UserRoleAssignment = await prisma.userRoleAssignment.delete({
     *   where: {
     *     // ... filter to delete one UserRoleAssignment
     *   }
     * })
     * 
     */
    delete<T extends UserRoleAssignmentDeleteArgs>(args: SelectSubset<T, UserRoleAssignmentDeleteArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserRoleAssignment.
     * @param {UserRoleAssignmentUpdateArgs} args - Arguments to update one UserRoleAssignment.
     * @example
     * // Update one UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserRoleAssignmentUpdateArgs>(args: SelectSubset<T, UserRoleAssignmentUpdateArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserRoleAssignments.
     * @param {UserRoleAssignmentDeleteManyArgs} args - Arguments to filter UserRoleAssignments to delete.
     * @example
     * // Delete a few UserRoleAssignments
     * const { count } = await prisma.userRoleAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserRoleAssignmentDeleteManyArgs>(args?: SelectSubset<T, UserRoleAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserRoleAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserRoleAssignments
     * const userRoleAssignment = await prisma.userRoleAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserRoleAssignmentUpdateManyArgs>(args: SelectSubset<T, UserRoleAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserRoleAssignments and returns the data updated in the database.
     * @param {UserRoleAssignmentUpdateManyAndReturnArgs} args - Arguments to update many UserRoleAssignments.
     * @example
     * // Update many UserRoleAssignments
     * const userRoleAssignment = await prisma.userRoleAssignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserRoleAssignments and only return the `id`
     * const userRoleAssignmentWithIdOnly = await prisma.userRoleAssignment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserRoleAssignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, UserRoleAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserRoleAssignment.
     * @param {UserRoleAssignmentUpsertArgs} args - Arguments to update or create a UserRoleAssignment.
     * @example
     * // Update or create a UserRoleAssignment
     * const userRoleAssignment = await prisma.userRoleAssignment.upsert({
     *   create: {
     *     // ... data to create a UserRoleAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserRoleAssignment we want to update
     *   }
     * })
     */
    upsert<T extends UserRoleAssignmentUpsertArgs>(args: SelectSubset<T, UserRoleAssignmentUpsertArgs<ExtArgs>>): Prisma__UserRoleAssignmentClient<$Result.GetResult<Prisma.$UserRoleAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserRoleAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentCountArgs} args - Arguments to filter UserRoleAssignments to count.
     * @example
     * // Count the number of UserRoleAssignments
     * const count = await prisma.userRoleAssignment.count({
     *   where: {
     *     // ... the filter for the UserRoleAssignments we want to count
     *   }
     * })
    **/
    count<T extends UserRoleAssignmentCountArgs>(
      args?: Subset<T, UserRoleAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserRoleAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserRoleAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserRoleAssignmentAggregateArgs>(args: Subset<T, UserRoleAssignmentAggregateArgs>): Prisma.PrismaPromise<GetUserRoleAssignmentAggregateType<T>>

    /**
     * Group by UserRoleAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserRoleAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserRoleAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: UserRoleAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserRoleAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserRoleAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserRoleAssignment model
   */
  readonly fields: UserRoleAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserRoleAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserRoleAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserRoleAssignment model
   */
  interface UserRoleAssignmentFieldRefs {
    readonly id: FieldRef<"UserRoleAssignment", 'String'>
    readonly userId: FieldRef<"UserRoleAssignment", 'String'>
    readonly roleId: FieldRef<"UserRoleAssignment", 'String'>
    readonly createdAt: FieldRef<"UserRoleAssignment", 'DateTime'>
    readonly updatedAt: FieldRef<"UserRoleAssignment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserRoleAssignment findUnique
   */
  export type UserRoleAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which UserRoleAssignment to fetch.
     */
    where: UserRoleAssignmentWhereUniqueInput
  }

  /**
   * UserRoleAssignment findUniqueOrThrow
   */
  export type UserRoleAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which UserRoleAssignment to fetch.
     */
    where: UserRoleAssignmentWhereUniqueInput
  }

  /**
   * UserRoleAssignment findFirst
   */
  export type UserRoleAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which UserRoleAssignment to fetch.
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoleAssignments to fetch.
     */
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRoleAssignments.
     */
    cursor?: UserRoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRoleAssignments.
     */
    distinct?: UserRoleAssignmentScalarFieldEnum | UserRoleAssignmentScalarFieldEnum[]
  }

  /**
   * UserRoleAssignment findFirstOrThrow
   */
  export type UserRoleAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which UserRoleAssignment to fetch.
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoleAssignments to fetch.
     */
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRoleAssignments.
     */
    cursor?: UserRoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoleAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRoleAssignments.
     */
    distinct?: UserRoleAssignmentScalarFieldEnum | UserRoleAssignmentScalarFieldEnum[]
  }

  /**
   * UserRoleAssignment findMany
   */
  export type UserRoleAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which UserRoleAssignments to fetch.
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoleAssignments to fetch.
     */
    orderBy?: UserRoleAssignmentOrderByWithRelationInput | UserRoleAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserRoleAssignments.
     */
    cursor?: UserRoleAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoleAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoleAssignments.
     */
    skip?: number
    distinct?: UserRoleAssignmentScalarFieldEnum | UserRoleAssignmentScalarFieldEnum[]
  }

  /**
   * UserRoleAssignment create
   */
  export type UserRoleAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a UserRoleAssignment.
     */
    data: XOR<UserRoleAssignmentCreateInput, UserRoleAssignmentUncheckedCreateInput>
  }

  /**
   * UserRoleAssignment createMany
   */
  export type UserRoleAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserRoleAssignments.
     */
    data: UserRoleAssignmentCreateManyInput | UserRoleAssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserRoleAssignment createManyAndReturn
   */
  export type UserRoleAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * The data used to create many UserRoleAssignments.
     */
    data: UserRoleAssignmentCreateManyInput | UserRoleAssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserRoleAssignment update
   */
  export type UserRoleAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a UserRoleAssignment.
     */
    data: XOR<UserRoleAssignmentUpdateInput, UserRoleAssignmentUncheckedUpdateInput>
    /**
     * Choose, which UserRoleAssignment to update.
     */
    where: UserRoleAssignmentWhereUniqueInput
  }

  /**
   * UserRoleAssignment updateMany
   */
  export type UserRoleAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserRoleAssignments.
     */
    data: XOR<UserRoleAssignmentUpdateManyMutationInput, UserRoleAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which UserRoleAssignments to update
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * Limit how many UserRoleAssignments to update.
     */
    limit?: number
  }

  /**
   * UserRoleAssignment updateManyAndReturn
   */
  export type UserRoleAssignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * The data used to update UserRoleAssignments.
     */
    data: XOR<UserRoleAssignmentUpdateManyMutationInput, UserRoleAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which UserRoleAssignments to update
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * Limit how many UserRoleAssignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserRoleAssignment upsert
   */
  export type UserRoleAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the UserRoleAssignment to update in case it exists.
     */
    where: UserRoleAssignmentWhereUniqueInput
    /**
     * In case the UserRoleAssignment found by the `where` argument doesn't exist, create a new UserRoleAssignment with this data.
     */
    create: XOR<UserRoleAssignmentCreateInput, UserRoleAssignmentUncheckedCreateInput>
    /**
     * In case the UserRoleAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserRoleAssignmentUpdateInput, UserRoleAssignmentUncheckedUpdateInput>
  }

  /**
   * UserRoleAssignment delete
   */
  export type UserRoleAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
    /**
     * Filter which UserRoleAssignment to delete.
     */
    where: UserRoleAssignmentWhereUniqueInput
  }

  /**
   * UserRoleAssignment deleteMany
   */
  export type UserRoleAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRoleAssignments to delete
     */
    where?: UserRoleAssignmentWhereInput
    /**
     * Limit how many UserRoleAssignments to delete.
     */
    limit?: number
  }

  /**
   * UserRoleAssignment without action
   */
  export type UserRoleAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRoleAssignment
     */
    select?: UserRoleAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRoleAssignment
     */
    omit?: UserRoleAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleAssignmentInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    expiresAt: Date | null
    token: string | null
    createdAt: Date | null
    updatedAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    expiresAt: Date | null
    token: string | null
    createdAt: Date | null
    updatedAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    expiresAt: number
    token: number
    createdAt: number
    updatedAt: number
    ipAddress: number
    userAgent: number
    userId: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    expiresAt: Date
    token: string
    createdAt: Date
    updatedAt: Date
    ipAddress: string | null
    userAgent: string | null
    userId: string
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "expiresAt" | "token" | "createdAt" | "updatedAt" | "ipAddress" | "userAgent" | "userId", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      expiresAt: Date
      token: string
      createdAt: Date
      updatedAt: Date
      ipAddress: string | null
      userAgent: string | null
      userId: string
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly token: FieldRef<"Session", 'String'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
    readonly ipAddress: FieldRef<"Session", 'String'>
    readonly userAgent: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    accountId: string | null
    providerId: string | null
    userId: string | null
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    accountId: string | null
    providerId: string | null
    userId: string | null
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    accountId: number
    providerId: number
    userId: number
    accessToken: number
    refreshToken: number
    idToken: number
    accessTokenExpiresAt: number
    refreshTokenExpiresAt: number
    scope: number
    password: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountMinAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "accountId" | "providerId" | "userId" | "accessToken" | "refreshToken" | "idToken" | "accessTokenExpiresAt" | "refreshTokenExpiresAt" | "scope" | "password" | "createdAt" | "updatedAt", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountId: string
      providerId: string
      userId: string
      accessToken: string | null
      refreshToken: string | null
      idToken: string | null
      accessTokenExpiresAt: Date | null
      refreshTokenExpiresAt: Date | null
      scope: string | null
      password: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly accountId: FieldRef<"Account", 'String'>
    readonly providerId: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly accessToken: FieldRef<"Account", 'String'>
    readonly refreshToken: FieldRef<"Account", 'String'>
    readonly idToken: FieldRef<"Account", 'String'>
    readonly accessTokenExpiresAt: FieldRef<"Account", 'DateTime'>
    readonly refreshTokenExpiresAt: FieldRef<"Account", 'DateTime'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly password: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Verification
   */

  export type AggregateVerification = {
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  export type VerificationMinAggregateOutputType = {
    id: string | null
    identifier: string | null
    value: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationMaxAggregateOutputType = {
    id: string | null
    identifier: string | null
    value: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationCountAggregateOutputType = {
    id: number
    identifier: number
    value: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VerificationMinAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationMaxAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationCountAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VerificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verification to aggregate.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Verifications
    **/
    _count?: true | VerificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationMaxAggregateInputType
  }

  export type GetVerificationAggregateType<T extends VerificationAggregateArgs> = {
        [P in keyof T & keyof AggregateVerification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerification[P]>
      : GetScalarType<T[P], AggregateVerification[P]>
  }




  export type VerificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationWhereInput
    orderBy?: VerificationOrderByWithAggregationInput | VerificationOrderByWithAggregationInput[]
    by: VerificationScalarFieldEnum[] | VerificationScalarFieldEnum
    having?: VerificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationCountAggregateInputType | true
    _min?: VerificationMinAggregateInputType
    _max?: VerificationMaxAggregateInputType
  }

  export type VerificationGroupByOutputType = {
    id: string
    identifier: string
    value: string
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  type GetVerificationGroupByPayload<T extends VerificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationGroupByOutputType[P]>
        }
      >
    >


  export type VerificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectScalar = {
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VerificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "identifier" | "value" | "expiresAt" | "createdAt" | "updatedAt", ExtArgs["result"]["verification"]>

  export type $VerificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Verification"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      identifier: string
      value: string
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["verification"]>
    composites: {}
  }

  type VerificationGetPayload<S extends boolean | null | undefined | VerificationDefaultArgs> = $Result.GetResult<Prisma.$VerificationPayload, S>

  type VerificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationCountAggregateInputType | true
    }

  export interface VerificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Verification'], meta: { name: 'Verification' } }
    /**
     * Find zero or one Verification that matches the filter.
     * @param {VerificationFindUniqueArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationFindUniqueArgs>(args: SelectSubset<T, VerificationFindUniqueArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Verification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationFindUniqueOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Verification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationFindFirstArgs>(args?: SelectSubset<T, VerificationFindFirstArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Verification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Verifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Verifications
     * const verifications = await prisma.verification.findMany()
     * 
     * // Get first 10 Verifications
     * const verifications = await prisma.verification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationWithIdOnly = await prisma.verification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationFindManyArgs>(args?: SelectSubset<T, VerificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Verification.
     * @param {VerificationCreateArgs} args - Arguments to create a Verification.
     * @example
     * // Create one Verification
     * const Verification = await prisma.verification.create({
     *   data: {
     *     // ... data to create a Verification
     *   }
     * })
     * 
     */
    create<T extends VerificationCreateArgs>(args: SelectSubset<T, VerificationCreateArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Verifications.
     * @param {VerificationCreateManyArgs} args - Arguments to create many Verifications.
     * @example
     * // Create many Verifications
     * const verification = await prisma.verification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationCreateManyArgs>(args?: SelectSubset<T, VerificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Verifications and returns the data saved in the database.
     * @param {VerificationCreateManyAndReturnArgs} args - Arguments to create many Verifications.
     * @example
     * // Create many Verifications
     * const verification = await prisma.verification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Verifications and only return the `id`
     * const verificationWithIdOnly = await prisma.verification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Verification.
     * @param {VerificationDeleteArgs} args - Arguments to delete one Verification.
     * @example
     * // Delete one Verification
     * const Verification = await prisma.verification.delete({
     *   where: {
     *     // ... filter to delete one Verification
     *   }
     * })
     * 
     */
    delete<T extends VerificationDeleteArgs>(args: SelectSubset<T, VerificationDeleteArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Verification.
     * @param {VerificationUpdateArgs} args - Arguments to update one Verification.
     * @example
     * // Update one Verification
     * const verification = await prisma.verification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationUpdateArgs>(args: SelectSubset<T, VerificationUpdateArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Verifications.
     * @param {VerificationDeleteManyArgs} args - Arguments to filter Verifications to delete.
     * @example
     * // Delete a few Verifications
     * const { count } = await prisma.verification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationDeleteManyArgs>(args?: SelectSubset<T, VerificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Verifications
     * const verification = await prisma.verification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationUpdateManyArgs>(args: SelectSubset<T, VerificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verifications and returns the data updated in the database.
     * @param {VerificationUpdateManyAndReturnArgs} args - Arguments to update many Verifications.
     * @example
     * // Update many Verifications
     * const verification = await prisma.verification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Verifications and only return the `id`
     * const verificationWithIdOnly = await prisma.verification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Verification.
     * @param {VerificationUpsertArgs} args - Arguments to update or create a Verification.
     * @example
     * // Update or create a Verification
     * const verification = await prisma.verification.upsert({
     *   create: {
     *     // ... data to create a Verification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Verification we want to update
     *   }
     * })
     */
    upsert<T extends VerificationUpsertArgs>(args: SelectSubset<T, VerificationUpsertArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCountArgs} args - Arguments to filter Verifications to count.
     * @example
     * // Count the number of Verifications
     * const count = await prisma.verification.count({
     *   where: {
     *     // ... the filter for the Verifications we want to count
     *   }
     * })
    **/
    count<T extends VerificationCountArgs>(
      args?: Subset<T, VerificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationAggregateArgs>(args: Subset<T, VerificationAggregateArgs>): Prisma.PrismaPromise<GetVerificationAggregateType<T>>

    /**
     * Group by Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationGroupByArgs['orderBy'] }
        : { orderBy?: VerificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Verification model
   */
  readonly fields: VerificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Verification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Verification model
   */
  interface VerificationFieldRefs {
    readonly id: FieldRef<"Verification", 'String'>
    readonly identifier: FieldRef<"Verification", 'String'>
    readonly value: FieldRef<"Verification", 'String'>
    readonly expiresAt: FieldRef<"Verification", 'DateTime'>
    readonly createdAt: FieldRef<"Verification", 'DateTime'>
    readonly updatedAt: FieldRef<"Verification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Verification findUnique
   */
  export type VerificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification findUniqueOrThrow
   */
  export type VerificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification findFirst
   */
  export type VerificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verifications.
     */
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification findFirstOrThrow
   */
  export type VerificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verifications.
     */
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification findMany
   */
  export type VerificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verifications to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification create
   */
  export type VerificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data needed to create a Verification.
     */
    data: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
  }

  /**
   * Verification createMany
   */
  export type VerificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Verifications.
     */
    data: VerificationCreateManyInput | VerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verification createManyAndReturn
   */
  export type VerificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data used to create many Verifications.
     */
    data: VerificationCreateManyInput | VerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verification update
   */
  export type VerificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data needed to update a Verification.
     */
    data: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
    /**
     * Choose, which Verification to update.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification updateMany
   */
  export type VerificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Verifications.
     */
    data: XOR<VerificationUpdateManyMutationInput, VerificationUncheckedUpdateManyInput>
    /**
     * Filter which Verifications to update
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to update.
     */
    limit?: number
  }

  /**
   * Verification updateManyAndReturn
   */
  export type VerificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data used to update Verifications.
     */
    data: XOR<VerificationUpdateManyMutationInput, VerificationUncheckedUpdateManyInput>
    /**
     * Filter which Verifications to update
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to update.
     */
    limit?: number
  }

  /**
   * Verification upsert
   */
  export type VerificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The filter to search for the Verification to update in case it exists.
     */
    where: VerificationWhereUniqueInput
    /**
     * In case the Verification found by the `where` argument doesn't exist, create a new Verification with this data.
     */
    create: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
    /**
     * In case the Verification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
  }

  /**
   * Verification delete
   */
  export type VerificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter which Verification to delete.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification deleteMany
   */
  export type VerificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verifications to delete
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to delete.
     */
    limit?: number
  }

  /**
   * Verification without action
   */
  export type VerificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
  }


  /**
   * Model ProviderRequest
   */

  export type AggregateProviderRequest = {
    _count: ProviderRequestCountAggregateOutputType | null
    _min: ProviderRequestMinAggregateOutputType | null
    _max: ProviderRequestMaxAggregateOutputType | null
  }

  export type ProviderRequestMinAggregateOutputType = {
    id: string | null
    userId: string | null
    description: string | null
    experience: string | null
    phone: string | null
    cep: string | null
    address: string | null
    documentNumber: string | null
    portfolioLinks: string | null
    status: $Enums.ProviderRequestStatus | null
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProviderRequestMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    description: string | null
    experience: string | null
    phone: string | null
    cep: string | null
    address: string | null
    documentNumber: string | null
    portfolioLinks: string | null
    status: $Enums.ProviderRequestStatus | null
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProviderRequestCountAggregateOutputType = {
    id: number
    userId: number
    services: number
    description: number
    experience: number
    phone: number
    cep: number
    address: number
    documentNumber: number
    portfolioLinks: number
    portfolioLinksJson: number
    status: number
    rejectionReason: number
    reviewedBy: number
    reviewedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProviderRequestMinAggregateInputType = {
    id?: true
    userId?: true
    description?: true
    experience?: true
    phone?: true
    cep?: true
    address?: true
    documentNumber?: true
    portfolioLinks?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProviderRequestMaxAggregateInputType = {
    id?: true
    userId?: true
    description?: true
    experience?: true
    phone?: true
    cep?: true
    address?: true
    documentNumber?: true
    portfolioLinks?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProviderRequestCountAggregateInputType = {
    id?: true
    userId?: true
    services?: true
    description?: true
    experience?: true
    phone?: true
    cep?: true
    address?: true
    documentNumber?: true
    portfolioLinks?: true
    portfolioLinksJson?: true
    status?: true
    rejectionReason?: true
    reviewedBy?: true
    reviewedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProviderRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderRequest to aggregate.
     */
    where?: ProviderRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRequests to fetch.
     */
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderRequests
    **/
    _count?: true | ProviderRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderRequestMaxAggregateInputType
  }

  export type GetProviderRequestAggregateType<T extends ProviderRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderRequest[P]>
      : GetScalarType<T[P], AggregateProviderRequest[P]>
  }




  export type ProviderRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderRequestWhereInput
    orderBy?: ProviderRequestOrderByWithAggregationInput | ProviderRequestOrderByWithAggregationInput[]
    by: ProviderRequestScalarFieldEnum[] | ProviderRequestScalarFieldEnum
    having?: ProviderRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderRequestCountAggregateInputType | true
    _min?: ProviderRequestMinAggregateInputType
    _max?: ProviderRequestMaxAggregateInputType
  }

  export type ProviderRequestGroupByOutputType = {
    id: string
    userId: string
    services: JsonValue | null
    description: string
    experience: string
    phone: string
    cep: string | null
    address: string
    documentNumber: string
    portfolioLinks: string | null
    portfolioLinksJson: JsonValue | null
    status: $Enums.ProviderRequestStatus
    rejectionReason: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ProviderRequestCountAggregateOutputType | null
    _min: ProviderRequestMinAggregateOutputType | null
    _max: ProviderRequestMaxAggregateOutputType | null
  }

  type GetProviderRequestGroupByPayload<T extends ProviderRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderRequestGroupByOutputType[P]>
        }
      >
    >


  export type ProviderRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    services?: boolean
    description?: boolean
    experience?: boolean
    phone?: boolean
    cep?: boolean
    address?: boolean
    documentNumber?: boolean
    portfolioLinks?: boolean
    portfolioLinksJson?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["providerRequest"]>

  export type ProviderRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    services?: boolean
    description?: boolean
    experience?: boolean
    phone?: boolean
    cep?: boolean
    address?: boolean
    documentNumber?: boolean
    portfolioLinks?: boolean
    portfolioLinksJson?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["providerRequest"]>

  export type ProviderRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    services?: boolean
    description?: boolean
    experience?: boolean
    phone?: boolean
    cep?: boolean
    address?: boolean
    documentNumber?: boolean
    portfolioLinks?: boolean
    portfolioLinksJson?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["providerRequest"]>

  export type ProviderRequestSelectScalar = {
    id?: boolean
    userId?: boolean
    services?: boolean
    description?: boolean
    experience?: boolean
    phone?: boolean
    cep?: boolean
    address?: boolean
    documentNumber?: boolean
    portfolioLinks?: boolean
    portfolioLinksJson?: boolean
    status?: boolean
    rejectionReason?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProviderRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "services" | "description" | "experience" | "phone" | "cep" | "address" | "documentNumber" | "portfolioLinks" | "portfolioLinksJson" | "status" | "rejectionReason" | "reviewedBy" | "reviewedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["providerRequest"]>
  export type ProviderRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }
  export type ProviderRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }
  export type ProviderRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewedByUser?: boolean | ProviderRequest$reviewedByUserArgs<ExtArgs>
  }

  export type $ProviderRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderRequest"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      reviewedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      services: Prisma.JsonValue | null
      description: string
      experience: string
      phone: string
      cep: string | null
      address: string
      documentNumber: string
      portfolioLinks: string | null
      portfolioLinksJson: Prisma.JsonValue | null
      status: $Enums.ProviderRequestStatus
      rejectionReason: string | null
      reviewedBy: string | null
      reviewedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["providerRequest"]>
    composites: {}
  }

  type ProviderRequestGetPayload<S extends boolean | null | undefined | ProviderRequestDefaultArgs> = $Result.GetResult<Prisma.$ProviderRequestPayload, S>

  type ProviderRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProviderRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProviderRequestCountAggregateInputType | true
    }

  export interface ProviderRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderRequest'], meta: { name: 'ProviderRequest' } }
    /**
     * Find zero or one ProviderRequest that matches the filter.
     * @param {ProviderRequestFindUniqueArgs} args - Arguments to find a ProviderRequest
     * @example
     * // Get one ProviderRequest
     * const providerRequest = await prisma.providerRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderRequestFindUniqueArgs>(args: SelectSubset<T, ProviderRequestFindUniqueArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProviderRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProviderRequestFindUniqueOrThrowArgs} args - Arguments to find a ProviderRequest
     * @example
     * // Get one ProviderRequest
     * const providerRequest = await prisma.providerRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestFindFirstArgs} args - Arguments to find a ProviderRequest
     * @example
     * // Get one ProviderRequest
     * const providerRequest = await prisma.providerRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderRequestFindFirstArgs>(args?: SelectSubset<T, ProviderRequestFindFirstArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestFindFirstOrThrowArgs} args - Arguments to find a ProviderRequest
     * @example
     * // Get one ProviderRequest
     * const providerRequest = await prisma.providerRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProviderRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderRequests
     * const providerRequests = await prisma.providerRequest.findMany()
     * 
     * // Get first 10 ProviderRequests
     * const providerRequests = await prisma.providerRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerRequestWithIdOnly = await prisma.providerRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderRequestFindManyArgs>(args?: SelectSubset<T, ProviderRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProviderRequest.
     * @param {ProviderRequestCreateArgs} args - Arguments to create a ProviderRequest.
     * @example
     * // Create one ProviderRequest
     * const ProviderRequest = await prisma.providerRequest.create({
     *   data: {
     *     // ... data to create a ProviderRequest
     *   }
     * })
     * 
     */
    create<T extends ProviderRequestCreateArgs>(args: SelectSubset<T, ProviderRequestCreateArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProviderRequests.
     * @param {ProviderRequestCreateManyArgs} args - Arguments to create many ProviderRequests.
     * @example
     * // Create many ProviderRequests
     * const providerRequest = await prisma.providerRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderRequestCreateManyArgs>(args?: SelectSubset<T, ProviderRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderRequests and returns the data saved in the database.
     * @param {ProviderRequestCreateManyAndReturnArgs} args - Arguments to create many ProviderRequests.
     * @example
     * // Create many ProviderRequests
     * const providerRequest = await prisma.providerRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderRequests and only return the `id`
     * const providerRequestWithIdOnly = await prisma.providerRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProviderRequest.
     * @param {ProviderRequestDeleteArgs} args - Arguments to delete one ProviderRequest.
     * @example
     * // Delete one ProviderRequest
     * const ProviderRequest = await prisma.providerRequest.delete({
     *   where: {
     *     // ... filter to delete one ProviderRequest
     *   }
     * })
     * 
     */
    delete<T extends ProviderRequestDeleteArgs>(args: SelectSubset<T, ProviderRequestDeleteArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProviderRequest.
     * @param {ProviderRequestUpdateArgs} args - Arguments to update one ProviderRequest.
     * @example
     * // Update one ProviderRequest
     * const providerRequest = await prisma.providerRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderRequestUpdateArgs>(args: SelectSubset<T, ProviderRequestUpdateArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProviderRequests.
     * @param {ProviderRequestDeleteManyArgs} args - Arguments to filter ProviderRequests to delete.
     * @example
     * // Delete a few ProviderRequests
     * const { count } = await prisma.providerRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderRequestDeleteManyArgs>(args?: SelectSubset<T, ProviderRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderRequests
     * const providerRequest = await prisma.providerRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderRequestUpdateManyArgs>(args: SelectSubset<T, ProviderRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderRequests and returns the data updated in the database.
     * @param {ProviderRequestUpdateManyAndReturnArgs} args - Arguments to update many ProviderRequests.
     * @example
     * // Update many ProviderRequests
     * const providerRequest = await prisma.providerRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProviderRequests and only return the `id`
     * const providerRequestWithIdOnly = await prisma.providerRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProviderRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, ProviderRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProviderRequest.
     * @param {ProviderRequestUpsertArgs} args - Arguments to update or create a ProviderRequest.
     * @example
     * // Update or create a ProviderRequest
     * const providerRequest = await prisma.providerRequest.upsert({
     *   create: {
     *     // ... data to create a ProviderRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderRequest we want to update
     *   }
     * })
     */
    upsert<T extends ProviderRequestUpsertArgs>(args: SelectSubset<T, ProviderRequestUpsertArgs<ExtArgs>>): Prisma__ProviderRequestClient<$Result.GetResult<Prisma.$ProviderRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProviderRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestCountArgs} args - Arguments to filter ProviderRequests to count.
     * @example
     * // Count the number of ProviderRequests
     * const count = await prisma.providerRequest.count({
     *   where: {
     *     // ... the filter for the ProviderRequests we want to count
     *   }
     * })
    **/
    count<T extends ProviderRequestCountArgs>(
      args?: Subset<T, ProviderRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderRequestAggregateArgs>(args: Subset<T, ProviderRequestAggregateArgs>): Prisma.PrismaPromise<GetProviderRequestAggregateType<T>>

    /**
     * Group by ProviderRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderRequestGroupByArgs['orderBy'] }
        : { orderBy?: ProviderRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderRequest model
   */
  readonly fields: ProviderRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    reviewedByUser<T extends ProviderRequest$reviewedByUserArgs<ExtArgs> = {}>(args?: Subset<T, ProviderRequest$reviewedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderRequest model
   */
  interface ProviderRequestFieldRefs {
    readonly id: FieldRef<"ProviderRequest", 'String'>
    readonly userId: FieldRef<"ProviderRequest", 'String'>
    readonly services: FieldRef<"ProviderRequest", 'Json'>
    readonly description: FieldRef<"ProviderRequest", 'String'>
    readonly experience: FieldRef<"ProviderRequest", 'String'>
    readonly phone: FieldRef<"ProviderRequest", 'String'>
    readonly cep: FieldRef<"ProviderRequest", 'String'>
    readonly address: FieldRef<"ProviderRequest", 'String'>
    readonly documentNumber: FieldRef<"ProviderRequest", 'String'>
    readonly portfolioLinks: FieldRef<"ProviderRequest", 'String'>
    readonly portfolioLinksJson: FieldRef<"ProviderRequest", 'Json'>
    readonly status: FieldRef<"ProviderRequest", 'ProviderRequestStatus'>
    readonly rejectionReason: FieldRef<"ProviderRequest", 'String'>
    readonly reviewedBy: FieldRef<"ProviderRequest", 'String'>
    readonly reviewedAt: FieldRef<"ProviderRequest", 'DateTime'>
    readonly createdAt: FieldRef<"ProviderRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"ProviderRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProviderRequest findUnique
   */
  export type ProviderRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRequest to fetch.
     */
    where: ProviderRequestWhereUniqueInput
  }

  /**
   * ProviderRequest findUniqueOrThrow
   */
  export type ProviderRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRequest to fetch.
     */
    where: ProviderRequestWhereUniqueInput
  }

  /**
   * ProviderRequest findFirst
   */
  export type ProviderRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRequest to fetch.
     */
    where?: ProviderRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRequests to fetch.
     */
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderRequests.
     */
    cursor?: ProviderRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderRequests.
     */
    distinct?: ProviderRequestScalarFieldEnum | ProviderRequestScalarFieldEnum[]
  }

  /**
   * ProviderRequest findFirstOrThrow
   */
  export type ProviderRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRequest to fetch.
     */
    where?: ProviderRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRequests to fetch.
     */
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderRequests.
     */
    cursor?: ProviderRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderRequests.
     */
    distinct?: ProviderRequestScalarFieldEnum | ProviderRequestScalarFieldEnum[]
  }

  /**
   * ProviderRequest findMany
   */
  export type ProviderRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter, which ProviderRequests to fetch.
     */
    where?: ProviderRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderRequests to fetch.
     */
    orderBy?: ProviderRequestOrderByWithRelationInput | ProviderRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderRequests.
     */
    cursor?: ProviderRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderRequests.
     */
    skip?: number
    distinct?: ProviderRequestScalarFieldEnum | ProviderRequestScalarFieldEnum[]
  }

  /**
   * ProviderRequest create
   */
  export type ProviderRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderRequest.
     */
    data: XOR<ProviderRequestCreateInput, ProviderRequestUncheckedCreateInput>
  }

  /**
   * ProviderRequest createMany
   */
  export type ProviderRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderRequests.
     */
    data: ProviderRequestCreateManyInput | ProviderRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderRequest createManyAndReturn
   */
  export type ProviderRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * The data used to create many ProviderRequests.
     */
    data: ProviderRequestCreateManyInput | ProviderRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderRequest update
   */
  export type ProviderRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderRequest.
     */
    data: XOR<ProviderRequestUpdateInput, ProviderRequestUncheckedUpdateInput>
    /**
     * Choose, which ProviderRequest to update.
     */
    where: ProviderRequestWhereUniqueInput
  }

  /**
   * ProviderRequest updateMany
   */
  export type ProviderRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderRequests.
     */
    data: XOR<ProviderRequestUpdateManyMutationInput, ProviderRequestUncheckedUpdateManyInput>
    /**
     * Filter which ProviderRequests to update
     */
    where?: ProviderRequestWhereInput
    /**
     * Limit how many ProviderRequests to update.
     */
    limit?: number
  }

  /**
   * ProviderRequest updateManyAndReturn
   */
  export type ProviderRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * The data used to update ProviderRequests.
     */
    data: XOR<ProviderRequestUpdateManyMutationInput, ProviderRequestUncheckedUpdateManyInput>
    /**
     * Filter which ProviderRequests to update
     */
    where?: ProviderRequestWhereInput
    /**
     * Limit how many ProviderRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderRequest upsert
   */
  export type ProviderRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderRequest to update in case it exists.
     */
    where: ProviderRequestWhereUniqueInput
    /**
     * In case the ProviderRequest found by the `where` argument doesn't exist, create a new ProviderRequest with this data.
     */
    create: XOR<ProviderRequestCreateInput, ProviderRequestUncheckedCreateInput>
    /**
     * In case the ProviderRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderRequestUpdateInput, ProviderRequestUncheckedUpdateInput>
  }

  /**
   * ProviderRequest delete
   */
  export type ProviderRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
    /**
     * Filter which ProviderRequest to delete.
     */
    where: ProviderRequestWhereUniqueInput
  }

  /**
   * ProviderRequest deleteMany
   */
  export type ProviderRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderRequests to delete
     */
    where?: ProviderRequestWhereInput
    /**
     * Limit how many ProviderRequests to delete.
     */
    limit?: number
  }

  /**
   * ProviderRequest.reviewedByUser
   */
  export type ProviderRequest$reviewedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ProviderRequest without action
   */
  export type ProviderRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderRequest
     */
    select?: ProviderRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderRequest
     */
    omit?: ProviderRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderRequestInclude<ExtArgs> | null
  }


  /**
   * Model Address
   */

  export type AggregateAddress = {
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  export type AddressAvgAggregateOutputType = {
    lat: number | null
    lon: number | null
  }

  export type AddressSumAggregateOutputType = {
    lat: number | null
    lon: number | null
  }

  export type AddressMinAggregateOutputType = {
    id: string | null
    userId: string | null
    label: string | null
    cep: string | null
    street: string | null
    number: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    state: string | null
    lat: number | null
    lon: number | null
    createdAt: Date | null
  }

  export type AddressMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    label: string | null
    cep: string | null
    street: string | null
    number: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    state: string | null
    lat: number | null
    lon: number | null
    createdAt: Date | null
  }

  export type AddressCountAggregateOutputType = {
    id: number
    userId: number
    label: number
    cep: number
    street: number
    number: number
    complement: number
    neighborhood: number
    city: number
    state: number
    lat: number
    lon: number
    createdAt: number
    _all: number
  }


  export type AddressAvgAggregateInputType = {
    lat?: true
    lon?: true
  }

  export type AddressSumAggregateInputType = {
    lat?: true
    lon?: true
  }

  export type AddressMinAggregateInputType = {
    id?: true
    userId?: true
    label?: true
    cep?: true
    street?: true
    number?: true
    complement?: true
    neighborhood?: true
    city?: true
    state?: true
    lat?: true
    lon?: true
    createdAt?: true
  }

  export type AddressMaxAggregateInputType = {
    id?: true
    userId?: true
    label?: true
    cep?: true
    street?: true
    number?: true
    complement?: true
    neighborhood?: true
    city?: true
    state?: true
    lat?: true
    lon?: true
    createdAt?: true
  }

  export type AddressCountAggregateInputType = {
    id?: true
    userId?: true
    label?: true
    cep?: true
    street?: true
    number?: true
    complement?: true
    neighborhood?: true
    city?: true
    state?: true
    lat?: true
    lon?: true
    createdAt?: true
    _all?: true
  }

  export type AddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Address to aggregate.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Addresses
    **/
    _count?: true | AddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressMaxAggregateInputType
  }

  export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
        [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddress[P]>
      : GetScalarType<T[P], AggregateAddress[P]>
  }




  export type AddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithAggregationInput | AddressOrderByWithAggregationInput[]
    by: AddressScalarFieldEnum[] | AddressScalarFieldEnum
    having?: AddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressCountAggregateInputType | true
    _avg?: AddressAvgAggregateInputType
    _sum?: AddressSumAggregateInputType
    _min?: AddressMinAggregateInputType
    _max?: AddressMaxAggregateInputType
  }

  export type AddressGroupByOutputType = {
    id: string
    userId: string | null
    label: string | null
    cep: string | null
    street: string | null
    number: string | null
    complement: string | null
    neighborhood: string | null
    city: string | null
    state: string | null
    lat: number | null
    lon: number | null
    createdAt: Date
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  type GetAddressGroupByPayload<T extends AddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressGroupByOutputType[P]>
            : GetScalarType<T[P], AddressGroupByOutputType[P]>
        }
      >
    >


  export type AddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    label?: boolean
    cep?: boolean
    street?: boolean
    number?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lon?: boolean
    createdAt?: boolean
    user?: boolean | Address$userArgs<ExtArgs>
    orders?: boolean | Address$ordersArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    label?: boolean
    cep?: boolean
    street?: boolean
    number?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lon?: boolean
    createdAt?: boolean
    user?: boolean | Address$userArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    label?: boolean
    cep?: boolean
    street?: boolean
    number?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lon?: boolean
    createdAt?: boolean
    user?: boolean | Address$userArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectScalar = {
    id?: boolean
    userId?: boolean
    label?: boolean
    cep?: boolean
    street?: boolean
    number?: boolean
    complement?: boolean
    neighborhood?: boolean
    city?: boolean
    state?: boolean
    lat?: boolean
    lon?: boolean
    createdAt?: boolean
  }

  export type AddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "label" | "cep" | "street" | "number" | "complement" | "neighborhood" | "city" | "state" | "lat" | "lon" | "createdAt", ExtArgs["result"]["address"]>
  export type AddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Address$userArgs<ExtArgs>
    orders?: boolean | Address$ordersArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Address$userArgs<ExtArgs>
  }
  export type AddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Address$userArgs<ExtArgs>
  }

  export type $AddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Address"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      label: string | null
      cep: string | null
      street: string | null
      number: string | null
      complement: string | null
      neighborhood: string | null
      city: string | null
      state: string | null
      lat: number | null
      lon: number | null
      createdAt: Date
    }, ExtArgs["result"]["address"]>
    composites: {}
  }

  type AddressGetPayload<S extends boolean | null | undefined | AddressDefaultArgs> = $Result.GetResult<Prisma.$AddressPayload, S>

  type AddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressCountAggregateInputType | true
    }

  export interface AddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Address'], meta: { name: 'Address' } }
    /**
     * Find zero or one Address that matches the filter.
     * @param {AddressFindUniqueArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AddressFindUniqueArgs>(args: SelectSubset<T, AddressFindUniqueArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Address that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AddressFindUniqueOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AddressFindUniqueOrThrowArgs>(args: SelectSubset<T, AddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AddressFindFirstArgs>(args?: SelectSubset<T, AddressFindFirstArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AddressFindFirstOrThrowArgs>(args?: SelectSubset<T, AddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.address.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.address.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressWithIdOnly = await prisma.address.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AddressFindManyArgs>(args?: SelectSubset<T, AddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Address.
     * @param {AddressCreateArgs} args - Arguments to create a Address.
     * @example
     * // Create one Address
     * const Address = await prisma.address.create({
     *   data: {
     *     // ... data to create a Address
     *   }
     * })
     * 
     */
    create<T extends AddressCreateArgs>(args: SelectSubset<T, AddressCreateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {AddressCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AddressCreateManyArgs>(args?: SelectSubset<T, AddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {AddressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AddressCreateManyAndReturnArgs>(args?: SelectSubset<T, AddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Address.
     * @param {AddressDeleteArgs} args - Arguments to delete one Address.
     * @example
     * // Delete one Address
     * const Address = await prisma.address.delete({
     *   where: {
     *     // ... filter to delete one Address
     *   }
     * })
     * 
     */
    delete<T extends AddressDeleteArgs>(args: SelectSubset<T, AddressDeleteArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Address.
     * @param {AddressUpdateArgs} args - Arguments to update one Address.
     * @example
     * // Update one Address
     * const address = await prisma.address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AddressUpdateArgs>(args: SelectSubset<T, AddressUpdateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {AddressDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AddressDeleteManyArgs>(args?: SelectSubset<T, AddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AddressUpdateManyArgs>(args: SelectSubset<T, AddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {AddressUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AddressUpdateManyAndReturnArgs>(args: SelectSubset<T, AddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Address.
     * @param {AddressUpsertArgs} args - Arguments to update or create a Address.
     * @example
     * // Update or create a Address
     * const address = await prisma.address.upsert({
     *   create: {
     *     // ... data to create a Address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Address we want to update
     *   }
     * })
     */
    upsert<T extends AddressUpsertArgs>(args: SelectSubset<T, AddressUpsertArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.address.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends AddressCountArgs>(
      args?: Subset<T, AddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressAggregateArgs>(args: Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

    /**
     * Group by Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AddressGroupByArgs['orderBy'] }
        : { orderBy?: AddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Address model
   */
  readonly fields: AddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Address$userArgs<ExtArgs> = {}>(args?: Subset<T, Address$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orders<T extends Address$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Address$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Address model
   */
  interface AddressFieldRefs {
    readonly id: FieldRef<"Address", 'String'>
    readonly userId: FieldRef<"Address", 'String'>
    readonly label: FieldRef<"Address", 'String'>
    readonly cep: FieldRef<"Address", 'String'>
    readonly street: FieldRef<"Address", 'String'>
    readonly number: FieldRef<"Address", 'String'>
    readonly complement: FieldRef<"Address", 'String'>
    readonly neighborhood: FieldRef<"Address", 'String'>
    readonly city: FieldRef<"Address", 'String'>
    readonly state: FieldRef<"Address", 'String'>
    readonly lat: FieldRef<"Address", 'Float'>
    readonly lon: FieldRef<"Address", 'Float'>
    readonly createdAt: FieldRef<"Address", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Address findUnique
   */
  export type AddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findUniqueOrThrow
   */
  export type AddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findFirst
   */
  export type AddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findFirstOrThrow
   */
  export type AddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findMany
   */
  export type AddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address create
   */
  export type AddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to create a Address.
     */
    data?: XOR<AddressCreateInput, AddressUncheckedCreateInput>
  }

  /**
   * Address createMany
   */
  export type AddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Address createManyAndReturn
   */
  export type AddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address update
   */
  export type AddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to update a Address.
     */
    data: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
    /**
     * Choose, which Address to update.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address updateMany
   */
  export type AddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
  }

  /**
   * Address updateManyAndReturn
   */
  export type AddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address upsert
   */
  export type AddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The filter to search for the Address to update in case it exists.
     */
    where: AddressWhereUniqueInput
    /**
     * In case the Address found by the `where` argument doesn't exist, create a new Address with this data.
     */
    create: XOR<AddressCreateInput, AddressUncheckedCreateInput>
    /**
     * In case the Address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
  }

  /**
   * Address delete
   */
  export type AddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter which Address to delete.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address deleteMany
   */
  export type AddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to delete
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to delete.
     */
    limit?: number
  }

  /**
   * Address.user
   */
  export type Address$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Address.orders
   */
  export type Address$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Address without action
   */
  export type AddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
  }


  /**
   * Model ProviderProfile
   */

  export type AggregateProviderProfile = {
    _count: ProviderProfileCountAggregateOutputType | null
    _avg: ProviderProfileAvgAggregateOutputType | null
    _sum: ProviderProfileSumAggregateOutputType | null
    _min: ProviderProfileMinAggregateOutputType | null
    _max: ProviderProfileMaxAggregateOutputType | null
  }

  export type ProviderProfileAvgAggregateOutputType = {
    radiusKm: Decimal | null
    avgRating: Decimal | null
    totalReviews: number | null
    acceptRate30d: Decimal | null
    responseP50S: number | null
    noShow30d: number | null
  }

  export type ProviderProfileSumAggregateOutputType = {
    radiusKm: Decimal | null
    avgRating: Decimal | null
    totalReviews: number | null
    acceptRate30d: Decimal | null
    responseP50S: number | null
    noShow30d: number | null
  }

  export type ProviderProfileMinAggregateOutputType = {
    userId: string | null
    bio: string | null
    radiusKm: Decimal | null
    avgRating: Decimal | null
    totalReviews: number | null
    acceptRate30d: Decimal | null
    responseP50S: number | null
    noShow30d: number | null
  }

  export type ProviderProfileMaxAggregateOutputType = {
    userId: string | null
    bio: string | null
    radiusKm: Decimal | null
    avgRating: Decimal | null
    totalReviews: number | null
    acceptRate30d: Decimal | null
    responseP50S: number | null
    noShow30d: number | null
  }

  export type ProviderProfileCountAggregateOutputType = {
    userId: number
    bio: number
    radiusKm: number
    avgRating: number
    totalReviews: number
    acceptRate30d: number
    responseP50S: number
    noShow30d: number
    _all: number
  }


  export type ProviderProfileAvgAggregateInputType = {
    radiusKm?: true
    avgRating?: true
    totalReviews?: true
    acceptRate30d?: true
    responseP50S?: true
    noShow30d?: true
  }

  export type ProviderProfileSumAggregateInputType = {
    radiusKm?: true
    avgRating?: true
    totalReviews?: true
    acceptRate30d?: true
    responseP50S?: true
    noShow30d?: true
  }

  export type ProviderProfileMinAggregateInputType = {
    userId?: true
    bio?: true
    radiusKm?: true
    avgRating?: true
    totalReviews?: true
    acceptRate30d?: true
    responseP50S?: true
    noShow30d?: true
  }

  export type ProviderProfileMaxAggregateInputType = {
    userId?: true
    bio?: true
    radiusKm?: true
    avgRating?: true
    totalReviews?: true
    acceptRate30d?: true
    responseP50S?: true
    noShow30d?: true
  }

  export type ProviderProfileCountAggregateInputType = {
    userId?: true
    bio?: true
    radiusKm?: true
    avgRating?: true
    totalReviews?: true
    acceptRate30d?: true
    responseP50S?: true
    noShow30d?: true
    _all?: true
  }

  export type ProviderProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderProfile to aggregate.
     */
    where?: ProviderProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderProfiles to fetch.
     */
    orderBy?: ProviderProfileOrderByWithRelationInput | ProviderProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderProfiles
    **/
    _count?: true | ProviderProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderProfileMaxAggregateInputType
  }

  export type GetProviderProfileAggregateType<T extends ProviderProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderProfile[P]>
      : GetScalarType<T[P], AggregateProviderProfile[P]>
  }




  export type ProviderProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderProfileWhereInput
    orderBy?: ProviderProfileOrderByWithAggregationInput | ProviderProfileOrderByWithAggregationInput[]
    by: ProviderProfileScalarFieldEnum[] | ProviderProfileScalarFieldEnum
    having?: ProviderProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderProfileCountAggregateInputType | true
    _avg?: ProviderProfileAvgAggregateInputType
    _sum?: ProviderProfileSumAggregateInputType
    _min?: ProviderProfileMinAggregateInputType
    _max?: ProviderProfileMaxAggregateInputType
  }

  export type ProviderProfileGroupByOutputType = {
    userId: string
    bio: string | null
    radiusKm: Decimal
    avgRating: Decimal
    totalReviews: number
    acceptRate30d: Decimal
    responseP50S: number
    noShow30d: number
    _count: ProviderProfileCountAggregateOutputType | null
    _avg: ProviderProfileAvgAggregateOutputType | null
    _sum: ProviderProfileSumAggregateOutputType | null
    _min: ProviderProfileMinAggregateOutputType | null
    _max: ProviderProfileMaxAggregateOutputType | null
  }

  type GetProviderProfileGroupByPayload<T extends ProviderProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProviderProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    bio?: boolean
    radiusKm?: boolean
    avgRating?: boolean
    totalReviews?: boolean
    acceptRate30d?: boolean
    responseP50S?: boolean
    noShow30d?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerProfile"]>

  export type ProviderProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    bio?: boolean
    radiusKm?: boolean
    avgRating?: boolean
    totalReviews?: boolean
    acceptRate30d?: boolean
    responseP50S?: boolean
    noShow30d?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerProfile"]>

  export type ProviderProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    bio?: boolean
    radiusKm?: boolean
    avgRating?: boolean
    totalReviews?: boolean
    acceptRate30d?: boolean
    responseP50S?: boolean
    noShow30d?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerProfile"]>

  export type ProviderProfileSelectScalar = {
    userId?: boolean
    bio?: boolean
    radiusKm?: boolean
    avgRating?: boolean
    totalReviews?: boolean
    acceptRate30d?: boolean
    responseP50S?: boolean
    noShow30d?: boolean
  }

  export type ProviderProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"userId" | "bio" | "radiusKm" | "avgRating" | "totalReviews" | "acceptRate30d" | "responseP50S" | "noShow30d", ExtArgs["result"]["providerProfile"]>
  export type ProviderProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProviderProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderProfile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      bio: string | null
      radiusKm: Prisma.Decimal
      avgRating: Prisma.Decimal
      totalReviews: number
      acceptRate30d: Prisma.Decimal
      responseP50S: number
      noShow30d: number
    }, ExtArgs["result"]["providerProfile"]>
    composites: {}
  }

  type ProviderProfileGetPayload<S extends boolean | null | undefined | ProviderProfileDefaultArgs> = $Result.GetResult<Prisma.$ProviderProfilePayload, S>

  type ProviderProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProviderProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProviderProfileCountAggregateInputType | true
    }

  export interface ProviderProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderProfile'], meta: { name: 'ProviderProfile' } }
    /**
     * Find zero or one ProviderProfile that matches the filter.
     * @param {ProviderProfileFindUniqueArgs} args - Arguments to find a ProviderProfile
     * @example
     * // Get one ProviderProfile
     * const providerProfile = await prisma.providerProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderProfileFindUniqueArgs>(args: SelectSubset<T, ProviderProfileFindUniqueArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProviderProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProviderProfileFindUniqueOrThrowArgs} args - Arguments to find a ProviderProfile
     * @example
     * // Get one ProviderProfile
     * const providerProfile = await prisma.providerProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileFindFirstArgs} args - Arguments to find a ProviderProfile
     * @example
     * // Get one ProviderProfile
     * const providerProfile = await prisma.providerProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderProfileFindFirstArgs>(args?: SelectSubset<T, ProviderProfileFindFirstArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileFindFirstOrThrowArgs} args - Arguments to find a ProviderProfile
     * @example
     * // Get one ProviderProfile
     * const providerProfile = await prisma.providerProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProviderProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderProfiles
     * const providerProfiles = await prisma.providerProfile.findMany()
     * 
     * // Get first 10 ProviderProfiles
     * const providerProfiles = await prisma.providerProfile.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const providerProfileWithUserIdOnly = await prisma.providerProfile.findMany({ select: { userId: true } })
     * 
     */
    findMany<T extends ProviderProfileFindManyArgs>(args?: SelectSubset<T, ProviderProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProviderProfile.
     * @param {ProviderProfileCreateArgs} args - Arguments to create a ProviderProfile.
     * @example
     * // Create one ProviderProfile
     * const ProviderProfile = await prisma.providerProfile.create({
     *   data: {
     *     // ... data to create a ProviderProfile
     *   }
     * })
     * 
     */
    create<T extends ProviderProfileCreateArgs>(args: SelectSubset<T, ProviderProfileCreateArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProviderProfiles.
     * @param {ProviderProfileCreateManyArgs} args - Arguments to create many ProviderProfiles.
     * @example
     * // Create many ProviderProfiles
     * const providerProfile = await prisma.providerProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderProfileCreateManyArgs>(args?: SelectSubset<T, ProviderProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderProfiles and returns the data saved in the database.
     * @param {ProviderProfileCreateManyAndReturnArgs} args - Arguments to create many ProviderProfiles.
     * @example
     * // Create many ProviderProfiles
     * const providerProfile = await prisma.providerProfile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderProfiles and only return the `userId`
     * const providerProfileWithUserIdOnly = await prisma.providerProfile.createManyAndReturn({
     *   select: { userId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProviderProfile.
     * @param {ProviderProfileDeleteArgs} args - Arguments to delete one ProviderProfile.
     * @example
     * // Delete one ProviderProfile
     * const ProviderProfile = await prisma.providerProfile.delete({
     *   where: {
     *     // ... filter to delete one ProviderProfile
     *   }
     * })
     * 
     */
    delete<T extends ProviderProfileDeleteArgs>(args: SelectSubset<T, ProviderProfileDeleteArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProviderProfile.
     * @param {ProviderProfileUpdateArgs} args - Arguments to update one ProviderProfile.
     * @example
     * // Update one ProviderProfile
     * const providerProfile = await prisma.providerProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderProfileUpdateArgs>(args: SelectSubset<T, ProviderProfileUpdateArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProviderProfiles.
     * @param {ProviderProfileDeleteManyArgs} args - Arguments to filter ProviderProfiles to delete.
     * @example
     * // Delete a few ProviderProfiles
     * const { count } = await prisma.providerProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderProfileDeleteManyArgs>(args?: SelectSubset<T, ProviderProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderProfiles
     * const providerProfile = await prisma.providerProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderProfileUpdateManyArgs>(args: SelectSubset<T, ProviderProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderProfiles and returns the data updated in the database.
     * @param {ProviderProfileUpdateManyAndReturnArgs} args - Arguments to update many ProviderProfiles.
     * @example
     * // Update many ProviderProfiles
     * const providerProfile = await prisma.providerProfile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProviderProfiles and only return the `userId`
     * const providerProfileWithUserIdOnly = await prisma.providerProfile.updateManyAndReturn({
     *   select: { userId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProviderProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, ProviderProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProviderProfile.
     * @param {ProviderProfileUpsertArgs} args - Arguments to update or create a ProviderProfile.
     * @example
     * // Update or create a ProviderProfile
     * const providerProfile = await prisma.providerProfile.upsert({
     *   create: {
     *     // ... data to create a ProviderProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderProfile we want to update
     *   }
     * })
     */
    upsert<T extends ProviderProfileUpsertArgs>(args: SelectSubset<T, ProviderProfileUpsertArgs<ExtArgs>>): Prisma__ProviderProfileClient<$Result.GetResult<Prisma.$ProviderProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProviderProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileCountArgs} args - Arguments to filter ProviderProfiles to count.
     * @example
     * // Count the number of ProviderProfiles
     * const count = await prisma.providerProfile.count({
     *   where: {
     *     // ... the filter for the ProviderProfiles we want to count
     *   }
     * })
    **/
    count<T extends ProviderProfileCountArgs>(
      args?: Subset<T, ProviderProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderProfileAggregateArgs>(args: Subset<T, ProviderProfileAggregateArgs>): Prisma.PrismaPromise<GetProviderProfileAggregateType<T>>

    /**
     * Group by ProviderProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProviderProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderProfile model
   */
  readonly fields: ProviderProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderProfile model
   */
  interface ProviderProfileFieldRefs {
    readonly userId: FieldRef<"ProviderProfile", 'String'>
    readonly bio: FieldRef<"ProviderProfile", 'String'>
    readonly radiusKm: FieldRef<"ProviderProfile", 'Decimal'>
    readonly avgRating: FieldRef<"ProviderProfile", 'Decimal'>
    readonly totalReviews: FieldRef<"ProviderProfile", 'Int'>
    readonly acceptRate30d: FieldRef<"ProviderProfile", 'Decimal'>
    readonly responseP50S: FieldRef<"ProviderProfile", 'Int'>
    readonly noShow30d: FieldRef<"ProviderProfile", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ProviderProfile findUnique
   */
  export type ProviderProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter, which ProviderProfile to fetch.
     */
    where: ProviderProfileWhereUniqueInput
  }

  /**
   * ProviderProfile findUniqueOrThrow
   */
  export type ProviderProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter, which ProviderProfile to fetch.
     */
    where: ProviderProfileWhereUniqueInput
  }

  /**
   * ProviderProfile findFirst
   */
  export type ProviderProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter, which ProviderProfile to fetch.
     */
    where?: ProviderProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderProfiles to fetch.
     */
    orderBy?: ProviderProfileOrderByWithRelationInput | ProviderProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderProfiles.
     */
    cursor?: ProviderProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderProfiles.
     */
    distinct?: ProviderProfileScalarFieldEnum | ProviderProfileScalarFieldEnum[]
  }

  /**
   * ProviderProfile findFirstOrThrow
   */
  export type ProviderProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter, which ProviderProfile to fetch.
     */
    where?: ProviderProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderProfiles to fetch.
     */
    orderBy?: ProviderProfileOrderByWithRelationInput | ProviderProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderProfiles.
     */
    cursor?: ProviderProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderProfiles.
     */
    distinct?: ProviderProfileScalarFieldEnum | ProviderProfileScalarFieldEnum[]
  }

  /**
   * ProviderProfile findMany
   */
  export type ProviderProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter, which ProviderProfiles to fetch.
     */
    where?: ProviderProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderProfiles to fetch.
     */
    orderBy?: ProviderProfileOrderByWithRelationInput | ProviderProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderProfiles.
     */
    cursor?: ProviderProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderProfiles.
     */
    skip?: number
    distinct?: ProviderProfileScalarFieldEnum | ProviderProfileScalarFieldEnum[]
  }

  /**
   * ProviderProfile create
   */
  export type ProviderProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderProfile.
     */
    data: XOR<ProviderProfileCreateInput, ProviderProfileUncheckedCreateInput>
  }

  /**
   * ProviderProfile createMany
   */
  export type ProviderProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderProfiles.
     */
    data: ProviderProfileCreateManyInput | ProviderProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderProfile createManyAndReturn
   */
  export type ProviderProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * The data used to create many ProviderProfiles.
     */
    data: ProviderProfileCreateManyInput | ProviderProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderProfile update
   */
  export type ProviderProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderProfile.
     */
    data: XOR<ProviderProfileUpdateInput, ProviderProfileUncheckedUpdateInput>
    /**
     * Choose, which ProviderProfile to update.
     */
    where: ProviderProfileWhereUniqueInput
  }

  /**
   * ProviderProfile updateMany
   */
  export type ProviderProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderProfiles.
     */
    data: XOR<ProviderProfileUpdateManyMutationInput, ProviderProfileUncheckedUpdateManyInput>
    /**
     * Filter which ProviderProfiles to update
     */
    where?: ProviderProfileWhereInput
    /**
     * Limit how many ProviderProfiles to update.
     */
    limit?: number
  }

  /**
   * ProviderProfile updateManyAndReturn
   */
  export type ProviderProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * The data used to update ProviderProfiles.
     */
    data: XOR<ProviderProfileUpdateManyMutationInput, ProviderProfileUncheckedUpdateManyInput>
    /**
     * Filter which ProviderProfiles to update
     */
    where?: ProviderProfileWhereInput
    /**
     * Limit how many ProviderProfiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderProfile upsert
   */
  export type ProviderProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderProfile to update in case it exists.
     */
    where: ProviderProfileWhereUniqueInput
    /**
     * In case the ProviderProfile found by the `where` argument doesn't exist, create a new ProviderProfile with this data.
     */
    create: XOR<ProviderProfileCreateInput, ProviderProfileUncheckedCreateInput>
    /**
     * In case the ProviderProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderProfileUpdateInput, ProviderProfileUncheckedUpdateInput>
  }

  /**
   * ProviderProfile delete
   */
  export type ProviderProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
    /**
     * Filter which ProviderProfile to delete.
     */
    where: ProviderProfileWhereUniqueInput
  }

  /**
   * ProviderProfile deleteMany
   */
  export type ProviderProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderProfiles to delete
     */
    where?: ProviderProfileWhereInput
    /**
     * Limit how many ProviderProfiles to delete.
     */
    limit?: number
  }

  /**
   * ProviderProfile without action
   */
  export type ProviderProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderProfile
     */
    select?: ProviderProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderProfile
     */
    omit?: ProviderProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderProfileInclude<ExtArgs> | null
  }


  /**
   * Model ProviderAvailability
   */

  export type AggregateProviderAvailability = {
    _count: ProviderAvailabilityCountAggregateOutputType | null
    _avg: ProviderAvailabilityAvgAggregateOutputType | null
    _sum: ProviderAvailabilitySumAggregateOutputType | null
    _min: ProviderAvailabilityMinAggregateOutputType | null
    _max: ProviderAvailabilityMaxAggregateOutputType | null
  }

  export type ProviderAvailabilityAvgAggregateOutputType = {
    weekday: number | null
  }

  export type ProviderAvailabilitySumAggregateOutputType = {
    weekday: number | null
  }

  export type ProviderAvailabilityMinAggregateOutputType = {
    id: string | null
    providerId: string | null
    weekday: number | null
    startTime: string | null
    endTime: string | null
  }

  export type ProviderAvailabilityMaxAggregateOutputType = {
    id: string | null
    providerId: string | null
    weekday: number | null
    startTime: string | null
    endTime: string | null
  }

  export type ProviderAvailabilityCountAggregateOutputType = {
    id: number
    providerId: number
    weekday: number
    startTime: number
    endTime: number
    _all: number
  }


  export type ProviderAvailabilityAvgAggregateInputType = {
    weekday?: true
  }

  export type ProviderAvailabilitySumAggregateInputType = {
    weekday?: true
  }

  export type ProviderAvailabilityMinAggregateInputType = {
    id?: true
    providerId?: true
    weekday?: true
    startTime?: true
    endTime?: true
  }

  export type ProviderAvailabilityMaxAggregateInputType = {
    id?: true
    providerId?: true
    weekday?: true
    startTime?: true
    endTime?: true
  }

  export type ProviderAvailabilityCountAggregateInputType = {
    id?: true
    providerId?: true
    weekday?: true
    startTime?: true
    endTime?: true
    _all?: true
  }

  export type ProviderAvailabilityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderAvailability to aggregate.
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderAvailabilities to fetch.
     */
    orderBy?: ProviderAvailabilityOrderByWithRelationInput | ProviderAvailabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderAvailabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderAvailabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderAvailabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderAvailabilities
    **/
    _count?: true | ProviderAvailabilityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderAvailabilityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderAvailabilitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderAvailabilityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderAvailabilityMaxAggregateInputType
  }

  export type GetProviderAvailabilityAggregateType<T extends ProviderAvailabilityAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderAvailability]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderAvailability[P]>
      : GetScalarType<T[P], AggregateProviderAvailability[P]>
  }




  export type ProviderAvailabilityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderAvailabilityWhereInput
    orderBy?: ProviderAvailabilityOrderByWithAggregationInput | ProviderAvailabilityOrderByWithAggregationInput[]
    by: ProviderAvailabilityScalarFieldEnum[] | ProviderAvailabilityScalarFieldEnum
    having?: ProviderAvailabilityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderAvailabilityCountAggregateInputType | true
    _avg?: ProviderAvailabilityAvgAggregateInputType
    _sum?: ProviderAvailabilitySumAggregateInputType
    _min?: ProviderAvailabilityMinAggregateInputType
    _max?: ProviderAvailabilityMaxAggregateInputType
  }

  export type ProviderAvailabilityGroupByOutputType = {
    id: string
    providerId: string
    weekday: number
    startTime: string
    endTime: string
    _count: ProviderAvailabilityCountAggregateOutputType | null
    _avg: ProviderAvailabilityAvgAggregateOutputType | null
    _sum: ProviderAvailabilitySumAggregateOutputType | null
    _min: ProviderAvailabilityMinAggregateOutputType | null
    _max: ProviderAvailabilityMaxAggregateOutputType | null
  }

  type GetProviderAvailabilityGroupByPayload<T extends ProviderAvailabilityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderAvailabilityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderAvailabilityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderAvailabilityGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderAvailabilityGroupByOutputType[P]>
        }
      >
    >


  export type ProviderAvailabilitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    weekday?: boolean
    startTime?: boolean
    endTime?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerAvailability"]>

  export type ProviderAvailabilitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    weekday?: boolean
    startTime?: boolean
    endTime?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerAvailability"]>

  export type ProviderAvailabilitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    weekday?: boolean
    startTime?: boolean
    endTime?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerAvailability"]>

  export type ProviderAvailabilitySelectScalar = {
    id?: boolean
    providerId?: boolean
    weekday?: boolean
    startTime?: boolean
    endTime?: boolean
  }

  export type ProviderAvailabilityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "providerId" | "weekday" | "startTime" | "endTime", ExtArgs["result"]["providerAvailability"]>
  export type ProviderAvailabilityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderAvailabilityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderAvailabilityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProviderAvailabilityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderAvailability"
    objects: {
      provider: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      providerId: string
      weekday: number
      startTime: string
      endTime: string
    }, ExtArgs["result"]["providerAvailability"]>
    composites: {}
  }

  type ProviderAvailabilityGetPayload<S extends boolean | null | undefined | ProviderAvailabilityDefaultArgs> = $Result.GetResult<Prisma.$ProviderAvailabilityPayload, S>

  type ProviderAvailabilityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProviderAvailabilityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProviderAvailabilityCountAggregateInputType | true
    }

  export interface ProviderAvailabilityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderAvailability'], meta: { name: 'ProviderAvailability' } }
    /**
     * Find zero or one ProviderAvailability that matches the filter.
     * @param {ProviderAvailabilityFindUniqueArgs} args - Arguments to find a ProviderAvailability
     * @example
     * // Get one ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderAvailabilityFindUniqueArgs>(args: SelectSubset<T, ProviderAvailabilityFindUniqueArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProviderAvailability that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProviderAvailabilityFindUniqueOrThrowArgs} args - Arguments to find a ProviderAvailability
     * @example
     * // Get one ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderAvailabilityFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderAvailabilityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderAvailability that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityFindFirstArgs} args - Arguments to find a ProviderAvailability
     * @example
     * // Get one ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderAvailabilityFindFirstArgs>(args?: SelectSubset<T, ProviderAvailabilityFindFirstArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderAvailability that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityFindFirstOrThrowArgs} args - Arguments to find a ProviderAvailability
     * @example
     * // Get one ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderAvailabilityFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderAvailabilityFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProviderAvailabilities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderAvailabilities
     * const providerAvailabilities = await prisma.providerAvailability.findMany()
     * 
     * // Get first 10 ProviderAvailabilities
     * const providerAvailabilities = await prisma.providerAvailability.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerAvailabilityWithIdOnly = await prisma.providerAvailability.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderAvailabilityFindManyArgs>(args?: SelectSubset<T, ProviderAvailabilityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProviderAvailability.
     * @param {ProviderAvailabilityCreateArgs} args - Arguments to create a ProviderAvailability.
     * @example
     * // Create one ProviderAvailability
     * const ProviderAvailability = await prisma.providerAvailability.create({
     *   data: {
     *     // ... data to create a ProviderAvailability
     *   }
     * })
     * 
     */
    create<T extends ProviderAvailabilityCreateArgs>(args: SelectSubset<T, ProviderAvailabilityCreateArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProviderAvailabilities.
     * @param {ProviderAvailabilityCreateManyArgs} args - Arguments to create many ProviderAvailabilities.
     * @example
     * // Create many ProviderAvailabilities
     * const providerAvailability = await prisma.providerAvailability.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderAvailabilityCreateManyArgs>(args?: SelectSubset<T, ProviderAvailabilityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderAvailabilities and returns the data saved in the database.
     * @param {ProviderAvailabilityCreateManyAndReturnArgs} args - Arguments to create many ProviderAvailabilities.
     * @example
     * // Create many ProviderAvailabilities
     * const providerAvailability = await prisma.providerAvailability.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderAvailabilities and only return the `id`
     * const providerAvailabilityWithIdOnly = await prisma.providerAvailability.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderAvailabilityCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderAvailabilityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProviderAvailability.
     * @param {ProviderAvailabilityDeleteArgs} args - Arguments to delete one ProviderAvailability.
     * @example
     * // Delete one ProviderAvailability
     * const ProviderAvailability = await prisma.providerAvailability.delete({
     *   where: {
     *     // ... filter to delete one ProviderAvailability
     *   }
     * })
     * 
     */
    delete<T extends ProviderAvailabilityDeleteArgs>(args: SelectSubset<T, ProviderAvailabilityDeleteArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProviderAvailability.
     * @param {ProviderAvailabilityUpdateArgs} args - Arguments to update one ProviderAvailability.
     * @example
     * // Update one ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderAvailabilityUpdateArgs>(args: SelectSubset<T, ProviderAvailabilityUpdateArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProviderAvailabilities.
     * @param {ProviderAvailabilityDeleteManyArgs} args - Arguments to filter ProviderAvailabilities to delete.
     * @example
     * // Delete a few ProviderAvailabilities
     * const { count } = await prisma.providerAvailability.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderAvailabilityDeleteManyArgs>(args?: SelectSubset<T, ProviderAvailabilityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderAvailabilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderAvailabilities
     * const providerAvailability = await prisma.providerAvailability.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderAvailabilityUpdateManyArgs>(args: SelectSubset<T, ProviderAvailabilityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderAvailabilities and returns the data updated in the database.
     * @param {ProviderAvailabilityUpdateManyAndReturnArgs} args - Arguments to update many ProviderAvailabilities.
     * @example
     * // Update many ProviderAvailabilities
     * const providerAvailability = await prisma.providerAvailability.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProviderAvailabilities and only return the `id`
     * const providerAvailabilityWithIdOnly = await prisma.providerAvailability.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProviderAvailabilityUpdateManyAndReturnArgs>(args: SelectSubset<T, ProviderAvailabilityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProviderAvailability.
     * @param {ProviderAvailabilityUpsertArgs} args - Arguments to update or create a ProviderAvailability.
     * @example
     * // Update or create a ProviderAvailability
     * const providerAvailability = await prisma.providerAvailability.upsert({
     *   create: {
     *     // ... data to create a ProviderAvailability
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderAvailability we want to update
     *   }
     * })
     */
    upsert<T extends ProviderAvailabilityUpsertArgs>(args: SelectSubset<T, ProviderAvailabilityUpsertArgs<ExtArgs>>): Prisma__ProviderAvailabilityClient<$Result.GetResult<Prisma.$ProviderAvailabilityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProviderAvailabilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityCountArgs} args - Arguments to filter ProviderAvailabilities to count.
     * @example
     * // Count the number of ProviderAvailabilities
     * const count = await prisma.providerAvailability.count({
     *   where: {
     *     // ... the filter for the ProviderAvailabilities we want to count
     *   }
     * })
    **/
    count<T extends ProviderAvailabilityCountArgs>(
      args?: Subset<T, ProviderAvailabilityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderAvailabilityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderAvailability.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderAvailabilityAggregateArgs>(args: Subset<T, ProviderAvailabilityAggregateArgs>): Prisma.PrismaPromise<GetProviderAvailabilityAggregateType<T>>

    /**
     * Group by ProviderAvailability.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderAvailabilityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderAvailabilityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderAvailabilityGroupByArgs['orderBy'] }
        : { orderBy?: ProviderAvailabilityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderAvailabilityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderAvailabilityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderAvailability model
   */
  readonly fields: ProviderAvailabilityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderAvailability.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderAvailabilityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderAvailability model
   */
  interface ProviderAvailabilityFieldRefs {
    readonly id: FieldRef<"ProviderAvailability", 'String'>
    readonly providerId: FieldRef<"ProviderAvailability", 'String'>
    readonly weekday: FieldRef<"ProviderAvailability", 'Int'>
    readonly startTime: FieldRef<"ProviderAvailability", 'String'>
    readonly endTime: FieldRef<"ProviderAvailability", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProviderAvailability findUnique
   */
  export type ProviderAvailabilityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter, which ProviderAvailability to fetch.
     */
    where: ProviderAvailabilityWhereUniqueInput
  }

  /**
   * ProviderAvailability findUniqueOrThrow
   */
  export type ProviderAvailabilityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter, which ProviderAvailability to fetch.
     */
    where: ProviderAvailabilityWhereUniqueInput
  }

  /**
   * ProviderAvailability findFirst
   */
  export type ProviderAvailabilityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter, which ProviderAvailability to fetch.
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderAvailabilities to fetch.
     */
    orderBy?: ProviderAvailabilityOrderByWithRelationInput | ProviderAvailabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderAvailabilities.
     */
    cursor?: ProviderAvailabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderAvailabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderAvailabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderAvailabilities.
     */
    distinct?: ProviderAvailabilityScalarFieldEnum | ProviderAvailabilityScalarFieldEnum[]
  }

  /**
   * ProviderAvailability findFirstOrThrow
   */
  export type ProviderAvailabilityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter, which ProviderAvailability to fetch.
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderAvailabilities to fetch.
     */
    orderBy?: ProviderAvailabilityOrderByWithRelationInput | ProviderAvailabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderAvailabilities.
     */
    cursor?: ProviderAvailabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderAvailabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderAvailabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderAvailabilities.
     */
    distinct?: ProviderAvailabilityScalarFieldEnum | ProviderAvailabilityScalarFieldEnum[]
  }

  /**
   * ProviderAvailability findMany
   */
  export type ProviderAvailabilityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter, which ProviderAvailabilities to fetch.
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderAvailabilities to fetch.
     */
    orderBy?: ProviderAvailabilityOrderByWithRelationInput | ProviderAvailabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderAvailabilities.
     */
    cursor?: ProviderAvailabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderAvailabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderAvailabilities.
     */
    skip?: number
    distinct?: ProviderAvailabilityScalarFieldEnum | ProviderAvailabilityScalarFieldEnum[]
  }

  /**
   * ProviderAvailability create
   */
  export type ProviderAvailabilityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderAvailability.
     */
    data: XOR<ProviderAvailabilityCreateInput, ProviderAvailabilityUncheckedCreateInput>
  }

  /**
   * ProviderAvailability createMany
   */
  export type ProviderAvailabilityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderAvailabilities.
     */
    data: ProviderAvailabilityCreateManyInput | ProviderAvailabilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderAvailability createManyAndReturn
   */
  export type ProviderAvailabilityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * The data used to create many ProviderAvailabilities.
     */
    data: ProviderAvailabilityCreateManyInput | ProviderAvailabilityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderAvailability update
   */
  export type ProviderAvailabilityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderAvailability.
     */
    data: XOR<ProviderAvailabilityUpdateInput, ProviderAvailabilityUncheckedUpdateInput>
    /**
     * Choose, which ProviderAvailability to update.
     */
    where: ProviderAvailabilityWhereUniqueInput
  }

  /**
   * ProviderAvailability updateMany
   */
  export type ProviderAvailabilityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderAvailabilities.
     */
    data: XOR<ProviderAvailabilityUpdateManyMutationInput, ProviderAvailabilityUncheckedUpdateManyInput>
    /**
     * Filter which ProviderAvailabilities to update
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * Limit how many ProviderAvailabilities to update.
     */
    limit?: number
  }

  /**
   * ProviderAvailability updateManyAndReturn
   */
  export type ProviderAvailabilityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * The data used to update ProviderAvailabilities.
     */
    data: XOR<ProviderAvailabilityUpdateManyMutationInput, ProviderAvailabilityUncheckedUpdateManyInput>
    /**
     * Filter which ProviderAvailabilities to update
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * Limit how many ProviderAvailabilities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderAvailability upsert
   */
  export type ProviderAvailabilityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderAvailability to update in case it exists.
     */
    where: ProviderAvailabilityWhereUniqueInput
    /**
     * In case the ProviderAvailability found by the `where` argument doesn't exist, create a new ProviderAvailability with this data.
     */
    create: XOR<ProviderAvailabilityCreateInput, ProviderAvailabilityUncheckedCreateInput>
    /**
     * In case the ProviderAvailability was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderAvailabilityUpdateInput, ProviderAvailabilityUncheckedUpdateInput>
  }

  /**
   * ProviderAvailability delete
   */
  export type ProviderAvailabilityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
    /**
     * Filter which ProviderAvailability to delete.
     */
    where: ProviderAvailabilityWhereUniqueInput
  }

  /**
   * ProviderAvailability deleteMany
   */
  export type ProviderAvailabilityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderAvailabilities to delete
     */
    where?: ProviderAvailabilityWhereInput
    /**
     * Limit how many ProviderAvailabilities to delete.
     */
    limit?: number
  }

  /**
   * ProviderAvailability without action
   */
  export type ProviderAvailabilityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderAvailability
     */
    select?: ProviderAvailabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderAvailability
     */
    omit?: ProviderAvailabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderAvailabilityInclude<ExtArgs> | null
  }


  /**
   * Model ProviderCategory
   */

  export type AggregateProviderCategory = {
    _count: ProviderCategoryCountAggregateOutputType | null
    _avg: ProviderCategoryAvgAggregateOutputType | null
    _sum: ProviderCategorySumAggregateOutputType | null
    _min: ProviderCategoryMinAggregateOutputType | null
    _max: ProviderCategoryMaxAggregateOutputType | null
  }

  export type ProviderCategoryAvgAggregateOutputType = {
    minPriceCents: number | null
    levelWeight: number | null
    expWeight: number | null
    score: Decimal | null
  }

  export type ProviderCategorySumAggregateOutputType = {
    minPriceCents: number | null
    levelWeight: number | null
    expWeight: number | null
    score: Decimal | null
  }

  export type ProviderCategoryMinAggregateOutputType = {
    id: string | null
    providerId: string | null
    categoryId: string | null
    minPriceCents: number | null
    active: boolean | null
    updatedAt: Date | null
    levelWeight: number | null
    expWeight: number | null
    score: Decimal | null
    isAvailable: boolean | null
  }

  export type ProviderCategoryMaxAggregateOutputType = {
    id: string | null
    providerId: string | null
    categoryId: string | null
    minPriceCents: number | null
    active: boolean | null
    updatedAt: Date | null
    levelWeight: number | null
    expWeight: number | null
    score: Decimal | null
    isAvailable: boolean | null
  }

  export type ProviderCategoryCountAggregateOutputType = {
    id: number
    providerId: number
    categoryId: number
    minPriceCents: number
    active: number
    updatedAt: number
    levelWeight: number
    expWeight: number
    score: number
    isAvailable: number
    _all: number
  }


  export type ProviderCategoryAvgAggregateInputType = {
    minPriceCents?: true
    levelWeight?: true
    expWeight?: true
    score?: true
  }

  export type ProviderCategorySumAggregateInputType = {
    minPriceCents?: true
    levelWeight?: true
    expWeight?: true
    score?: true
  }

  export type ProviderCategoryMinAggregateInputType = {
    id?: true
    providerId?: true
    categoryId?: true
    minPriceCents?: true
    active?: true
    updatedAt?: true
    levelWeight?: true
    expWeight?: true
    score?: true
    isAvailable?: true
  }

  export type ProviderCategoryMaxAggregateInputType = {
    id?: true
    providerId?: true
    categoryId?: true
    minPriceCents?: true
    active?: true
    updatedAt?: true
    levelWeight?: true
    expWeight?: true
    score?: true
    isAvailable?: true
  }

  export type ProviderCategoryCountAggregateInputType = {
    id?: true
    providerId?: true
    categoryId?: true
    minPriceCents?: true
    active?: true
    updatedAt?: true
    levelWeight?: true
    expWeight?: true
    score?: true
    isAvailable?: true
    _all?: true
  }

  export type ProviderCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderCategory to aggregate.
     */
    where?: ProviderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderCategories to fetch.
     */
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderCategories
    **/
    _count?: true | ProviderCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderCategoryMaxAggregateInputType
  }

  export type GetProviderCategoryAggregateType<T extends ProviderCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderCategory[P]>
      : GetScalarType<T[P], AggregateProviderCategory[P]>
  }




  export type ProviderCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderCategoryWhereInput
    orderBy?: ProviderCategoryOrderByWithAggregationInput | ProviderCategoryOrderByWithAggregationInput[]
    by: ProviderCategoryScalarFieldEnum[] | ProviderCategoryScalarFieldEnum
    having?: ProviderCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderCategoryCountAggregateInputType | true
    _avg?: ProviderCategoryAvgAggregateInputType
    _sum?: ProviderCategorySumAggregateInputType
    _min?: ProviderCategoryMinAggregateInputType
    _max?: ProviderCategoryMaxAggregateInputType
  }

  export type ProviderCategoryGroupByOutputType = {
    id: string
    providerId: string
    categoryId: string
    minPriceCents: number
    active: boolean
    updatedAt: Date
    levelWeight: number | null
    expWeight: number | null
    score: Decimal | null
    isAvailable: boolean | null
    _count: ProviderCategoryCountAggregateOutputType | null
    _avg: ProviderCategoryAvgAggregateOutputType | null
    _sum: ProviderCategorySumAggregateOutputType | null
    _min: ProviderCategoryMinAggregateOutputType | null
    _max: ProviderCategoryMaxAggregateOutputType | null
  }

  type GetProviderCategoryGroupByPayload<T extends ProviderCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProviderCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    categoryId?: boolean
    minPriceCents?: boolean
    active?: boolean
    updatedAt?: boolean
    levelWeight?: boolean
    expWeight?: boolean
    score?: boolean
    isAvailable?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerCategory"]>

  export type ProviderCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    categoryId?: boolean
    minPriceCents?: boolean
    active?: boolean
    updatedAt?: boolean
    levelWeight?: boolean
    expWeight?: boolean
    score?: boolean
    isAvailable?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerCategory"]>

  export type ProviderCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    categoryId?: boolean
    minPriceCents?: boolean
    active?: boolean
    updatedAt?: boolean
    levelWeight?: boolean
    expWeight?: boolean
    score?: boolean
    isAvailable?: boolean
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerCategory"]>

  export type ProviderCategorySelectScalar = {
    id?: boolean
    providerId?: boolean
    categoryId?: boolean
    minPriceCents?: boolean
    active?: boolean
    updatedAt?: boolean
    levelWeight?: boolean
    expWeight?: boolean
    score?: boolean
    isAvailable?: boolean
  }

  export type ProviderCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "providerId" | "categoryId" | "minPriceCents" | "active" | "updatedAt" | "levelWeight" | "expWeight" | "score" | "isAvailable", ExtArgs["result"]["providerCategory"]>
  export type ProviderCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type ProviderCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }
  export type ProviderCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider?: boolean | UserDefaultArgs<ExtArgs>
    category?: boolean | CategoryDefaultArgs<ExtArgs>
  }

  export type $ProviderCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderCategory"
    objects: {
      provider: Prisma.$UserPayload<ExtArgs>
      category: Prisma.$CategoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      providerId: string
      categoryId: string
      minPriceCents: number
      active: boolean
      updatedAt: Date
      levelWeight: number | null
      expWeight: number | null
      score: Prisma.Decimal | null
      isAvailable: boolean | null
    }, ExtArgs["result"]["providerCategory"]>
    composites: {}
  }

  type ProviderCategoryGetPayload<S extends boolean | null | undefined | ProviderCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProviderCategoryPayload, S>

  type ProviderCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProviderCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProviderCategoryCountAggregateInputType | true
    }

  export interface ProviderCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderCategory'], meta: { name: 'ProviderCategory' } }
    /**
     * Find zero or one ProviderCategory that matches the filter.
     * @param {ProviderCategoryFindUniqueArgs} args - Arguments to find a ProviderCategory
     * @example
     * // Get one ProviderCategory
     * const providerCategory = await prisma.providerCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderCategoryFindUniqueArgs>(args: SelectSubset<T, ProviderCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProviderCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProviderCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProviderCategory
     * @example
     * // Get one ProviderCategory
     * const providerCategory = await prisma.providerCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryFindFirstArgs} args - Arguments to find a ProviderCategory
     * @example
     * // Get one ProviderCategory
     * const providerCategory = await prisma.providerCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderCategoryFindFirstArgs>(args?: SelectSubset<T, ProviderCategoryFindFirstArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryFindFirstOrThrowArgs} args - Arguments to find a ProviderCategory
     * @example
     * // Get one ProviderCategory
     * const providerCategory = await prisma.providerCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProviderCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderCategories
     * const providerCategories = await prisma.providerCategory.findMany()
     * 
     * // Get first 10 ProviderCategories
     * const providerCategories = await prisma.providerCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerCategoryWithIdOnly = await prisma.providerCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderCategoryFindManyArgs>(args?: SelectSubset<T, ProviderCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProviderCategory.
     * @param {ProviderCategoryCreateArgs} args - Arguments to create a ProviderCategory.
     * @example
     * // Create one ProviderCategory
     * const ProviderCategory = await prisma.providerCategory.create({
     *   data: {
     *     // ... data to create a ProviderCategory
     *   }
     * })
     * 
     */
    create<T extends ProviderCategoryCreateArgs>(args: SelectSubset<T, ProviderCategoryCreateArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProviderCategories.
     * @param {ProviderCategoryCreateManyArgs} args - Arguments to create many ProviderCategories.
     * @example
     * // Create many ProviderCategories
     * const providerCategory = await prisma.providerCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderCategoryCreateManyArgs>(args?: SelectSubset<T, ProviderCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderCategories and returns the data saved in the database.
     * @param {ProviderCategoryCreateManyAndReturnArgs} args - Arguments to create many ProviderCategories.
     * @example
     * // Create many ProviderCategories
     * const providerCategory = await prisma.providerCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderCategories and only return the `id`
     * const providerCategoryWithIdOnly = await prisma.providerCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProviderCategory.
     * @param {ProviderCategoryDeleteArgs} args - Arguments to delete one ProviderCategory.
     * @example
     * // Delete one ProviderCategory
     * const ProviderCategory = await prisma.providerCategory.delete({
     *   where: {
     *     // ... filter to delete one ProviderCategory
     *   }
     * })
     * 
     */
    delete<T extends ProviderCategoryDeleteArgs>(args: SelectSubset<T, ProviderCategoryDeleteArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProviderCategory.
     * @param {ProviderCategoryUpdateArgs} args - Arguments to update one ProviderCategory.
     * @example
     * // Update one ProviderCategory
     * const providerCategory = await prisma.providerCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderCategoryUpdateArgs>(args: SelectSubset<T, ProviderCategoryUpdateArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProviderCategories.
     * @param {ProviderCategoryDeleteManyArgs} args - Arguments to filter ProviderCategories to delete.
     * @example
     * // Delete a few ProviderCategories
     * const { count } = await prisma.providerCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderCategoryDeleteManyArgs>(args?: SelectSubset<T, ProviderCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderCategories
     * const providerCategory = await prisma.providerCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderCategoryUpdateManyArgs>(args: SelectSubset<T, ProviderCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderCategories and returns the data updated in the database.
     * @param {ProviderCategoryUpdateManyAndReturnArgs} args - Arguments to update many ProviderCategories.
     * @example
     * // Update many ProviderCategories
     * const providerCategory = await prisma.providerCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProviderCategories and only return the `id`
     * const providerCategoryWithIdOnly = await prisma.providerCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProviderCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ProviderCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProviderCategory.
     * @param {ProviderCategoryUpsertArgs} args - Arguments to update or create a ProviderCategory.
     * @example
     * // Update or create a ProviderCategory
     * const providerCategory = await prisma.providerCategory.upsert({
     *   create: {
     *     // ... data to create a ProviderCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProviderCategoryUpsertArgs>(args: SelectSubset<T, ProviderCategoryUpsertArgs<ExtArgs>>): Prisma__ProviderCategoryClient<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProviderCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryCountArgs} args - Arguments to filter ProviderCategories to count.
     * @example
     * // Count the number of ProviderCategories
     * const count = await prisma.providerCategory.count({
     *   where: {
     *     // ... the filter for the ProviderCategories we want to count
     *   }
     * })
    **/
    count<T extends ProviderCategoryCountArgs>(
      args?: Subset<T, ProviderCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderCategoryAggregateArgs>(args: Subset<T, ProviderCategoryAggregateArgs>): Prisma.PrismaPromise<GetProviderCategoryAggregateType<T>>

    /**
     * Group by ProviderCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProviderCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderCategory model
   */
  readonly fields: ProviderCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderCategory model
   */
  interface ProviderCategoryFieldRefs {
    readonly id: FieldRef<"ProviderCategory", 'String'>
    readonly providerId: FieldRef<"ProviderCategory", 'String'>
    readonly categoryId: FieldRef<"ProviderCategory", 'String'>
    readonly minPriceCents: FieldRef<"ProviderCategory", 'Int'>
    readonly active: FieldRef<"ProviderCategory", 'Boolean'>
    readonly updatedAt: FieldRef<"ProviderCategory", 'DateTime'>
    readonly levelWeight: FieldRef<"ProviderCategory", 'Int'>
    readonly expWeight: FieldRef<"ProviderCategory", 'Int'>
    readonly score: FieldRef<"ProviderCategory", 'Decimal'>
    readonly isAvailable: FieldRef<"ProviderCategory", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ProviderCategory findUnique
   */
  export type ProviderCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProviderCategory to fetch.
     */
    where: ProviderCategoryWhereUniqueInput
  }

  /**
   * ProviderCategory findUniqueOrThrow
   */
  export type ProviderCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProviderCategory to fetch.
     */
    where: ProviderCategoryWhereUniqueInput
  }

  /**
   * ProviderCategory findFirst
   */
  export type ProviderCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProviderCategory to fetch.
     */
    where?: ProviderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderCategories to fetch.
     */
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderCategories.
     */
    cursor?: ProviderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderCategories.
     */
    distinct?: ProviderCategoryScalarFieldEnum | ProviderCategoryScalarFieldEnum[]
  }

  /**
   * ProviderCategory findFirstOrThrow
   */
  export type ProviderCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProviderCategory to fetch.
     */
    where?: ProviderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderCategories to fetch.
     */
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderCategories.
     */
    cursor?: ProviderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderCategories.
     */
    distinct?: ProviderCategoryScalarFieldEnum | ProviderCategoryScalarFieldEnum[]
  }

  /**
   * ProviderCategory findMany
   */
  export type ProviderCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProviderCategories to fetch.
     */
    where?: ProviderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderCategories to fetch.
     */
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderCategories.
     */
    cursor?: ProviderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderCategories.
     */
    skip?: number
    distinct?: ProviderCategoryScalarFieldEnum | ProviderCategoryScalarFieldEnum[]
  }

  /**
   * ProviderCategory create
   */
  export type ProviderCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderCategory.
     */
    data: XOR<ProviderCategoryCreateInput, ProviderCategoryUncheckedCreateInput>
  }

  /**
   * ProviderCategory createMany
   */
  export type ProviderCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderCategories.
     */
    data: ProviderCategoryCreateManyInput | ProviderCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderCategory createManyAndReturn
   */
  export type ProviderCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many ProviderCategories.
     */
    data: ProviderCategoryCreateManyInput | ProviderCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderCategory update
   */
  export type ProviderCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderCategory.
     */
    data: XOR<ProviderCategoryUpdateInput, ProviderCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProviderCategory to update.
     */
    where: ProviderCategoryWhereUniqueInput
  }

  /**
   * ProviderCategory updateMany
   */
  export type ProviderCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderCategories.
     */
    data: XOR<ProviderCategoryUpdateManyMutationInput, ProviderCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProviderCategories to update
     */
    where?: ProviderCategoryWhereInput
    /**
     * Limit how many ProviderCategories to update.
     */
    limit?: number
  }

  /**
   * ProviderCategory updateManyAndReturn
   */
  export type ProviderCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * The data used to update ProviderCategories.
     */
    data: XOR<ProviderCategoryUpdateManyMutationInput, ProviderCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProviderCategories to update
     */
    where?: ProviderCategoryWhereInput
    /**
     * Limit how many ProviderCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderCategory upsert
   */
  export type ProviderCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderCategory to update in case it exists.
     */
    where: ProviderCategoryWhereUniqueInput
    /**
     * In case the ProviderCategory found by the `where` argument doesn't exist, create a new ProviderCategory with this data.
     */
    create: XOR<ProviderCategoryCreateInput, ProviderCategoryUncheckedCreateInput>
    /**
     * In case the ProviderCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderCategoryUpdateInput, ProviderCategoryUncheckedUpdateInput>
  }

  /**
   * ProviderCategory delete
   */
  export type ProviderCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProviderCategory to delete.
     */
    where: ProviderCategoryWhereUniqueInput
  }

  /**
   * ProviderCategory deleteMany
   */
  export type ProviderCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderCategories to delete
     */
    where?: ProviderCategoryWhereInput
    /**
     * Limit how many ProviderCategories to delete.
     */
    limit?: number
  }

  /**
   * ProviderCategory without action
   */
  export type ProviderCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    active: boolean | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    active: boolean | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    active: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    active?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    active?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    active?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    slug: string | null
    active: boolean
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    active?: boolean
    orders?: boolean | Category$ordersArgs<ExtArgs>
    providerCategories?: boolean | Category$providerCategoriesArgs<ExtArgs>
    llmClassifications?: boolean | Category$llmClassificationsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    active?: boolean
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    active?: boolean
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    active?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "active", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Category$ordersArgs<ExtArgs>
    providerCategories?: boolean | Category$providerCategoriesArgs<ExtArgs>
    llmClassifications?: boolean | Category$llmClassificationsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      providerCategories: Prisma.$ProviderCategoryPayload<ExtArgs>[]
      llmClassifications: Prisma.$LlmClassificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string | null
      active: boolean
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Category$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Category$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerCategories<T extends Category$providerCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Category$providerCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    llmClassifications<T extends Category$llmClassificationsArgs<ExtArgs> = {}>(args?: Subset<T, Category$llmClassificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly slug: FieldRef<"Category", 'String'>
    readonly active: FieldRef<"Category", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.orders
   */
  export type Category$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Category.providerCategories
   */
  export type Category$providerCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderCategory
     */
    select?: ProviderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderCategory
     */
    omit?: ProviderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderCategoryInclude<ExtArgs> | null
    where?: ProviderCategoryWhereInput
    orderBy?: ProviderCategoryOrderByWithRelationInput | ProviderCategoryOrderByWithRelationInput[]
    cursor?: ProviderCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProviderCategoryScalarFieldEnum | ProviderCategoryScalarFieldEnum[]
  }

  /**
   * Category.llmClassifications
   */
  export type Category$llmClassificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    where?: LlmClassificationWhereInput
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    cursor?: LlmClassificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LlmClassificationScalarFieldEnum | LlmClassificationScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    depositBaseAvgCents: number | null
    depositCents: number | null
    finalPriceCents: number | null
  }

  export type OrderSumAggregateOutputType = {
    depositBaseAvgCents: number | null
    depositCents: number | null
    finalPriceCents: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    providerId: string | null
    addressId: string | null
    categoryId: string | null
    description: string | null
    status: string | null
    depositMethod: string | null
    depositBaseAvgCents: number | null
    depositCents: number | null
    slotStart: Date | null
    slotEnd: Date | null
    finalPriceCents: number | null
    reviewStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    providerId: string | null
    addressId: string | null
    categoryId: string | null
    description: string | null
    status: string | null
    depositMethod: string | null
    depositBaseAvgCents: number | null
    depositCents: number | null
    slotStart: Date | null
    slotEnd: Date | null
    finalPriceCents: number | null
    reviewStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    clientId: number
    providerId: number
    addressId: number
    categoryId: number
    description: number
    status: number
    depositMethod: number
    depositBaseAvgCents: number
    depositCents: number
    slotStart: number
    slotEnd: number
    finalPriceCents: number
    reviewStatus: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    depositBaseAvgCents?: true
    depositCents?: true
    finalPriceCents?: true
  }

  export type OrderSumAggregateInputType = {
    depositBaseAvgCents?: true
    depositCents?: true
    finalPriceCents?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    clientId?: true
    providerId?: true
    addressId?: true
    categoryId?: true
    description?: true
    status?: true
    depositMethod?: true
    depositBaseAvgCents?: true
    depositCents?: true
    slotStart?: true
    slotEnd?: true
    finalPriceCents?: true
    reviewStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    clientId?: true
    providerId?: true
    addressId?: true
    categoryId?: true
    description?: true
    status?: true
    depositMethod?: true
    depositBaseAvgCents?: true
    depositCents?: true
    slotStart?: true
    slotEnd?: true
    finalPriceCents?: true
    reviewStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    clientId?: true
    providerId?: true
    addressId?: true
    categoryId?: true
    description?: true
    status?: true
    depositMethod?: true
    depositBaseAvgCents?: true
    depositCents?: true
    slotStart?: true
    slotEnd?: true
    finalPriceCents?: true
    reviewStatus?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    clientId: string
    providerId: string | null
    addressId: string | null
    categoryId: string | null
    description: string | null
    status: string
    depositMethod: string
    depositBaseAvgCents: number | null
    depositCents: number
    slotStart: Date | null
    slotEnd: Date | null
    finalPriceCents: number | null
    reviewStatus: string | null
    createdAt: Date
    updatedAt: Date
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    providerId?: boolean
    addressId?: boolean
    categoryId?: boolean
    description?: boolean
    status?: boolean
    depositMethod?: boolean
    depositBaseAvgCents?: boolean
    depositCents?: boolean
    slotStart?: boolean
    slotEnd?: boolean
    finalPriceCents?: boolean
    reviewStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
    orderSlots?: boolean | Order$orderSlotsArgs<ExtArgs>
    orderCategories?: boolean | Order$orderCategoriesArgs<ExtArgs>
    orderInvitations?: boolean | Order$orderInvitationsArgs<ExtArgs>
    orderStatusHistory?: boolean | Order$orderStatusHistoryArgs<ExtArgs>
    orderReview?: boolean | Order$orderReviewArgs<ExtArgs>
    payments?: boolean | Order$paymentsArgs<ExtArgs>
    paymentEvents?: boolean | Order$paymentEventsArgs<ExtArgs>
    commission?: boolean | Order$commissionArgs<ExtArgs>
    clientCredits?: boolean | Order$clientCreditsArgs<ExtArgs>
    providerPayout?: boolean | Order$providerPayoutArgs<ExtArgs>
    matchScores?: boolean | Order$matchScoresArgs<ExtArgs>
    llmClassifications?: boolean | Order$llmClassificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    providerId?: boolean
    addressId?: boolean
    categoryId?: boolean
    description?: boolean
    status?: boolean
    depositMethod?: boolean
    depositBaseAvgCents?: boolean
    depositCents?: boolean
    slotStart?: boolean
    slotEnd?: boolean
    finalPriceCents?: boolean
    reviewStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    providerId?: boolean
    addressId?: boolean
    categoryId?: boolean
    description?: boolean
    status?: boolean
    depositMethod?: boolean
    depositBaseAvgCents?: boolean
    depositCents?: boolean
    slotStart?: boolean
    slotEnd?: boolean
    finalPriceCents?: boolean
    reviewStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    clientId?: boolean
    providerId?: boolean
    addressId?: boolean
    categoryId?: boolean
    description?: boolean
    status?: boolean
    depositMethod?: boolean
    depositBaseAvgCents?: boolean
    depositCents?: boolean
    slotStart?: boolean
    slotEnd?: boolean
    finalPriceCents?: boolean
    reviewStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clientId" | "providerId" | "addressId" | "categoryId" | "description" | "status" | "depositMethod" | "depositBaseAvgCents" | "depositCents" | "slotStart" | "slotEnd" | "finalPriceCents" | "reviewStatus" | "createdAt" | "updatedAt", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
    orderSlots?: boolean | Order$orderSlotsArgs<ExtArgs>
    orderCategories?: boolean | Order$orderCategoriesArgs<ExtArgs>
    orderInvitations?: boolean | Order$orderInvitationsArgs<ExtArgs>
    orderStatusHistory?: boolean | Order$orderStatusHistoryArgs<ExtArgs>
    orderReview?: boolean | Order$orderReviewArgs<ExtArgs>
    payments?: boolean | Order$paymentsArgs<ExtArgs>
    paymentEvents?: boolean | Order$paymentEventsArgs<ExtArgs>
    commission?: boolean | Order$commissionArgs<ExtArgs>
    clientCredits?: boolean | Order$clientCreditsArgs<ExtArgs>
    providerPayout?: boolean | Order$providerPayoutArgs<ExtArgs>
    matchScores?: boolean | Order$matchScoresArgs<ExtArgs>
    llmClassifications?: boolean | Order$llmClassificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | Order$providerArgs<ExtArgs>
    address?: boolean | Order$addressArgs<ExtArgs>
    category?: boolean | Order$categoryArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      client: Prisma.$UserPayload<ExtArgs>
      provider: Prisma.$UserPayload<ExtArgs> | null
      address: Prisma.$AddressPayload<ExtArgs> | null
      category: Prisma.$CategoryPayload<ExtArgs> | null
      orderSlots: Prisma.$OrderSlotPayload<ExtArgs>[]
      orderCategories: Prisma.$OrderCategoryPayload<ExtArgs>[]
      orderInvitations: Prisma.$OrderInvitationPayload<ExtArgs>[]
      orderStatusHistory: Prisma.$OrderStatusHistoryPayload<ExtArgs>[]
      orderReview: Prisma.$OrderReviewPayload<ExtArgs> | null
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      paymentEvents: Prisma.$PaymentEventPayload<ExtArgs>[]
      commission: Prisma.$CommissionPayload<ExtArgs> | null
      clientCredits: Prisma.$ClientCreditPayload<ExtArgs>[]
      providerPayout: Prisma.$ProviderPayoutPayload<ExtArgs> | null
      matchScores: Prisma.$MatchScorePayload<ExtArgs>[]
      llmClassifications: Prisma.$LlmClassificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      providerId: string | null
      addressId: string | null
      categoryId: string | null
      description: string | null
      status: string
      depositMethod: string
      depositBaseAvgCents: number | null
      depositCents: number
      slotStart: Date | null
      slotEnd: Date | null
      finalPriceCents: number | null
      reviewStatus: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider<T extends Order$providerArgs<ExtArgs> = {}>(args?: Subset<T, Order$providerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    address<T extends Order$addressArgs<ExtArgs> = {}>(args?: Subset<T, Order$addressArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    category<T extends Order$categoryArgs<ExtArgs> = {}>(args?: Subset<T, Order$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orderSlots<T extends Order$orderSlotsArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderSlotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderCategories<T extends Order$orderCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderInvitations<T extends Order$orderInvitationsArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderInvitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderStatusHistory<T extends Order$orderStatusHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderStatusHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderReview<T extends Order$orderReviewArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderReviewArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    payments<T extends Order$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Order$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    paymentEvents<T extends Order$paymentEventsArgs<ExtArgs> = {}>(args?: Subset<T, Order$paymentEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    commission<T extends Order$commissionArgs<ExtArgs> = {}>(args?: Subset<T, Order$commissionArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    clientCredits<T extends Order$clientCreditsArgs<ExtArgs> = {}>(args?: Subset<T, Order$clientCreditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providerPayout<T extends Order$providerPayoutArgs<ExtArgs> = {}>(args?: Subset<T, Order$providerPayoutArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    matchScores<T extends Order$matchScoresArgs<ExtArgs> = {}>(args?: Subset<T, Order$matchScoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    llmClassifications<T extends Order$llmClassificationsArgs<ExtArgs> = {}>(args?: Subset<T, Order$llmClassificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly clientId: FieldRef<"Order", 'String'>
    readonly providerId: FieldRef<"Order", 'String'>
    readonly addressId: FieldRef<"Order", 'String'>
    readonly categoryId: FieldRef<"Order", 'String'>
    readonly description: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'String'>
    readonly depositMethod: FieldRef<"Order", 'String'>
    readonly depositBaseAvgCents: FieldRef<"Order", 'Int'>
    readonly depositCents: FieldRef<"Order", 'Int'>
    readonly slotStart: FieldRef<"Order", 'DateTime'>
    readonly slotEnd: FieldRef<"Order", 'DateTime'>
    readonly finalPriceCents: FieldRef<"Order", 'Int'>
    readonly reviewStatus: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.provider
   */
  export type Order$providerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.address
   */
  export type Order$addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
  }

  /**
   * Order.category
   */
  export type Order$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Order.orderSlots
   */
  export type Order$orderSlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    where?: OrderSlotWhereInput
    orderBy?: OrderSlotOrderByWithRelationInput | OrderSlotOrderByWithRelationInput[]
    cursor?: OrderSlotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderSlotScalarFieldEnum | OrderSlotScalarFieldEnum[]
  }

  /**
   * Order.orderCategories
   */
  export type Order$orderCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    where?: OrderCategoryWhereInput
    orderBy?: OrderCategoryOrderByWithRelationInput | OrderCategoryOrderByWithRelationInput[]
    cursor?: OrderCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderCategoryScalarFieldEnum | OrderCategoryScalarFieldEnum[]
  }

  /**
   * Order.orderInvitations
   */
  export type Order$orderInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    where?: OrderInvitationWhereInput
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    cursor?: OrderInvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * Order.orderStatusHistory
   */
  export type Order$orderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    where?: OrderStatusHistoryWhereInput
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    cursor?: OrderStatusHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * Order.orderReview
   */
  export type Order$orderReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    where?: OrderReviewWhereInput
  }

  /**
   * Order.payments
   */
  export type Order$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Order.paymentEvents
   */
  export type Order$paymentEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    cursor?: PaymentEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * Order.commission
   */
  export type Order$commissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    where?: CommissionWhereInput
  }

  /**
   * Order.clientCredits
   */
  export type Order$clientCreditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    where?: ClientCreditWhereInput
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    cursor?: ClientCreditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientCreditScalarFieldEnum | ClientCreditScalarFieldEnum[]
  }

  /**
   * Order.providerPayout
   */
  export type Order$providerPayoutArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    where?: ProviderPayoutWhereInput
  }

  /**
   * Order.matchScores
   */
  export type Order$matchScoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    where?: MatchScoreWhereInput
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    cursor?: MatchScoreWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MatchScoreScalarFieldEnum | MatchScoreScalarFieldEnum[]
  }

  /**
   * Order.llmClassifications
   */
  export type Order$llmClassificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    where?: LlmClassificationWhereInput
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    cursor?: LlmClassificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LlmClassificationScalarFieldEnum | LlmClassificationScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderSlot
   */

  export type AggregateOrderSlot = {
    _count: OrderSlotCountAggregateOutputType | null
    _min: OrderSlotMinAggregateOutputType | null
    _max: OrderSlotMaxAggregateOutputType | null
  }

  export type OrderSlotMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    label: string | null
    startAt: Date | null
    endAt: Date | null
    origin: string | null
    chosen: boolean | null
  }

  export type OrderSlotMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    label: string | null
    startAt: Date | null
    endAt: Date | null
    origin: string | null
    chosen: boolean | null
  }

  export type OrderSlotCountAggregateOutputType = {
    id: number
    orderId: number
    label: number
    startAt: number
    endAt: number
    origin: number
    chosen: number
    _all: number
  }


  export type OrderSlotMinAggregateInputType = {
    id?: true
    orderId?: true
    label?: true
    startAt?: true
    endAt?: true
    origin?: true
    chosen?: true
  }

  export type OrderSlotMaxAggregateInputType = {
    id?: true
    orderId?: true
    label?: true
    startAt?: true
    endAt?: true
    origin?: true
    chosen?: true
  }

  export type OrderSlotCountAggregateInputType = {
    id?: true
    orderId?: true
    label?: true
    startAt?: true
    endAt?: true
    origin?: true
    chosen?: true
    _all?: true
  }

  export type OrderSlotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderSlot to aggregate.
     */
    where?: OrderSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderSlots to fetch.
     */
    orderBy?: OrderSlotOrderByWithRelationInput | OrderSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderSlots
    **/
    _count?: true | OrderSlotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderSlotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderSlotMaxAggregateInputType
  }

  export type GetOrderSlotAggregateType<T extends OrderSlotAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderSlot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderSlot[P]>
      : GetScalarType<T[P], AggregateOrderSlot[P]>
  }




  export type OrderSlotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderSlotWhereInput
    orderBy?: OrderSlotOrderByWithAggregationInput | OrderSlotOrderByWithAggregationInput[]
    by: OrderSlotScalarFieldEnum[] | OrderSlotScalarFieldEnum
    having?: OrderSlotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderSlotCountAggregateInputType | true
    _min?: OrderSlotMinAggregateInputType
    _max?: OrderSlotMaxAggregateInputType
  }

  export type OrderSlotGroupByOutputType = {
    id: string
    orderId: string
    label: string | null
    startAt: Date
    endAt: Date
    origin: string
    chosen: boolean
    _count: OrderSlotCountAggregateOutputType | null
    _min: OrderSlotMinAggregateOutputType | null
    _max: OrderSlotMaxAggregateOutputType | null
  }

  type GetOrderSlotGroupByPayload<T extends OrderSlotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderSlotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderSlotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderSlotGroupByOutputType[P]>
            : GetScalarType<T[P], OrderSlotGroupByOutputType[P]>
        }
      >
    >


  export type OrderSlotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    label?: boolean
    startAt?: boolean
    endAt?: boolean
    origin?: boolean
    chosen?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    invitations?: boolean | OrderSlot$invitationsArgs<ExtArgs>
    _count?: boolean | OrderSlotCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderSlot"]>

  export type OrderSlotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    label?: boolean
    startAt?: boolean
    endAt?: boolean
    origin?: boolean
    chosen?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderSlot"]>

  export type OrderSlotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    label?: boolean
    startAt?: boolean
    endAt?: boolean
    origin?: boolean
    chosen?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderSlot"]>

  export type OrderSlotSelectScalar = {
    id?: boolean
    orderId?: boolean
    label?: boolean
    startAt?: boolean
    endAt?: boolean
    origin?: boolean
    chosen?: boolean
  }

  export type OrderSlotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "label" | "startAt" | "endAt" | "origin" | "chosen", ExtArgs["result"]["orderSlot"]>
  export type OrderSlotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    invitations?: boolean | OrderSlot$invitationsArgs<ExtArgs>
    _count?: boolean | OrderSlotCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderSlotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type OrderSlotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $OrderSlotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderSlot"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      invitations: Prisma.$OrderInvitationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      label: string | null
      startAt: Date
      endAt: Date
      origin: string
      chosen: boolean
    }, ExtArgs["result"]["orderSlot"]>
    composites: {}
  }

  type OrderSlotGetPayload<S extends boolean | null | undefined | OrderSlotDefaultArgs> = $Result.GetResult<Prisma.$OrderSlotPayload, S>

  type OrderSlotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderSlotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderSlotCountAggregateInputType | true
    }

  export interface OrderSlotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderSlot'], meta: { name: 'OrderSlot' } }
    /**
     * Find zero or one OrderSlot that matches the filter.
     * @param {OrderSlotFindUniqueArgs} args - Arguments to find a OrderSlot
     * @example
     * // Get one OrderSlot
     * const orderSlot = await prisma.orderSlot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderSlotFindUniqueArgs>(args: SelectSubset<T, OrderSlotFindUniqueArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderSlot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderSlotFindUniqueOrThrowArgs} args - Arguments to find a OrderSlot
     * @example
     * // Get one OrderSlot
     * const orderSlot = await prisma.orderSlot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderSlotFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderSlotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderSlot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotFindFirstArgs} args - Arguments to find a OrderSlot
     * @example
     * // Get one OrderSlot
     * const orderSlot = await prisma.orderSlot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderSlotFindFirstArgs>(args?: SelectSubset<T, OrderSlotFindFirstArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderSlot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotFindFirstOrThrowArgs} args - Arguments to find a OrderSlot
     * @example
     * // Get one OrderSlot
     * const orderSlot = await prisma.orderSlot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderSlotFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderSlotFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderSlots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderSlots
     * const orderSlots = await prisma.orderSlot.findMany()
     * 
     * // Get first 10 OrderSlots
     * const orderSlots = await prisma.orderSlot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderSlotWithIdOnly = await prisma.orderSlot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderSlotFindManyArgs>(args?: SelectSubset<T, OrderSlotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderSlot.
     * @param {OrderSlotCreateArgs} args - Arguments to create a OrderSlot.
     * @example
     * // Create one OrderSlot
     * const OrderSlot = await prisma.orderSlot.create({
     *   data: {
     *     // ... data to create a OrderSlot
     *   }
     * })
     * 
     */
    create<T extends OrderSlotCreateArgs>(args: SelectSubset<T, OrderSlotCreateArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderSlots.
     * @param {OrderSlotCreateManyArgs} args - Arguments to create many OrderSlots.
     * @example
     * // Create many OrderSlots
     * const orderSlot = await prisma.orderSlot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderSlotCreateManyArgs>(args?: SelectSubset<T, OrderSlotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderSlots and returns the data saved in the database.
     * @param {OrderSlotCreateManyAndReturnArgs} args - Arguments to create many OrderSlots.
     * @example
     * // Create many OrderSlots
     * const orderSlot = await prisma.orderSlot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderSlots and only return the `id`
     * const orderSlotWithIdOnly = await prisma.orderSlot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderSlotCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderSlotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderSlot.
     * @param {OrderSlotDeleteArgs} args - Arguments to delete one OrderSlot.
     * @example
     * // Delete one OrderSlot
     * const OrderSlot = await prisma.orderSlot.delete({
     *   where: {
     *     // ... filter to delete one OrderSlot
     *   }
     * })
     * 
     */
    delete<T extends OrderSlotDeleteArgs>(args: SelectSubset<T, OrderSlotDeleteArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderSlot.
     * @param {OrderSlotUpdateArgs} args - Arguments to update one OrderSlot.
     * @example
     * // Update one OrderSlot
     * const orderSlot = await prisma.orderSlot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderSlotUpdateArgs>(args: SelectSubset<T, OrderSlotUpdateArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderSlots.
     * @param {OrderSlotDeleteManyArgs} args - Arguments to filter OrderSlots to delete.
     * @example
     * // Delete a few OrderSlots
     * const { count } = await prisma.orderSlot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderSlotDeleteManyArgs>(args?: SelectSubset<T, OrderSlotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderSlots
     * const orderSlot = await prisma.orderSlot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderSlotUpdateManyArgs>(args: SelectSubset<T, OrderSlotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderSlots and returns the data updated in the database.
     * @param {OrderSlotUpdateManyAndReturnArgs} args - Arguments to update many OrderSlots.
     * @example
     * // Update many OrderSlots
     * const orderSlot = await prisma.orderSlot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderSlots and only return the `id`
     * const orderSlotWithIdOnly = await prisma.orderSlot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderSlotUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderSlotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderSlot.
     * @param {OrderSlotUpsertArgs} args - Arguments to update or create a OrderSlot.
     * @example
     * // Update or create a OrderSlot
     * const orderSlot = await prisma.orderSlot.upsert({
     *   create: {
     *     // ... data to create a OrderSlot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderSlot we want to update
     *   }
     * })
     */
    upsert<T extends OrderSlotUpsertArgs>(args: SelectSubset<T, OrderSlotUpsertArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderSlots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotCountArgs} args - Arguments to filter OrderSlots to count.
     * @example
     * // Count the number of OrderSlots
     * const count = await prisma.orderSlot.count({
     *   where: {
     *     // ... the filter for the OrderSlots we want to count
     *   }
     * })
    **/
    count<T extends OrderSlotCountArgs>(
      args?: Subset<T, OrderSlotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderSlotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderSlotAggregateArgs>(args: Subset<T, OrderSlotAggregateArgs>): Prisma.PrismaPromise<GetOrderSlotAggregateType<T>>

    /**
     * Group by OrderSlot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderSlotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderSlotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderSlotGroupByArgs['orderBy'] }
        : { orderBy?: OrderSlotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderSlotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderSlotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderSlot model
   */
  readonly fields: OrderSlotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderSlot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderSlotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    invitations<T extends OrderSlot$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, OrderSlot$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderSlot model
   */
  interface OrderSlotFieldRefs {
    readonly id: FieldRef<"OrderSlot", 'String'>
    readonly orderId: FieldRef<"OrderSlot", 'String'>
    readonly label: FieldRef<"OrderSlot", 'String'>
    readonly startAt: FieldRef<"OrderSlot", 'DateTime'>
    readonly endAt: FieldRef<"OrderSlot", 'DateTime'>
    readonly origin: FieldRef<"OrderSlot", 'String'>
    readonly chosen: FieldRef<"OrderSlot", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * OrderSlot findUnique
   */
  export type OrderSlotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter, which OrderSlot to fetch.
     */
    where: OrderSlotWhereUniqueInput
  }

  /**
   * OrderSlot findUniqueOrThrow
   */
  export type OrderSlotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter, which OrderSlot to fetch.
     */
    where: OrderSlotWhereUniqueInput
  }

  /**
   * OrderSlot findFirst
   */
  export type OrderSlotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter, which OrderSlot to fetch.
     */
    where?: OrderSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderSlots to fetch.
     */
    orderBy?: OrderSlotOrderByWithRelationInput | OrderSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderSlots.
     */
    cursor?: OrderSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderSlots.
     */
    distinct?: OrderSlotScalarFieldEnum | OrderSlotScalarFieldEnum[]
  }

  /**
   * OrderSlot findFirstOrThrow
   */
  export type OrderSlotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter, which OrderSlot to fetch.
     */
    where?: OrderSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderSlots to fetch.
     */
    orderBy?: OrderSlotOrderByWithRelationInput | OrderSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderSlots.
     */
    cursor?: OrderSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderSlots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderSlots.
     */
    distinct?: OrderSlotScalarFieldEnum | OrderSlotScalarFieldEnum[]
  }

  /**
   * OrderSlot findMany
   */
  export type OrderSlotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter, which OrderSlots to fetch.
     */
    where?: OrderSlotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderSlots to fetch.
     */
    orderBy?: OrderSlotOrderByWithRelationInput | OrderSlotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderSlots.
     */
    cursor?: OrderSlotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderSlots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderSlots.
     */
    skip?: number
    distinct?: OrderSlotScalarFieldEnum | OrderSlotScalarFieldEnum[]
  }

  /**
   * OrderSlot create
   */
  export type OrderSlotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderSlot.
     */
    data: XOR<OrderSlotCreateInput, OrderSlotUncheckedCreateInput>
  }

  /**
   * OrderSlot createMany
   */
  export type OrderSlotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderSlots.
     */
    data: OrderSlotCreateManyInput | OrderSlotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderSlot createManyAndReturn
   */
  export type OrderSlotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * The data used to create many OrderSlots.
     */
    data: OrderSlotCreateManyInput | OrderSlotCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderSlot update
   */
  export type OrderSlotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderSlot.
     */
    data: XOR<OrderSlotUpdateInput, OrderSlotUncheckedUpdateInput>
    /**
     * Choose, which OrderSlot to update.
     */
    where: OrderSlotWhereUniqueInput
  }

  /**
   * OrderSlot updateMany
   */
  export type OrderSlotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderSlots.
     */
    data: XOR<OrderSlotUpdateManyMutationInput, OrderSlotUncheckedUpdateManyInput>
    /**
     * Filter which OrderSlots to update
     */
    where?: OrderSlotWhereInput
    /**
     * Limit how many OrderSlots to update.
     */
    limit?: number
  }

  /**
   * OrderSlot updateManyAndReturn
   */
  export type OrderSlotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * The data used to update OrderSlots.
     */
    data: XOR<OrderSlotUpdateManyMutationInput, OrderSlotUncheckedUpdateManyInput>
    /**
     * Filter which OrderSlots to update
     */
    where?: OrderSlotWhereInput
    /**
     * Limit how many OrderSlots to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderSlot upsert
   */
  export type OrderSlotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderSlot to update in case it exists.
     */
    where: OrderSlotWhereUniqueInput
    /**
     * In case the OrderSlot found by the `where` argument doesn't exist, create a new OrderSlot with this data.
     */
    create: XOR<OrderSlotCreateInput, OrderSlotUncheckedCreateInput>
    /**
     * In case the OrderSlot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderSlotUpdateInput, OrderSlotUncheckedUpdateInput>
  }

  /**
   * OrderSlot delete
   */
  export type OrderSlotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    /**
     * Filter which OrderSlot to delete.
     */
    where: OrderSlotWhereUniqueInput
  }

  /**
   * OrderSlot deleteMany
   */
  export type OrderSlotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderSlots to delete
     */
    where?: OrderSlotWhereInput
    /**
     * Limit how many OrderSlots to delete.
     */
    limit?: number
  }

  /**
   * OrderSlot.invitations
   */
  export type OrderSlot$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    where?: OrderInvitationWhereInput
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    cursor?: OrderInvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * OrderSlot without action
   */
  export type OrderSlotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
  }


  /**
   * Model OrderCategory
   */

  export type AggregateOrderCategory = {
    _count: OrderCategoryCountAggregateOutputType | null
    _avg: OrderCategoryAvgAggregateOutputType | null
    _sum: OrderCategorySumAggregateOutputType | null
    _min: OrderCategoryMinAggregateOutputType | null
    _max: OrderCategoryMaxAggregateOutputType | null
  }

  export type OrderCategoryAvgAggregateOutputType = {
    confidence: Decimal | null
    rank: number | null
  }

  export type OrderCategorySumAggregateOutputType = {
    confidence: Decimal | null
    rank: number | null
  }

  export type OrderCategoryMinAggregateOutputType = {
    orderId: string | null
    categorySlug: string | null
    confidence: Decimal | null
    rank: number | null
  }

  export type OrderCategoryMaxAggregateOutputType = {
    orderId: string | null
    categorySlug: string | null
    confidence: Decimal | null
    rank: number | null
  }

  export type OrderCategoryCountAggregateOutputType = {
    orderId: number
    categorySlug: number
    confidence: number
    rank: number
    _all: number
  }


  export type OrderCategoryAvgAggregateInputType = {
    confidence?: true
    rank?: true
  }

  export type OrderCategorySumAggregateInputType = {
    confidence?: true
    rank?: true
  }

  export type OrderCategoryMinAggregateInputType = {
    orderId?: true
    categorySlug?: true
    confidence?: true
    rank?: true
  }

  export type OrderCategoryMaxAggregateInputType = {
    orderId?: true
    categorySlug?: true
    confidence?: true
    rank?: true
  }

  export type OrderCategoryCountAggregateInputType = {
    orderId?: true
    categorySlug?: true
    confidence?: true
    rank?: true
    _all?: true
  }

  export type OrderCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderCategory to aggregate.
     */
    where?: OrderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderCategories to fetch.
     */
    orderBy?: OrderCategoryOrderByWithRelationInput | OrderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderCategories
    **/
    _count?: true | OrderCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderCategoryMaxAggregateInputType
  }

  export type GetOrderCategoryAggregateType<T extends OrderCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderCategory[P]>
      : GetScalarType<T[P], AggregateOrderCategory[P]>
  }




  export type OrderCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderCategoryWhereInput
    orderBy?: OrderCategoryOrderByWithAggregationInput | OrderCategoryOrderByWithAggregationInput[]
    by: OrderCategoryScalarFieldEnum[] | OrderCategoryScalarFieldEnum
    having?: OrderCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCategoryCountAggregateInputType | true
    _avg?: OrderCategoryAvgAggregateInputType
    _sum?: OrderCategorySumAggregateInputType
    _min?: OrderCategoryMinAggregateInputType
    _max?: OrderCategoryMaxAggregateInputType
  }

  export type OrderCategoryGroupByOutputType = {
    orderId: string
    categorySlug: string
    confidence: Decimal
    rank: number
    _count: OrderCategoryCountAggregateOutputType | null
    _avg: OrderCategoryAvgAggregateOutputType | null
    _sum: OrderCategorySumAggregateOutputType | null
    _min: OrderCategoryMinAggregateOutputType | null
    _max: OrderCategoryMaxAggregateOutputType | null
  }

  type GetOrderCategoryGroupByPayload<T extends OrderCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], OrderCategoryGroupByOutputType[P]>
        }
      >
    >


  export type OrderCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    categorySlug?: boolean
    confidence?: boolean
    rank?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderCategory"]>

  export type OrderCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    categorySlug?: boolean
    confidence?: boolean
    rank?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderCategory"]>

  export type OrderCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    categorySlug?: boolean
    confidence?: boolean
    rank?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderCategory"]>

  export type OrderCategorySelectScalar = {
    orderId?: boolean
    categorySlug?: boolean
    confidence?: boolean
    rank?: boolean
  }

  export type OrderCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"orderId" | "categorySlug" | "confidence" | "rank", ExtArgs["result"]["orderCategory"]>
  export type OrderCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type OrderCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type OrderCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $OrderCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderCategory"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      orderId: string
      categorySlug: string
      confidence: Prisma.Decimal
      rank: number
    }, ExtArgs["result"]["orderCategory"]>
    composites: {}
  }

  type OrderCategoryGetPayload<S extends boolean | null | undefined | OrderCategoryDefaultArgs> = $Result.GetResult<Prisma.$OrderCategoryPayload, S>

  type OrderCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCategoryCountAggregateInputType | true
    }

  export interface OrderCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderCategory'], meta: { name: 'OrderCategory' } }
    /**
     * Find zero or one OrderCategory that matches the filter.
     * @param {OrderCategoryFindUniqueArgs} args - Arguments to find a OrderCategory
     * @example
     * // Get one OrderCategory
     * const orderCategory = await prisma.orderCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderCategoryFindUniqueArgs>(args: SelectSubset<T, OrderCategoryFindUniqueArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderCategoryFindUniqueOrThrowArgs} args - Arguments to find a OrderCategory
     * @example
     * // Get one OrderCategory
     * const orderCategory = await prisma.orderCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryFindFirstArgs} args - Arguments to find a OrderCategory
     * @example
     * // Get one OrderCategory
     * const orderCategory = await prisma.orderCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderCategoryFindFirstArgs>(args?: SelectSubset<T, OrderCategoryFindFirstArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryFindFirstOrThrowArgs} args - Arguments to find a OrderCategory
     * @example
     * // Get one OrderCategory
     * const orderCategory = await prisma.orderCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderCategories
     * const orderCategories = await prisma.orderCategory.findMany()
     * 
     * // Get first 10 OrderCategories
     * const orderCategories = await prisma.orderCategory.findMany({ take: 10 })
     * 
     * // Only select the `orderId`
     * const orderCategoryWithOrderIdOnly = await prisma.orderCategory.findMany({ select: { orderId: true } })
     * 
     */
    findMany<T extends OrderCategoryFindManyArgs>(args?: SelectSubset<T, OrderCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderCategory.
     * @param {OrderCategoryCreateArgs} args - Arguments to create a OrderCategory.
     * @example
     * // Create one OrderCategory
     * const OrderCategory = await prisma.orderCategory.create({
     *   data: {
     *     // ... data to create a OrderCategory
     *   }
     * })
     * 
     */
    create<T extends OrderCategoryCreateArgs>(args: SelectSubset<T, OrderCategoryCreateArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderCategories.
     * @param {OrderCategoryCreateManyArgs} args - Arguments to create many OrderCategories.
     * @example
     * // Create many OrderCategories
     * const orderCategory = await prisma.orderCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCategoryCreateManyArgs>(args?: SelectSubset<T, OrderCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderCategories and returns the data saved in the database.
     * @param {OrderCategoryCreateManyAndReturnArgs} args - Arguments to create many OrderCategories.
     * @example
     * // Create many OrderCategories
     * const orderCategory = await prisma.orderCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderCategories and only return the `orderId`
     * const orderCategoryWithOrderIdOnly = await prisma.orderCategory.createManyAndReturn({
     *   select: { orderId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderCategory.
     * @param {OrderCategoryDeleteArgs} args - Arguments to delete one OrderCategory.
     * @example
     * // Delete one OrderCategory
     * const OrderCategory = await prisma.orderCategory.delete({
     *   where: {
     *     // ... filter to delete one OrderCategory
     *   }
     * })
     * 
     */
    delete<T extends OrderCategoryDeleteArgs>(args: SelectSubset<T, OrderCategoryDeleteArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderCategory.
     * @param {OrderCategoryUpdateArgs} args - Arguments to update one OrderCategory.
     * @example
     * // Update one OrderCategory
     * const orderCategory = await prisma.orderCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderCategoryUpdateArgs>(args: SelectSubset<T, OrderCategoryUpdateArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderCategories.
     * @param {OrderCategoryDeleteManyArgs} args - Arguments to filter OrderCategories to delete.
     * @example
     * // Delete a few OrderCategories
     * const { count } = await prisma.orderCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderCategoryDeleteManyArgs>(args?: SelectSubset<T, OrderCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderCategories
     * const orderCategory = await prisma.orderCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderCategoryUpdateManyArgs>(args: SelectSubset<T, OrderCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderCategories and returns the data updated in the database.
     * @param {OrderCategoryUpdateManyAndReturnArgs} args - Arguments to update many OrderCategories.
     * @example
     * // Update many OrderCategories
     * const orderCategory = await prisma.orderCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderCategories and only return the `orderId`
     * const orderCategoryWithOrderIdOnly = await prisma.orderCategory.updateManyAndReturn({
     *   select: { orderId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderCategory.
     * @param {OrderCategoryUpsertArgs} args - Arguments to update or create a OrderCategory.
     * @example
     * // Update or create a OrderCategory
     * const orderCategory = await prisma.orderCategory.upsert({
     *   create: {
     *     // ... data to create a OrderCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderCategory we want to update
     *   }
     * })
     */
    upsert<T extends OrderCategoryUpsertArgs>(args: SelectSubset<T, OrderCategoryUpsertArgs<ExtArgs>>): Prisma__OrderCategoryClient<$Result.GetResult<Prisma.$OrderCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryCountArgs} args - Arguments to filter OrderCategories to count.
     * @example
     * // Count the number of OrderCategories
     * const count = await prisma.orderCategory.count({
     *   where: {
     *     // ... the filter for the OrderCategories we want to count
     *   }
     * })
    **/
    count<T extends OrderCategoryCountArgs>(
      args?: Subset<T, OrderCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderCategoryAggregateArgs>(args: Subset<T, OrderCategoryAggregateArgs>): Prisma.PrismaPromise<GetOrderCategoryAggregateType<T>>

    /**
     * Group by OrderCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderCategoryGroupByArgs['orderBy'] }
        : { orderBy?: OrderCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderCategory model
   */
  readonly fields: OrderCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderCategory model
   */
  interface OrderCategoryFieldRefs {
    readonly orderId: FieldRef<"OrderCategory", 'String'>
    readonly categorySlug: FieldRef<"OrderCategory", 'String'>
    readonly confidence: FieldRef<"OrderCategory", 'Decimal'>
    readonly rank: FieldRef<"OrderCategory", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OrderCategory findUnique
   */
  export type OrderCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderCategory to fetch.
     */
    where: OrderCategoryWhereUniqueInput
  }

  /**
   * OrderCategory findUniqueOrThrow
   */
  export type OrderCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderCategory to fetch.
     */
    where: OrderCategoryWhereUniqueInput
  }

  /**
   * OrderCategory findFirst
   */
  export type OrderCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderCategory to fetch.
     */
    where?: OrderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderCategories to fetch.
     */
    orderBy?: OrderCategoryOrderByWithRelationInput | OrderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderCategories.
     */
    cursor?: OrderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderCategories.
     */
    distinct?: OrderCategoryScalarFieldEnum | OrderCategoryScalarFieldEnum[]
  }

  /**
   * OrderCategory findFirstOrThrow
   */
  export type OrderCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderCategory to fetch.
     */
    where?: OrderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderCategories to fetch.
     */
    orderBy?: OrderCategoryOrderByWithRelationInput | OrderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderCategories.
     */
    cursor?: OrderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderCategories.
     */
    distinct?: OrderCategoryScalarFieldEnum | OrderCategoryScalarFieldEnum[]
  }

  /**
   * OrderCategory findMany
   */
  export type OrderCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderCategories to fetch.
     */
    where?: OrderCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderCategories to fetch.
     */
    orderBy?: OrderCategoryOrderByWithRelationInput | OrderCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderCategories.
     */
    cursor?: OrderCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderCategories.
     */
    skip?: number
    distinct?: OrderCategoryScalarFieldEnum | OrderCategoryScalarFieldEnum[]
  }

  /**
   * OrderCategory create
   */
  export type OrderCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderCategory.
     */
    data: XOR<OrderCategoryCreateInput, OrderCategoryUncheckedCreateInput>
  }

  /**
   * OrderCategory createMany
   */
  export type OrderCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderCategories.
     */
    data: OrderCategoryCreateManyInput | OrderCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderCategory createManyAndReturn
   */
  export type OrderCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many OrderCategories.
     */
    data: OrderCategoryCreateManyInput | OrderCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderCategory update
   */
  export type OrderCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderCategory.
     */
    data: XOR<OrderCategoryUpdateInput, OrderCategoryUncheckedUpdateInput>
    /**
     * Choose, which OrderCategory to update.
     */
    where: OrderCategoryWhereUniqueInput
  }

  /**
   * OrderCategory updateMany
   */
  export type OrderCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderCategories.
     */
    data: XOR<OrderCategoryUpdateManyMutationInput, OrderCategoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderCategories to update
     */
    where?: OrderCategoryWhereInput
    /**
     * Limit how many OrderCategories to update.
     */
    limit?: number
  }

  /**
   * OrderCategory updateManyAndReturn
   */
  export type OrderCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * The data used to update OrderCategories.
     */
    data: XOR<OrderCategoryUpdateManyMutationInput, OrderCategoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderCategories to update
     */
    where?: OrderCategoryWhereInput
    /**
     * Limit how many OrderCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderCategory upsert
   */
  export type OrderCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderCategory to update in case it exists.
     */
    where: OrderCategoryWhereUniqueInput
    /**
     * In case the OrderCategory found by the `where` argument doesn't exist, create a new OrderCategory with this data.
     */
    create: XOR<OrderCategoryCreateInput, OrderCategoryUncheckedCreateInput>
    /**
     * In case the OrderCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderCategoryUpdateInput, OrderCategoryUncheckedUpdateInput>
  }

  /**
   * OrderCategory delete
   */
  export type OrderCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
    /**
     * Filter which OrderCategory to delete.
     */
    where: OrderCategoryWhereUniqueInput
  }

  /**
   * OrderCategory deleteMany
   */
  export type OrderCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderCategories to delete
     */
    where?: OrderCategoryWhereInput
    /**
     * Limit how many OrderCategories to delete.
     */
    limit?: number
  }

  /**
   * OrderCategory without action
   */
  export type OrderCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCategory
     */
    select?: OrderCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderCategory
     */
    omit?: OrderCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderCategoryInclude<ExtArgs> | null
  }


  /**
   * Model OrderInvitation
   */

  export type AggregateOrderInvitation = {
    _count: OrderInvitationCountAggregateOutputType | null
    _avg: OrderInvitationAvgAggregateOutputType | null
    _sum: OrderInvitationSumAggregateOutputType | null
    _min: OrderInvitationMinAggregateOutputType | null
    _max: OrderInvitationMaxAggregateOutputType | null
  }

  export type OrderInvitationAvgAggregateOutputType = {
    score: Decimal | null
  }

  export type OrderInvitationSumAggregateOutputType = {
    score: Decimal | null
  }

  export type OrderInvitationMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    slotId: string | null
    score: Decimal | null
    sentAt: Date | null
    respondedAt: Date | null
    response: string | null
    waMessageId: string | null
    waRemoteJid: string | null
    categorySlug: string | null
    status: string | null
    expiresAt: Date | null
  }

  export type OrderInvitationMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    slotId: string | null
    score: Decimal | null
    sentAt: Date | null
    respondedAt: Date | null
    response: string | null
    waMessageId: string | null
    waRemoteJid: string | null
    categorySlug: string | null
    status: string | null
    expiresAt: Date | null
  }

  export type OrderInvitationCountAggregateOutputType = {
    id: number
    orderId: number
    providerId: number
    slotId: number
    score: number
    sentAt: number
    respondedAt: number
    response: number
    waMessageId: number
    waRemoteJid: number
    categorySlug: number
    status: number
    expiresAt: number
    meta: number
    _all: number
  }


  export type OrderInvitationAvgAggregateInputType = {
    score?: true
  }

  export type OrderInvitationSumAggregateInputType = {
    score?: true
  }

  export type OrderInvitationMinAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    slotId?: true
    score?: true
    sentAt?: true
    respondedAt?: true
    response?: true
    waMessageId?: true
    waRemoteJid?: true
    categorySlug?: true
    status?: true
    expiresAt?: true
  }

  export type OrderInvitationMaxAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    slotId?: true
    score?: true
    sentAt?: true
    respondedAt?: true
    response?: true
    waMessageId?: true
    waRemoteJid?: true
    categorySlug?: true
    status?: true
    expiresAt?: true
  }

  export type OrderInvitationCountAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    slotId?: true
    score?: true
    sentAt?: true
    respondedAt?: true
    response?: true
    waMessageId?: true
    waRemoteJid?: true
    categorySlug?: true
    status?: true
    expiresAt?: true
    meta?: true
    _all?: true
  }

  export type OrderInvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderInvitation to aggregate.
     */
    where?: OrderInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderInvitations to fetch.
     */
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderInvitations
    **/
    _count?: true | OrderInvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderInvitationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderInvitationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderInvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderInvitationMaxAggregateInputType
  }

  export type GetOrderInvitationAggregateType<T extends OrderInvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderInvitation[P]>
      : GetScalarType<T[P], AggregateOrderInvitation[P]>
  }




  export type OrderInvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderInvitationWhereInput
    orderBy?: OrderInvitationOrderByWithAggregationInput | OrderInvitationOrderByWithAggregationInput[]
    by: OrderInvitationScalarFieldEnum[] | OrderInvitationScalarFieldEnum
    having?: OrderInvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderInvitationCountAggregateInputType | true
    _avg?: OrderInvitationAvgAggregateInputType
    _sum?: OrderInvitationSumAggregateInputType
    _min?: OrderInvitationMinAggregateInputType
    _max?: OrderInvitationMaxAggregateInputType
  }

  export type OrderInvitationGroupByOutputType = {
    id: string
    orderId: string
    providerId: string
    slotId: string | null
    score: Decimal | null
    sentAt: Date
    respondedAt: Date | null
    response: string | null
    waMessageId: string | null
    waRemoteJid: string | null
    categorySlug: string | null
    status: string | null
    expiresAt: Date | null
    meta: JsonValue | null
    _count: OrderInvitationCountAggregateOutputType | null
    _avg: OrderInvitationAvgAggregateOutputType | null
    _sum: OrderInvitationSumAggregateOutputType | null
    _min: OrderInvitationMinAggregateOutputType | null
    _max: OrderInvitationMaxAggregateOutputType | null
  }

  type GetOrderInvitationGroupByPayload<T extends OrderInvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderInvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderInvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderInvitationGroupByOutputType[P]>
            : GetScalarType<T[P], OrderInvitationGroupByOutputType[P]>
        }
      >
    >


  export type OrderInvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    slotId?: boolean
    score?: boolean
    sentAt?: boolean
    respondedAt?: boolean
    response?: boolean
    waMessageId?: boolean
    waRemoteJid?: boolean
    categorySlug?: boolean
    status?: boolean
    expiresAt?: boolean
    meta?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }, ExtArgs["result"]["orderInvitation"]>

  export type OrderInvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    slotId?: boolean
    score?: boolean
    sentAt?: boolean
    respondedAt?: boolean
    response?: boolean
    waMessageId?: boolean
    waRemoteJid?: boolean
    categorySlug?: boolean
    status?: boolean
    expiresAt?: boolean
    meta?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }, ExtArgs["result"]["orderInvitation"]>

  export type OrderInvitationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    slotId?: boolean
    score?: boolean
    sentAt?: boolean
    respondedAt?: boolean
    response?: boolean
    waMessageId?: boolean
    waRemoteJid?: boolean
    categorySlug?: boolean
    status?: boolean
    expiresAt?: boolean
    meta?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }, ExtArgs["result"]["orderInvitation"]>

  export type OrderInvitationSelectScalar = {
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    slotId?: boolean
    score?: boolean
    sentAt?: boolean
    respondedAt?: boolean
    response?: boolean
    waMessageId?: boolean
    waRemoteJid?: boolean
    categorySlug?: boolean
    status?: boolean
    expiresAt?: boolean
    meta?: boolean
  }

  export type OrderInvitationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "providerId" | "slotId" | "score" | "sentAt" | "respondedAt" | "response" | "waMessageId" | "waRemoteJid" | "categorySlug" | "status" | "expiresAt" | "meta", ExtArgs["result"]["orderInvitation"]>
  export type OrderInvitationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }
  export type OrderInvitationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }
  export type OrderInvitationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
    slot?: boolean | OrderInvitation$slotArgs<ExtArgs>
  }

  export type $OrderInvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderInvitation"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      provider: Prisma.$UserPayload<ExtArgs>
      slot: Prisma.$OrderSlotPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      providerId: string
      slotId: string | null
      score: Prisma.Decimal | null
      sentAt: Date
      respondedAt: Date | null
      response: string | null
      waMessageId: string | null
      waRemoteJid: string | null
      categorySlug: string | null
      status: string | null
      expiresAt: Date | null
      meta: Prisma.JsonValue | null
    }, ExtArgs["result"]["orderInvitation"]>
    composites: {}
  }

  type OrderInvitationGetPayload<S extends boolean | null | undefined | OrderInvitationDefaultArgs> = $Result.GetResult<Prisma.$OrderInvitationPayload, S>

  type OrderInvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderInvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderInvitationCountAggregateInputType | true
    }

  export interface OrderInvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderInvitation'], meta: { name: 'OrderInvitation' } }
    /**
     * Find zero or one OrderInvitation that matches the filter.
     * @param {OrderInvitationFindUniqueArgs} args - Arguments to find a OrderInvitation
     * @example
     * // Get one OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderInvitationFindUniqueArgs>(args: SelectSubset<T, OrderInvitationFindUniqueArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderInvitation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderInvitationFindUniqueOrThrowArgs} args - Arguments to find a OrderInvitation
     * @example
     * // Get one OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderInvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderInvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderInvitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationFindFirstArgs} args - Arguments to find a OrderInvitation
     * @example
     * // Get one OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderInvitationFindFirstArgs>(args?: SelectSubset<T, OrderInvitationFindFirstArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderInvitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationFindFirstOrThrowArgs} args - Arguments to find a OrderInvitation
     * @example
     * // Get one OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderInvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderInvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderInvitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderInvitations
     * const orderInvitations = await prisma.orderInvitation.findMany()
     * 
     * // Get first 10 OrderInvitations
     * const orderInvitations = await prisma.orderInvitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderInvitationWithIdOnly = await prisma.orderInvitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderInvitationFindManyArgs>(args?: SelectSubset<T, OrderInvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderInvitation.
     * @param {OrderInvitationCreateArgs} args - Arguments to create a OrderInvitation.
     * @example
     * // Create one OrderInvitation
     * const OrderInvitation = await prisma.orderInvitation.create({
     *   data: {
     *     // ... data to create a OrderInvitation
     *   }
     * })
     * 
     */
    create<T extends OrderInvitationCreateArgs>(args: SelectSubset<T, OrderInvitationCreateArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderInvitations.
     * @param {OrderInvitationCreateManyArgs} args - Arguments to create many OrderInvitations.
     * @example
     * // Create many OrderInvitations
     * const orderInvitation = await prisma.orderInvitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderInvitationCreateManyArgs>(args?: SelectSubset<T, OrderInvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderInvitations and returns the data saved in the database.
     * @param {OrderInvitationCreateManyAndReturnArgs} args - Arguments to create many OrderInvitations.
     * @example
     * // Create many OrderInvitations
     * const orderInvitation = await prisma.orderInvitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderInvitations and only return the `id`
     * const orderInvitationWithIdOnly = await prisma.orderInvitation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderInvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderInvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderInvitation.
     * @param {OrderInvitationDeleteArgs} args - Arguments to delete one OrderInvitation.
     * @example
     * // Delete one OrderInvitation
     * const OrderInvitation = await prisma.orderInvitation.delete({
     *   where: {
     *     // ... filter to delete one OrderInvitation
     *   }
     * })
     * 
     */
    delete<T extends OrderInvitationDeleteArgs>(args: SelectSubset<T, OrderInvitationDeleteArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderInvitation.
     * @param {OrderInvitationUpdateArgs} args - Arguments to update one OrderInvitation.
     * @example
     * // Update one OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderInvitationUpdateArgs>(args: SelectSubset<T, OrderInvitationUpdateArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderInvitations.
     * @param {OrderInvitationDeleteManyArgs} args - Arguments to filter OrderInvitations to delete.
     * @example
     * // Delete a few OrderInvitations
     * const { count } = await prisma.orderInvitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderInvitationDeleteManyArgs>(args?: SelectSubset<T, OrderInvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderInvitations
     * const orderInvitation = await prisma.orderInvitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderInvitationUpdateManyArgs>(args: SelectSubset<T, OrderInvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderInvitations and returns the data updated in the database.
     * @param {OrderInvitationUpdateManyAndReturnArgs} args - Arguments to update many OrderInvitations.
     * @example
     * // Update many OrderInvitations
     * const orderInvitation = await prisma.orderInvitation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderInvitations and only return the `id`
     * const orderInvitationWithIdOnly = await prisma.orderInvitation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderInvitationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderInvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderInvitation.
     * @param {OrderInvitationUpsertArgs} args - Arguments to update or create a OrderInvitation.
     * @example
     * // Update or create a OrderInvitation
     * const orderInvitation = await prisma.orderInvitation.upsert({
     *   create: {
     *     // ... data to create a OrderInvitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderInvitation we want to update
     *   }
     * })
     */
    upsert<T extends OrderInvitationUpsertArgs>(args: SelectSubset<T, OrderInvitationUpsertArgs<ExtArgs>>): Prisma__OrderInvitationClient<$Result.GetResult<Prisma.$OrderInvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationCountArgs} args - Arguments to filter OrderInvitations to count.
     * @example
     * // Count the number of OrderInvitations
     * const count = await prisma.orderInvitation.count({
     *   where: {
     *     // ... the filter for the OrderInvitations we want to count
     *   }
     * })
    **/
    count<T extends OrderInvitationCountArgs>(
      args?: Subset<T, OrderInvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderInvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderInvitationAggregateArgs>(args: Subset<T, OrderInvitationAggregateArgs>): Prisma.PrismaPromise<GetOrderInvitationAggregateType<T>>

    /**
     * Group by OrderInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderInvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderInvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderInvitationGroupByArgs['orderBy'] }
        : { orderBy?: OrderInvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderInvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderInvitation model
   */
  readonly fields: OrderInvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderInvitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderInvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    slot<T extends OrderInvitation$slotArgs<ExtArgs> = {}>(args?: Subset<T, OrderInvitation$slotArgs<ExtArgs>>): Prisma__OrderSlotClient<$Result.GetResult<Prisma.$OrderSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderInvitation model
   */
  interface OrderInvitationFieldRefs {
    readonly id: FieldRef<"OrderInvitation", 'String'>
    readonly orderId: FieldRef<"OrderInvitation", 'String'>
    readonly providerId: FieldRef<"OrderInvitation", 'String'>
    readonly slotId: FieldRef<"OrderInvitation", 'String'>
    readonly score: FieldRef<"OrderInvitation", 'Decimal'>
    readonly sentAt: FieldRef<"OrderInvitation", 'DateTime'>
    readonly respondedAt: FieldRef<"OrderInvitation", 'DateTime'>
    readonly response: FieldRef<"OrderInvitation", 'String'>
    readonly waMessageId: FieldRef<"OrderInvitation", 'String'>
    readonly waRemoteJid: FieldRef<"OrderInvitation", 'String'>
    readonly categorySlug: FieldRef<"OrderInvitation", 'String'>
    readonly status: FieldRef<"OrderInvitation", 'String'>
    readonly expiresAt: FieldRef<"OrderInvitation", 'DateTime'>
    readonly meta: FieldRef<"OrderInvitation", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * OrderInvitation findUnique
   */
  export type OrderInvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter, which OrderInvitation to fetch.
     */
    where: OrderInvitationWhereUniqueInput
  }

  /**
   * OrderInvitation findUniqueOrThrow
   */
  export type OrderInvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter, which OrderInvitation to fetch.
     */
    where: OrderInvitationWhereUniqueInput
  }

  /**
   * OrderInvitation findFirst
   */
  export type OrderInvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter, which OrderInvitation to fetch.
     */
    where?: OrderInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderInvitations to fetch.
     */
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderInvitations.
     */
    cursor?: OrderInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderInvitations.
     */
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * OrderInvitation findFirstOrThrow
   */
  export type OrderInvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter, which OrderInvitation to fetch.
     */
    where?: OrderInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderInvitations to fetch.
     */
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderInvitations.
     */
    cursor?: OrderInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderInvitations.
     */
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * OrderInvitation findMany
   */
  export type OrderInvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter, which OrderInvitations to fetch.
     */
    where?: OrderInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderInvitations to fetch.
     */
    orderBy?: OrderInvitationOrderByWithRelationInput | OrderInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderInvitations.
     */
    cursor?: OrderInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderInvitations.
     */
    skip?: number
    distinct?: OrderInvitationScalarFieldEnum | OrderInvitationScalarFieldEnum[]
  }

  /**
   * OrderInvitation create
   */
  export type OrderInvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderInvitation.
     */
    data: XOR<OrderInvitationCreateInput, OrderInvitationUncheckedCreateInput>
  }

  /**
   * OrderInvitation createMany
   */
  export type OrderInvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderInvitations.
     */
    data: OrderInvitationCreateManyInput | OrderInvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderInvitation createManyAndReturn
   */
  export type OrderInvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * The data used to create many OrderInvitations.
     */
    data: OrderInvitationCreateManyInput | OrderInvitationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderInvitation update
   */
  export type OrderInvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderInvitation.
     */
    data: XOR<OrderInvitationUpdateInput, OrderInvitationUncheckedUpdateInput>
    /**
     * Choose, which OrderInvitation to update.
     */
    where: OrderInvitationWhereUniqueInput
  }

  /**
   * OrderInvitation updateMany
   */
  export type OrderInvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderInvitations.
     */
    data: XOR<OrderInvitationUpdateManyMutationInput, OrderInvitationUncheckedUpdateManyInput>
    /**
     * Filter which OrderInvitations to update
     */
    where?: OrderInvitationWhereInput
    /**
     * Limit how many OrderInvitations to update.
     */
    limit?: number
  }

  /**
   * OrderInvitation updateManyAndReturn
   */
  export type OrderInvitationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * The data used to update OrderInvitations.
     */
    data: XOR<OrderInvitationUpdateManyMutationInput, OrderInvitationUncheckedUpdateManyInput>
    /**
     * Filter which OrderInvitations to update
     */
    where?: OrderInvitationWhereInput
    /**
     * Limit how many OrderInvitations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderInvitation upsert
   */
  export type OrderInvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderInvitation to update in case it exists.
     */
    where: OrderInvitationWhereUniqueInput
    /**
     * In case the OrderInvitation found by the `where` argument doesn't exist, create a new OrderInvitation with this data.
     */
    create: XOR<OrderInvitationCreateInput, OrderInvitationUncheckedCreateInput>
    /**
     * In case the OrderInvitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderInvitationUpdateInput, OrderInvitationUncheckedUpdateInput>
  }

  /**
   * OrderInvitation delete
   */
  export type OrderInvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
    /**
     * Filter which OrderInvitation to delete.
     */
    where: OrderInvitationWhereUniqueInput
  }

  /**
   * OrderInvitation deleteMany
   */
  export type OrderInvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderInvitations to delete
     */
    where?: OrderInvitationWhereInput
    /**
     * Limit how many OrderInvitations to delete.
     */
    limit?: number
  }

  /**
   * OrderInvitation.slot
   */
  export type OrderInvitation$slotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderSlot
     */
    select?: OrderSlotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderSlot
     */
    omit?: OrderSlotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderSlotInclude<ExtArgs> | null
    where?: OrderSlotWhereInput
  }

  /**
   * OrderInvitation without action
   */
  export type OrderInvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderInvitation
     */
    select?: OrderInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderInvitation
     */
    omit?: OrderInvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInvitationInclude<ExtArgs> | null
  }


  /**
   * Model OrderStatusHistory
   */

  export type AggregateOrderStatusHistory = {
    _count: OrderStatusHistoryCountAggregateOutputType | null
    _min: OrderStatusHistoryMinAggregateOutputType | null
    _max: OrderStatusHistoryMaxAggregateOutputType | null
  }

  export type OrderStatusHistoryMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    oldStatus: string | null
    newStatus: string | null
    at: Date | null
    byUserId: string | null
  }

  export type OrderStatusHistoryMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    oldStatus: string | null
    newStatus: string | null
    at: Date | null
    byUserId: string | null
  }

  export type OrderStatusHistoryCountAggregateOutputType = {
    id: number
    orderId: number
    oldStatus: number
    newStatus: number
    at: number
    byUserId: number
    _all: number
  }


  export type OrderStatusHistoryMinAggregateInputType = {
    id?: true
    orderId?: true
    oldStatus?: true
    newStatus?: true
    at?: true
    byUserId?: true
  }

  export type OrderStatusHistoryMaxAggregateInputType = {
    id?: true
    orderId?: true
    oldStatus?: true
    newStatus?: true
    at?: true
    byUserId?: true
  }

  export type OrderStatusHistoryCountAggregateInputType = {
    id?: true
    orderId?: true
    oldStatus?: true
    newStatus?: true
    at?: true
    byUserId?: true
    _all?: true
  }

  export type OrderStatusHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderStatusHistory to aggregate.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderStatusHistories
    **/
    _count?: true | OrderStatusHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderStatusHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderStatusHistoryMaxAggregateInputType
  }

  export type GetOrderStatusHistoryAggregateType<T extends OrderStatusHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderStatusHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderStatusHistory[P]>
      : GetScalarType<T[P], AggregateOrderStatusHistory[P]>
  }




  export type OrderStatusHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderStatusHistoryWhereInput
    orderBy?: OrderStatusHistoryOrderByWithAggregationInput | OrderStatusHistoryOrderByWithAggregationInput[]
    by: OrderStatusHistoryScalarFieldEnum[] | OrderStatusHistoryScalarFieldEnum
    having?: OrderStatusHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderStatusHistoryCountAggregateInputType | true
    _min?: OrderStatusHistoryMinAggregateInputType
    _max?: OrderStatusHistoryMaxAggregateInputType
  }

  export type OrderStatusHistoryGroupByOutputType = {
    id: string
    orderId: string
    oldStatus: string | null
    newStatus: string
    at: Date
    byUserId: string | null
    _count: OrderStatusHistoryCountAggregateOutputType | null
    _min: OrderStatusHistoryMinAggregateOutputType | null
    _max: OrderStatusHistoryMaxAggregateOutputType | null
  }

  type GetOrderStatusHistoryGroupByPayload<T extends OrderStatusHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderStatusHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderStatusHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderStatusHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], OrderStatusHistoryGroupByOutputType[P]>
        }
      >
    >


  export type OrderStatusHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    oldStatus?: boolean
    newStatus?: boolean
    at?: boolean
    byUserId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    oldStatus?: boolean
    newStatus?: boolean
    at?: boolean
    byUserId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    oldStatus?: boolean
    newStatus?: boolean
    at?: boolean
    byUserId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectScalar = {
    id?: boolean
    orderId?: boolean
    oldStatus?: boolean
    newStatus?: boolean
    at?: boolean
    byUserId?: boolean
  }

  export type OrderStatusHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "oldStatus" | "newStatus" | "at" | "byUserId", ExtArgs["result"]["orderStatusHistory"]>
  export type OrderStatusHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }
  export type OrderStatusHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }
  export type OrderStatusHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    byUser?: boolean | OrderStatusHistory$byUserArgs<ExtArgs>
  }

  export type $OrderStatusHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderStatusHistory"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      byUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      oldStatus: string | null
      newStatus: string
      at: Date
      byUserId: string | null
    }, ExtArgs["result"]["orderStatusHistory"]>
    composites: {}
  }

  type OrderStatusHistoryGetPayload<S extends boolean | null | undefined | OrderStatusHistoryDefaultArgs> = $Result.GetResult<Prisma.$OrderStatusHistoryPayload, S>

  type OrderStatusHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderStatusHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderStatusHistoryCountAggregateInputType | true
    }

  export interface OrderStatusHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderStatusHistory'], meta: { name: 'OrderStatusHistory' } }
    /**
     * Find zero or one OrderStatusHistory that matches the filter.
     * @param {OrderStatusHistoryFindUniqueArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderStatusHistoryFindUniqueArgs>(args: SelectSubset<T, OrderStatusHistoryFindUniqueArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderStatusHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderStatusHistoryFindUniqueOrThrowArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderStatusHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderStatusHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindFirstArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderStatusHistoryFindFirstArgs>(args?: SelectSubset<T, OrderStatusHistoryFindFirstArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderStatusHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindFirstOrThrowArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderStatusHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderStatusHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderStatusHistories
     * const orderStatusHistories = await prisma.orderStatusHistory.findMany()
     * 
     * // Get first 10 OrderStatusHistories
     * const orderStatusHistories = await prisma.orderStatusHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderStatusHistoryFindManyArgs>(args?: SelectSubset<T, OrderStatusHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderStatusHistory.
     * @param {OrderStatusHistoryCreateArgs} args - Arguments to create a OrderStatusHistory.
     * @example
     * // Create one OrderStatusHistory
     * const OrderStatusHistory = await prisma.orderStatusHistory.create({
     *   data: {
     *     // ... data to create a OrderStatusHistory
     *   }
     * })
     * 
     */
    create<T extends OrderStatusHistoryCreateArgs>(args: SelectSubset<T, OrderStatusHistoryCreateArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderStatusHistories.
     * @param {OrderStatusHistoryCreateManyArgs} args - Arguments to create many OrderStatusHistories.
     * @example
     * // Create many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderStatusHistoryCreateManyArgs>(args?: SelectSubset<T, OrderStatusHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderStatusHistories and returns the data saved in the database.
     * @param {OrderStatusHistoryCreateManyAndReturnArgs} args - Arguments to create many OrderStatusHistories.
     * @example
     * // Create many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderStatusHistories and only return the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderStatusHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderStatusHistory.
     * @param {OrderStatusHistoryDeleteArgs} args - Arguments to delete one OrderStatusHistory.
     * @example
     * // Delete one OrderStatusHistory
     * const OrderStatusHistory = await prisma.orderStatusHistory.delete({
     *   where: {
     *     // ... filter to delete one OrderStatusHistory
     *   }
     * })
     * 
     */
    delete<T extends OrderStatusHistoryDeleteArgs>(args: SelectSubset<T, OrderStatusHistoryDeleteArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderStatusHistory.
     * @param {OrderStatusHistoryUpdateArgs} args - Arguments to update one OrderStatusHistory.
     * @example
     * // Update one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderStatusHistoryUpdateArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderStatusHistories.
     * @param {OrderStatusHistoryDeleteManyArgs} args - Arguments to filter OrderStatusHistories to delete.
     * @example
     * // Delete a few OrderStatusHistories
     * const { count } = await prisma.orderStatusHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderStatusHistoryDeleteManyArgs>(args?: SelectSubset<T, OrderStatusHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderStatusHistoryUpdateManyArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderStatusHistories and returns the data updated in the database.
     * @param {OrderStatusHistoryUpdateManyAndReturnArgs} args - Arguments to update many OrderStatusHistories.
     * @example
     * // Update many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderStatusHistories and only return the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderStatusHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderStatusHistory.
     * @param {OrderStatusHistoryUpsertArgs} args - Arguments to update or create a OrderStatusHistory.
     * @example
     * // Update or create a OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.upsert({
     *   create: {
     *     // ... data to create a OrderStatusHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderStatusHistory we want to update
     *   }
     * })
     */
    upsert<T extends OrderStatusHistoryUpsertArgs>(args: SelectSubset<T, OrderStatusHistoryUpsertArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryCountArgs} args - Arguments to filter OrderStatusHistories to count.
     * @example
     * // Count the number of OrderStatusHistories
     * const count = await prisma.orderStatusHistory.count({
     *   where: {
     *     // ... the filter for the OrderStatusHistories we want to count
     *   }
     * })
    **/
    count<T extends OrderStatusHistoryCountArgs>(
      args?: Subset<T, OrderStatusHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderStatusHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderStatusHistoryAggregateArgs>(args: Subset<T, OrderStatusHistoryAggregateArgs>): Prisma.PrismaPromise<GetOrderStatusHistoryAggregateType<T>>

    /**
     * Group by OrderStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderStatusHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderStatusHistoryGroupByArgs['orderBy'] }
        : { orderBy?: OrderStatusHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderStatusHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderStatusHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderStatusHistory model
   */
  readonly fields: OrderStatusHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderStatusHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderStatusHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    byUser<T extends OrderStatusHistory$byUserArgs<ExtArgs> = {}>(args?: Subset<T, OrderStatusHistory$byUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderStatusHistory model
   */
  interface OrderStatusHistoryFieldRefs {
    readonly id: FieldRef<"OrderStatusHistory", 'String'>
    readonly orderId: FieldRef<"OrderStatusHistory", 'String'>
    readonly oldStatus: FieldRef<"OrderStatusHistory", 'String'>
    readonly newStatus: FieldRef<"OrderStatusHistory", 'String'>
    readonly at: FieldRef<"OrderStatusHistory", 'DateTime'>
    readonly byUserId: FieldRef<"OrderStatusHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderStatusHistory findUnique
   */
  export type OrderStatusHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory findUniqueOrThrow
   */
  export type OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory findFirst
   */
  export type OrderStatusHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderStatusHistories.
     */
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory findFirstOrThrow
   */
  export type OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderStatusHistories.
     */
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory findMany
   */
  export type OrderStatusHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistories to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory create
   */
  export type OrderStatusHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderStatusHistory.
     */
    data: XOR<OrderStatusHistoryCreateInput, OrderStatusHistoryUncheckedCreateInput>
  }

  /**
   * OrderStatusHistory createMany
   */
  export type OrderStatusHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderStatusHistories.
     */
    data: OrderStatusHistoryCreateManyInput | OrderStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderStatusHistory createManyAndReturn
   */
  export type OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many OrderStatusHistories.
     */
    data: OrderStatusHistoryCreateManyInput | OrderStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderStatusHistory update
   */
  export type OrderStatusHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderStatusHistory.
     */
    data: XOR<OrderStatusHistoryUpdateInput, OrderStatusHistoryUncheckedUpdateInput>
    /**
     * Choose, which OrderStatusHistory to update.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory updateMany
   */
  export type OrderStatusHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderStatusHistories.
     */
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderStatusHistories to update
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to update.
     */
    limit?: number
  }

  /**
   * OrderStatusHistory updateManyAndReturn
   */
  export type OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to update OrderStatusHistories.
     */
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderStatusHistories to update
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderStatusHistory upsert
   */
  export type OrderStatusHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderStatusHistory to update in case it exists.
     */
    where: OrderStatusHistoryWhereUniqueInput
    /**
     * In case the OrderStatusHistory found by the `where` argument doesn't exist, create a new OrderStatusHistory with this data.
     */
    create: XOR<OrderStatusHistoryCreateInput, OrderStatusHistoryUncheckedCreateInput>
    /**
     * In case the OrderStatusHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderStatusHistoryUpdateInput, OrderStatusHistoryUncheckedUpdateInput>
  }

  /**
   * OrderStatusHistory delete
   */
  export type OrderStatusHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter which OrderStatusHistory to delete.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory deleteMany
   */
  export type OrderStatusHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderStatusHistories to delete
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to delete.
     */
    limit?: number
  }

  /**
   * OrderStatusHistory.byUser
   */
  export type OrderStatusHistory$byUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * OrderStatusHistory without action
   */
  export type OrderStatusHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
  }


  /**
   * Model OrderReview
   */

  export type AggregateOrderReview = {
    _count: OrderReviewCountAggregateOutputType | null
    _avg: OrderReviewAvgAggregateOutputType | null
    _sum: OrderReviewSumAggregateOutputType | null
    _min: OrderReviewMinAggregateOutputType | null
    _max: OrderReviewMaxAggregateOutputType | null
  }

  export type OrderReviewAvgAggregateOutputType = {
    rating: number | null
  }

  export type OrderReviewSumAggregateOutputType = {
    rating: number | null
  }

  export type OrderReviewMinAggregateOutputType = {
    orderId: string | null
    clientId: string | null
    providerId: string | null
    rating: number | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderReviewMaxAggregateOutputType = {
    orderId: string | null
    clientId: string | null
    providerId: string | null
    rating: number | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderReviewCountAggregateOutputType = {
    orderId: number
    clientId: number
    providerId: number
    rating: number
    comment: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderReviewAvgAggregateInputType = {
    rating?: true
  }

  export type OrderReviewSumAggregateInputType = {
    rating?: true
  }

  export type OrderReviewMinAggregateInputType = {
    orderId?: true
    clientId?: true
    providerId?: true
    rating?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderReviewMaxAggregateInputType = {
    orderId?: true
    clientId?: true
    providerId?: true
    rating?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderReviewCountAggregateInputType = {
    orderId?: true
    clientId?: true
    providerId?: true
    rating?: true
    comment?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderReview to aggregate.
     */
    where?: OrderReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderReviews to fetch.
     */
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderReviews
    **/
    _count?: true | OrderReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderReviewMaxAggregateInputType
  }

  export type GetOrderReviewAggregateType<T extends OrderReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderReview[P]>
      : GetScalarType<T[P], AggregateOrderReview[P]>
  }




  export type OrderReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderReviewWhereInput
    orderBy?: OrderReviewOrderByWithAggregationInput | OrderReviewOrderByWithAggregationInput[]
    by: OrderReviewScalarFieldEnum[] | OrderReviewScalarFieldEnum
    having?: OrderReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderReviewCountAggregateInputType | true
    _avg?: OrderReviewAvgAggregateInputType
    _sum?: OrderReviewSumAggregateInputType
    _min?: OrderReviewMinAggregateInputType
    _max?: OrderReviewMaxAggregateInputType
  }

  export type OrderReviewGroupByOutputType = {
    orderId: string
    clientId: string
    providerId: string
    rating: number | null
    comment: string | null
    createdAt: Date | null
    updatedAt: Date | null
    _count: OrderReviewCountAggregateOutputType | null
    _avg: OrderReviewAvgAggregateOutputType | null
    _sum: OrderReviewSumAggregateOutputType | null
    _min: OrderReviewMinAggregateOutputType | null
    _max: OrderReviewMaxAggregateOutputType | null
  }

  type GetOrderReviewGroupByPayload<T extends OrderReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderReviewGroupByOutputType[P]>
            : GetScalarType<T[P], OrderReviewGroupByOutputType[P]>
        }
      >
    >


  export type OrderReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    clientId?: boolean
    providerId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderReview"]>

  export type OrderReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    clientId?: boolean
    providerId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderReview"]>

  export type OrderReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    clientId?: boolean
    providerId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderReview"]>

  export type OrderReviewSelectScalar = {
    orderId?: boolean
    clientId?: boolean
    providerId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"orderId" | "clientId" | "providerId" | "rating" | "comment" | "createdAt" | "updatedAt", ExtArgs["result"]["orderReview"]>
  export type OrderReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type OrderReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type OrderReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    client?: boolean | UserDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $OrderReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderReview"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      client: Prisma.$UserPayload<ExtArgs>
      provider: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      orderId: string
      clientId: string
      providerId: string
      rating: number | null
      comment: string | null
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["orderReview"]>
    composites: {}
  }

  type OrderReviewGetPayload<S extends boolean | null | undefined | OrderReviewDefaultArgs> = $Result.GetResult<Prisma.$OrderReviewPayload, S>

  type OrderReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderReviewCountAggregateInputType | true
    }

  export interface OrderReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderReview'], meta: { name: 'OrderReview' } }
    /**
     * Find zero or one OrderReview that matches the filter.
     * @param {OrderReviewFindUniqueArgs} args - Arguments to find a OrderReview
     * @example
     * // Get one OrderReview
     * const orderReview = await prisma.orderReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderReviewFindUniqueArgs>(args: SelectSubset<T, OrderReviewFindUniqueArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderReview that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderReviewFindUniqueOrThrowArgs} args - Arguments to find a OrderReview
     * @example
     * // Get one OrderReview
     * const orderReview = await prisma.orderReview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewFindFirstArgs} args - Arguments to find a OrderReview
     * @example
     * // Get one OrderReview
     * const orderReview = await prisma.orderReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderReviewFindFirstArgs>(args?: SelectSubset<T, OrderReviewFindFirstArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderReview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewFindFirstOrThrowArgs} args - Arguments to find a OrderReview
     * @example
     * // Get one OrderReview
     * const orderReview = await prisma.orderReview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderReviews
     * const orderReviews = await prisma.orderReview.findMany()
     * 
     * // Get first 10 OrderReviews
     * const orderReviews = await prisma.orderReview.findMany({ take: 10 })
     * 
     * // Only select the `orderId`
     * const orderReviewWithOrderIdOnly = await prisma.orderReview.findMany({ select: { orderId: true } })
     * 
     */
    findMany<T extends OrderReviewFindManyArgs>(args?: SelectSubset<T, OrderReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderReview.
     * @param {OrderReviewCreateArgs} args - Arguments to create a OrderReview.
     * @example
     * // Create one OrderReview
     * const OrderReview = await prisma.orderReview.create({
     *   data: {
     *     // ... data to create a OrderReview
     *   }
     * })
     * 
     */
    create<T extends OrderReviewCreateArgs>(args: SelectSubset<T, OrderReviewCreateArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderReviews.
     * @param {OrderReviewCreateManyArgs} args - Arguments to create many OrderReviews.
     * @example
     * // Create many OrderReviews
     * const orderReview = await prisma.orderReview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderReviewCreateManyArgs>(args?: SelectSubset<T, OrderReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderReviews and returns the data saved in the database.
     * @param {OrderReviewCreateManyAndReturnArgs} args - Arguments to create many OrderReviews.
     * @example
     * // Create many OrderReviews
     * const orderReview = await prisma.orderReview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderReviews and only return the `orderId`
     * const orderReviewWithOrderIdOnly = await prisma.orderReview.createManyAndReturn({
     *   select: { orderId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderReview.
     * @param {OrderReviewDeleteArgs} args - Arguments to delete one OrderReview.
     * @example
     * // Delete one OrderReview
     * const OrderReview = await prisma.orderReview.delete({
     *   where: {
     *     // ... filter to delete one OrderReview
     *   }
     * })
     * 
     */
    delete<T extends OrderReviewDeleteArgs>(args: SelectSubset<T, OrderReviewDeleteArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderReview.
     * @param {OrderReviewUpdateArgs} args - Arguments to update one OrderReview.
     * @example
     * // Update one OrderReview
     * const orderReview = await prisma.orderReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderReviewUpdateArgs>(args: SelectSubset<T, OrderReviewUpdateArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderReviews.
     * @param {OrderReviewDeleteManyArgs} args - Arguments to filter OrderReviews to delete.
     * @example
     * // Delete a few OrderReviews
     * const { count } = await prisma.orderReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderReviewDeleteManyArgs>(args?: SelectSubset<T, OrderReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderReviews
     * const orderReview = await prisma.orderReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderReviewUpdateManyArgs>(args: SelectSubset<T, OrderReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderReviews and returns the data updated in the database.
     * @param {OrderReviewUpdateManyAndReturnArgs} args - Arguments to update many OrderReviews.
     * @example
     * // Update many OrderReviews
     * const orderReview = await prisma.orderReview.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderReviews and only return the `orderId`
     * const orderReviewWithOrderIdOnly = await prisma.orderReview.updateManyAndReturn({
     *   select: { orderId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderReview.
     * @param {OrderReviewUpsertArgs} args - Arguments to update or create a OrderReview.
     * @example
     * // Update or create a OrderReview
     * const orderReview = await prisma.orderReview.upsert({
     *   create: {
     *     // ... data to create a OrderReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderReview we want to update
     *   }
     * })
     */
    upsert<T extends OrderReviewUpsertArgs>(args: SelectSubset<T, OrderReviewUpsertArgs<ExtArgs>>): Prisma__OrderReviewClient<$Result.GetResult<Prisma.$OrderReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewCountArgs} args - Arguments to filter OrderReviews to count.
     * @example
     * // Count the number of OrderReviews
     * const count = await prisma.orderReview.count({
     *   where: {
     *     // ... the filter for the OrderReviews we want to count
     *   }
     * })
    **/
    count<T extends OrderReviewCountArgs>(
      args?: Subset<T, OrderReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderReviewAggregateArgs>(args: Subset<T, OrderReviewAggregateArgs>): Prisma.PrismaPromise<GetOrderReviewAggregateType<T>>

    /**
     * Group by OrderReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderReviewGroupByArgs['orderBy'] }
        : { orderBy?: OrderReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderReview model
   */
  readonly fields: OrderReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    client<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderReview model
   */
  interface OrderReviewFieldRefs {
    readonly orderId: FieldRef<"OrderReview", 'String'>
    readonly clientId: FieldRef<"OrderReview", 'String'>
    readonly providerId: FieldRef<"OrderReview", 'String'>
    readonly rating: FieldRef<"OrderReview", 'Int'>
    readonly comment: FieldRef<"OrderReview", 'String'>
    readonly createdAt: FieldRef<"OrderReview", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderReview", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderReview findUnique
   */
  export type OrderReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter, which OrderReview to fetch.
     */
    where: OrderReviewWhereUniqueInput
  }

  /**
   * OrderReview findUniqueOrThrow
   */
  export type OrderReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter, which OrderReview to fetch.
     */
    where: OrderReviewWhereUniqueInput
  }

  /**
   * OrderReview findFirst
   */
  export type OrderReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter, which OrderReview to fetch.
     */
    where?: OrderReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderReviews to fetch.
     */
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderReviews.
     */
    cursor?: OrderReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderReviews.
     */
    distinct?: OrderReviewScalarFieldEnum | OrderReviewScalarFieldEnum[]
  }

  /**
   * OrderReview findFirstOrThrow
   */
  export type OrderReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter, which OrderReview to fetch.
     */
    where?: OrderReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderReviews to fetch.
     */
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderReviews.
     */
    cursor?: OrderReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderReviews.
     */
    distinct?: OrderReviewScalarFieldEnum | OrderReviewScalarFieldEnum[]
  }

  /**
   * OrderReview findMany
   */
  export type OrderReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter, which OrderReviews to fetch.
     */
    where?: OrderReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderReviews to fetch.
     */
    orderBy?: OrderReviewOrderByWithRelationInput | OrderReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderReviews.
     */
    cursor?: OrderReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderReviews.
     */
    skip?: number
    distinct?: OrderReviewScalarFieldEnum | OrderReviewScalarFieldEnum[]
  }

  /**
   * OrderReview create
   */
  export type OrderReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderReview.
     */
    data: XOR<OrderReviewCreateInput, OrderReviewUncheckedCreateInput>
  }

  /**
   * OrderReview createMany
   */
  export type OrderReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderReviews.
     */
    data: OrderReviewCreateManyInput | OrderReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderReview createManyAndReturn
   */
  export type OrderReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * The data used to create many OrderReviews.
     */
    data: OrderReviewCreateManyInput | OrderReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderReview update
   */
  export type OrderReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderReview.
     */
    data: XOR<OrderReviewUpdateInput, OrderReviewUncheckedUpdateInput>
    /**
     * Choose, which OrderReview to update.
     */
    where: OrderReviewWhereUniqueInput
  }

  /**
   * OrderReview updateMany
   */
  export type OrderReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderReviews.
     */
    data: XOR<OrderReviewUpdateManyMutationInput, OrderReviewUncheckedUpdateManyInput>
    /**
     * Filter which OrderReviews to update
     */
    where?: OrderReviewWhereInput
    /**
     * Limit how many OrderReviews to update.
     */
    limit?: number
  }

  /**
   * OrderReview updateManyAndReturn
   */
  export type OrderReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * The data used to update OrderReviews.
     */
    data: XOR<OrderReviewUpdateManyMutationInput, OrderReviewUncheckedUpdateManyInput>
    /**
     * Filter which OrderReviews to update
     */
    where?: OrderReviewWhereInput
    /**
     * Limit how many OrderReviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderReview upsert
   */
  export type OrderReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderReview to update in case it exists.
     */
    where: OrderReviewWhereUniqueInput
    /**
     * In case the OrderReview found by the `where` argument doesn't exist, create a new OrderReview with this data.
     */
    create: XOR<OrderReviewCreateInput, OrderReviewUncheckedCreateInput>
    /**
     * In case the OrderReview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderReviewUpdateInput, OrderReviewUncheckedUpdateInput>
  }

  /**
   * OrderReview delete
   */
  export type OrderReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
    /**
     * Filter which OrderReview to delete.
     */
    where: OrderReviewWhereUniqueInput
  }

  /**
   * OrderReview deleteMany
   */
  export type OrderReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderReviews to delete
     */
    where?: OrderReviewWhereInput
    /**
     * Limit how many OrderReviews to delete.
     */
    limit?: number
  }

  /**
   * OrderReview without action
   */
  export type OrderReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderReview
     */
    select?: OrderReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderReview
     */
    omit?: OrderReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderReviewInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amountCents: number | null
  }

  export type PaymentSumAggregateOutputType = {
    amountCents: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    kind: string | null
    gateway: string | null
    gatewayPaymentId: string | null
    status: string | null
    amountCents: number | null
    createdAt: Date | null
    approvedAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    kind: string | null
    gateway: string | null
    gatewayPaymentId: string | null
    status: string | null
    amountCents: number | null
    createdAt: Date | null
    approvedAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    orderId: number
    kind: number
    gateway: number
    gatewayPaymentId: number
    status: number
    amountCents: number
    createdAt: number
    approvedAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amountCents?: true
  }

  export type PaymentSumAggregateInputType = {
    amountCents?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    orderId?: true
    kind?: true
    gateway?: true
    gatewayPaymentId?: true
    status?: true
    amountCents?: true
    createdAt?: true
    approvedAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    orderId?: true
    kind?: true
    gateway?: true
    gatewayPaymentId?: true
    status?: true
    amountCents?: true
    createdAt?: true
    approvedAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    orderId?: true
    kind?: true
    gateway?: true
    gatewayPaymentId?: true
    status?: true
    amountCents?: true
    createdAt?: true
    approvedAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    orderId: string
    kind: string
    gateway: string
    gatewayPaymentId: string | null
    status: string
    amountCents: number
    createdAt: Date
    approvedAt: Date | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    kind?: boolean
    gateway?: boolean
    gatewayPaymentId?: boolean
    status?: boolean
    amountCents?: boolean
    createdAt?: boolean
    approvedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    paymentEvents?: boolean | Payment$paymentEventsArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    kind?: boolean
    gateway?: boolean
    gatewayPaymentId?: boolean
    status?: boolean
    amountCents?: boolean
    createdAt?: boolean
    approvedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    kind?: boolean
    gateway?: boolean
    gatewayPaymentId?: boolean
    status?: boolean
    amountCents?: boolean
    createdAt?: boolean
    approvedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    orderId?: boolean
    kind?: boolean
    gateway?: boolean
    gatewayPaymentId?: boolean
    status?: boolean
    amountCents?: boolean
    createdAt?: boolean
    approvedAt?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "kind" | "gateway" | "gatewayPaymentId" | "status" | "amountCents" | "createdAt" | "approvedAt", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    paymentEvents?: boolean | Payment$paymentEventsArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      paymentEvents: Prisma.$PaymentEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      kind: string
      gateway: string
      gatewayPaymentId: string | null
      status: string
      amountCents: number
      createdAt: Date
      approvedAt: Date | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    paymentEvents<T extends Payment$paymentEventsArgs<ExtArgs> = {}>(args?: Subset<T, Payment$paymentEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly orderId: FieldRef<"Payment", 'String'>
    readonly kind: FieldRef<"Payment", 'String'>
    readonly gateway: FieldRef<"Payment", 'String'>
    readonly gatewayPaymentId: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'String'>
    readonly amountCents: FieldRef<"Payment", 'Int'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly approvedAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.paymentEvents
   */
  export type Payment$paymentEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    cursor?: PaymentEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model PaymentEvent
   */

  export type AggregatePaymentEvent = {
    _count: PaymentEventCountAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  export type PaymentEventMinAggregateOutputType = {
    id: string | null
    paymentId: string | null
    orderId: string | null
    receivedAt: Date | null
    signatureOk: boolean | null
  }

  export type PaymentEventMaxAggregateOutputType = {
    id: string | null
    paymentId: string | null
    orderId: string | null
    receivedAt: Date | null
    signatureOk: boolean | null
  }

  export type PaymentEventCountAggregateOutputType = {
    id: number
    paymentId: number
    orderId: number
    rawPayload: number
    receivedAt: number
    signatureOk: number
    _all: number
  }


  export type PaymentEventMinAggregateInputType = {
    id?: true
    paymentId?: true
    orderId?: true
    receivedAt?: true
    signatureOk?: true
  }

  export type PaymentEventMaxAggregateInputType = {
    id?: true
    paymentId?: true
    orderId?: true
    receivedAt?: true
    signatureOk?: true
  }

  export type PaymentEventCountAggregateInputType = {
    id?: true
    paymentId?: true
    orderId?: true
    rawPayload?: true
    receivedAt?: true
    signatureOk?: true
    _all?: true
  }

  export type PaymentEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvent to aggregate.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentEvents
    **/
    _count?: true | PaymentEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentEventMaxAggregateInputType
  }

  export type GetPaymentEventAggregateType<T extends PaymentEventAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentEvent[P]>
      : GetScalarType<T[P], AggregatePaymentEvent[P]>
  }




  export type PaymentEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithAggregationInput | PaymentEventOrderByWithAggregationInput[]
    by: PaymentEventScalarFieldEnum[] | PaymentEventScalarFieldEnum
    having?: PaymentEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentEventCountAggregateInputType | true
    _min?: PaymentEventMinAggregateInputType
    _max?: PaymentEventMaxAggregateInputType
  }

  export type PaymentEventGroupByOutputType = {
    id: string
    paymentId: string | null
    orderId: string
    rawPayload: JsonValue
    receivedAt: Date
    signatureOk: boolean | null
    _count: PaymentEventCountAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  type GetPaymentEventGroupByPayload<T extends PaymentEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
        }
      >
    >


  export type PaymentEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    orderId?: boolean
    rawPayload?: boolean
    receivedAt?: boolean
    signatureOk?: boolean
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    orderId?: boolean
    rawPayload?: boolean
    receivedAt?: boolean
    signatureOk?: boolean
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    orderId?: boolean
    rawPayload?: boolean
    receivedAt?: boolean
    signatureOk?: boolean
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectScalar = {
    id?: boolean
    paymentId?: boolean
    orderId?: boolean
    rawPayload?: boolean
    receivedAt?: boolean
    signatureOk?: boolean
  }

  export type PaymentEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "paymentId" | "orderId" | "rawPayload" | "receivedAt" | "signatureOk", ExtArgs["result"]["paymentEvent"]>
  export type PaymentEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type PaymentEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type PaymentEventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentEvent$paymentArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $PaymentEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentEvent"
    objects: {
      payment: Prisma.$PaymentPayload<ExtArgs> | null
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentId: string | null
      orderId: string
      rawPayload: Prisma.JsonValue
      receivedAt: Date
      signatureOk: boolean | null
    }, ExtArgs["result"]["paymentEvent"]>
    composites: {}
  }

  type PaymentEventGetPayload<S extends boolean | null | undefined | PaymentEventDefaultArgs> = $Result.GetResult<Prisma.$PaymentEventPayload, S>

  type PaymentEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentEventCountAggregateInputType | true
    }

  export interface PaymentEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentEvent'], meta: { name: 'PaymentEvent' } }
    /**
     * Find zero or one PaymentEvent that matches the filter.
     * @param {PaymentEventFindUniqueArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentEventFindUniqueArgs>(args: SelectSubset<T, PaymentEventFindUniqueArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentEventFindUniqueOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentEventFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentEventFindFirstArgs>(args?: SelectSubset<T, PaymentEventFindFirstArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentEventFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany()
     * 
     * // Get first 10 PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentEventFindManyArgs>(args?: SelectSubset<T, PaymentEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentEvent.
     * @param {PaymentEventCreateArgs} args - Arguments to create a PaymentEvent.
     * @example
     * // Create one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.create({
     *   data: {
     *     // ... data to create a PaymentEvent
     *   }
     * })
     * 
     */
    create<T extends PaymentEventCreateArgs>(args: SelectSubset<T, PaymentEventCreateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentEvents.
     * @param {PaymentEventCreateManyArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentEventCreateManyArgs>(args?: SelectSubset<T, PaymentEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentEvents and returns the data saved in the database.
     * @param {PaymentEventCreateManyAndReturnArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentEvents and only return the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentEventCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentEvent.
     * @param {PaymentEventDeleteArgs} args - Arguments to delete one PaymentEvent.
     * @example
     * // Delete one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.delete({
     *   where: {
     *     // ... filter to delete one PaymentEvent
     *   }
     * })
     * 
     */
    delete<T extends PaymentEventDeleteArgs>(args: SelectSubset<T, PaymentEventDeleteArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentEvent.
     * @param {PaymentEventUpdateArgs} args - Arguments to update one PaymentEvent.
     * @example
     * // Update one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentEventUpdateArgs>(args: SelectSubset<T, PaymentEventUpdateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentEvents.
     * @param {PaymentEventDeleteManyArgs} args - Arguments to filter PaymentEvents to delete.
     * @example
     * // Delete a few PaymentEvents
     * const { count } = await prisma.paymentEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentEventDeleteManyArgs>(args?: SelectSubset<T, PaymentEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentEventUpdateManyArgs>(args: SelectSubset<T, PaymentEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentEvents and returns the data updated in the database.
     * @param {PaymentEventUpdateManyAndReturnArgs} args - Arguments to update many PaymentEvents.
     * @example
     * // Update many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentEvents and only return the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentEventUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentEvent.
     * @param {PaymentEventUpsertArgs} args - Arguments to update or create a PaymentEvent.
     * @example
     * // Update or create a PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.upsert({
     *   create: {
     *     // ... data to create a PaymentEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentEvent we want to update
     *   }
     * })
     */
    upsert<T extends PaymentEventUpsertArgs>(args: SelectSubset<T, PaymentEventUpsertArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventCountArgs} args - Arguments to filter PaymentEvents to count.
     * @example
     * // Count the number of PaymentEvents
     * const count = await prisma.paymentEvent.count({
     *   where: {
     *     // ... the filter for the PaymentEvents we want to count
     *   }
     * })
    **/
    count<T extends PaymentEventCountArgs>(
      args?: Subset<T, PaymentEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentEventAggregateArgs>(args: Subset<T, PaymentEventAggregateArgs>): Prisma.PrismaPromise<GetPaymentEventAggregateType<T>>

    /**
     * Group by PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentEventGroupByArgs['orderBy'] }
        : { orderBy?: PaymentEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentEvent model
   */
  readonly fields: PaymentEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payment<T extends PaymentEvent$paymentArgs<ExtArgs> = {}>(args?: Subset<T, PaymentEvent$paymentArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentEvent model
   */
  interface PaymentEventFieldRefs {
    readonly id: FieldRef<"PaymentEvent", 'String'>
    readonly paymentId: FieldRef<"PaymentEvent", 'String'>
    readonly orderId: FieldRef<"PaymentEvent", 'String'>
    readonly rawPayload: FieldRef<"PaymentEvent", 'Json'>
    readonly receivedAt: FieldRef<"PaymentEvent", 'DateTime'>
    readonly signatureOk: FieldRef<"PaymentEvent", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PaymentEvent findUnique
   */
  export type PaymentEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findUniqueOrThrow
   */
  export type PaymentEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findFirst
   */
  export type PaymentEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findFirstOrThrow
   */
  export type PaymentEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findMany
   */
  export type PaymentEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter, which PaymentEvents to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent create
   */
  export type PaymentEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentEvent.
     */
    data: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
  }

  /**
   * PaymentEvent createMany
   */
  export type PaymentEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentEvent createManyAndReturn
   */
  export type PaymentEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentEvent update
   */
  export type PaymentEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentEvent.
     */
    data: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
    /**
     * Choose, which PaymentEvent to update.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent updateMany
   */
  export type PaymentEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentEvents.
     */
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyInput>
    /**
     * Filter which PaymentEvents to update
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to update.
     */
    limit?: number
  }

  /**
   * PaymentEvent updateManyAndReturn
   */
  export type PaymentEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data used to update PaymentEvents.
     */
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyInput>
    /**
     * Filter which PaymentEvents to update
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentEvent upsert
   */
  export type PaymentEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentEvent to update in case it exists.
     */
    where: PaymentEventWhereUniqueInput
    /**
     * In case the PaymentEvent found by the `where` argument doesn't exist, create a new PaymentEvent with this data.
     */
    create: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
    /**
     * In case the PaymentEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
  }

  /**
   * PaymentEvent delete
   */
  export type PaymentEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
    /**
     * Filter which PaymentEvent to delete.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent deleteMany
   */
  export type PaymentEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvents to delete
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to delete.
     */
    limit?: number
  }

  /**
   * PaymentEvent.payment
   */
  export type PaymentEvent$paymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
  }

  /**
   * PaymentEvent without action
   */
  export type PaymentEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentEventInclude<ExtArgs> | null
  }


  /**
   * Model Commission
   */

  export type AggregateCommission = {
    _count: CommissionCountAggregateOutputType | null
    _avg: CommissionAvgAggregateOutputType | null
    _sum: CommissionSumAggregateOutputType | null
    _min: CommissionMinAggregateOutputType | null
    _max: CommissionMaxAggregateOutputType | null
  }

  export type CommissionAvgAggregateOutputType = {
    finalPriceCents: number | null
    rateBp: number | null
    minCents: number | null
    maxCents: number | null
    computedCents: number | null
  }

  export type CommissionSumAggregateOutputType = {
    finalPriceCents: number | null
    rateBp: number | null
    minCents: number | null
    maxCents: number | null
    computedCents: number | null
  }

  export type CommissionMinAggregateOutputType = {
    orderId: string | null
    finalPriceCents: number | null
    rateBp: number | null
    minCents: number | null
    maxCents: number | null
    computedCents: number | null
    computedAt: Date | null
  }

  export type CommissionMaxAggregateOutputType = {
    orderId: string | null
    finalPriceCents: number | null
    rateBp: number | null
    minCents: number | null
    maxCents: number | null
    computedCents: number | null
    computedAt: Date | null
  }

  export type CommissionCountAggregateOutputType = {
    orderId: number
    finalPriceCents: number
    rateBp: number
    minCents: number
    maxCents: number
    computedCents: number
    computedAt: number
    _all: number
  }


  export type CommissionAvgAggregateInputType = {
    finalPriceCents?: true
    rateBp?: true
    minCents?: true
    maxCents?: true
    computedCents?: true
  }

  export type CommissionSumAggregateInputType = {
    finalPriceCents?: true
    rateBp?: true
    minCents?: true
    maxCents?: true
    computedCents?: true
  }

  export type CommissionMinAggregateInputType = {
    orderId?: true
    finalPriceCents?: true
    rateBp?: true
    minCents?: true
    maxCents?: true
    computedCents?: true
    computedAt?: true
  }

  export type CommissionMaxAggregateInputType = {
    orderId?: true
    finalPriceCents?: true
    rateBp?: true
    minCents?: true
    maxCents?: true
    computedCents?: true
    computedAt?: true
  }

  export type CommissionCountAggregateInputType = {
    orderId?: true
    finalPriceCents?: true
    rateBp?: true
    minCents?: true
    maxCents?: true
    computedCents?: true
    computedAt?: true
    _all?: true
  }

  export type CommissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commission to aggregate.
     */
    where?: CommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commissions to fetch.
     */
    orderBy?: CommissionOrderByWithRelationInput | CommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Commissions
    **/
    _count?: true | CommissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommissionMaxAggregateInputType
  }

  export type GetCommissionAggregateType<T extends CommissionAggregateArgs> = {
        [P in keyof T & keyof AggregateCommission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommission[P]>
      : GetScalarType<T[P], AggregateCommission[P]>
  }




  export type CommissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommissionWhereInput
    orderBy?: CommissionOrderByWithAggregationInput | CommissionOrderByWithAggregationInput[]
    by: CommissionScalarFieldEnum[] | CommissionScalarFieldEnum
    having?: CommissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommissionCountAggregateInputType | true
    _avg?: CommissionAvgAggregateInputType
    _sum?: CommissionSumAggregateInputType
    _min?: CommissionMinAggregateInputType
    _max?: CommissionMaxAggregateInputType
  }

  export type CommissionGroupByOutputType = {
    orderId: string
    finalPriceCents: number
    rateBp: number
    minCents: number
    maxCents: number
    computedCents: number
    computedAt: Date
    _count: CommissionCountAggregateOutputType | null
    _avg: CommissionAvgAggregateOutputType | null
    _sum: CommissionSumAggregateOutputType | null
    _min: CommissionMinAggregateOutputType | null
    _max: CommissionMaxAggregateOutputType | null
  }

  type GetCommissionGroupByPayload<T extends CommissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommissionGroupByOutputType[P]>
            : GetScalarType<T[P], CommissionGroupByOutputType[P]>
        }
      >
    >


  export type CommissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    finalPriceCents?: boolean
    rateBp?: boolean
    minCents?: boolean
    maxCents?: boolean
    computedCents?: boolean
    computedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commission"]>

  export type CommissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    finalPriceCents?: boolean
    rateBp?: boolean
    minCents?: boolean
    maxCents?: boolean
    computedCents?: boolean
    computedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commission"]>

  export type CommissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    orderId?: boolean
    finalPriceCents?: boolean
    rateBp?: boolean
    minCents?: boolean
    maxCents?: boolean
    computedCents?: boolean
    computedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commission"]>

  export type CommissionSelectScalar = {
    orderId?: boolean
    finalPriceCents?: boolean
    rateBp?: boolean
    minCents?: boolean
    maxCents?: boolean
    computedCents?: boolean
    computedAt?: boolean
  }

  export type CommissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"orderId" | "finalPriceCents" | "rateBp" | "minCents" | "maxCents" | "computedCents" | "computedAt", ExtArgs["result"]["commission"]>
  export type CommissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type CommissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type CommissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $CommissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Commission"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      orderId: string
      finalPriceCents: number
      rateBp: number
      minCents: number
      maxCents: number
      computedCents: number
      computedAt: Date
    }, ExtArgs["result"]["commission"]>
    composites: {}
  }

  type CommissionGetPayload<S extends boolean | null | undefined | CommissionDefaultArgs> = $Result.GetResult<Prisma.$CommissionPayload, S>

  type CommissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommissionCountAggregateInputType | true
    }

  export interface CommissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Commission'], meta: { name: 'Commission' } }
    /**
     * Find zero or one Commission that matches the filter.
     * @param {CommissionFindUniqueArgs} args - Arguments to find a Commission
     * @example
     * // Get one Commission
     * const commission = await prisma.commission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommissionFindUniqueArgs>(args: SelectSubset<T, CommissionFindUniqueArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Commission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommissionFindUniqueOrThrowArgs} args - Arguments to find a Commission
     * @example
     * // Get one Commission
     * const commission = await prisma.commission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommissionFindUniqueOrThrowArgs>(args: SelectSubset<T, CommissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Commission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionFindFirstArgs} args - Arguments to find a Commission
     * @example
     * // Get one Commission
     * const commission = await prisma.commission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommissionFindFirstArgs>(args?: SelectSubset<T, CommissionFindFirstArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Commission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionFindFirstOrThrowArgs} args - Arguments to find a Commission
     * @example
     * // Get one Commission
     * const commission = await prisma.commission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommissionFindFirstOrThrowArgs>(args?: SelectSubset<T, CommissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Commissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Commissions
     * const commissions = await prisma.commission.findMany()
     * 
     * // Get first 10 Commissions
     * const commissions = await prisma.commission.findMany({ take: 10 })
     * 
     * // Only select the `orderId`
     * const commissionWithOrderIdOnly = await prisma.commission.findMany({ select: { orderId: true } })
     * 
     */
    findMany<T extends CommissionFindManyArgs>(args?: SelectSubset<T, CommissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Commission.
     * @param {CommissionCreateArgs} args - Arguments to create a Commission.
     * @example
     * // Create one Commission
     * const Commission = await prisma.commission.create({
     *   data: {
     *     // ... data to create a Commission
     *   }
     * })
     * 
     */
    create<T extends CommissionCreateArgs>(args: SelectSubset<T, CommissionCreateArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Commissions.
     * @param {CommissionCreateManyArgs} args - Arguments to create many Commissions.
     * @example
     * // Create many Commissions
     * const commission = await prisma.commission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommissionCreateManyArgs>(args?: SelectSubset<T, CommissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Commissions and returns the data saved in the database.
     * @param {CommissionCreateManyAndReturnArgs} args - Arguments to create many Commissions.
     * @example
     * // Create many Commissions
     * const commission = await prisma.commission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Commissions and only return the `orderId`
     * const commissionWithOrderIdOnly = await prisma.commission.createManyAndReturn({
     *   select: { orderId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommissionCreateManyAndReturnArgs>(args?: SelectSubset<T, CommissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Commission.
     * @param {CommissionDeleteArgs} args - Arguments to delete one Commission.
     * @example
     * // Delete one Commission
     * const Commission = await prisma.commission.delete({
     *   where: {
     *     // ... filter to delete one Commission
     *   }
     * })
     * 
     */
    delete<T extends CommissionDeleteArgs>(args: SelectSubset<T, CommissionDeleteArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Commission.
     * @param {CommissionUpdateArgs} args - Arguments to update one Commission.
     * @example
     * // Update one Commission
     * const commission = await prisma.commission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommissionUpdateArgs>(args: SelectSubset<T, CommissionUpdateArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Commissions.
     * @param {CommissionDeleteManyArgs} args - Arguments to filter Commissions to delete.
     * @example
     * // Delete a few Commissions
     * const { count } = await prisma.commission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommissionDeleteManyArgs>(args?: SelectSubset<T, CommissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Commissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Commissions
     * const commission = await prisma.commission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommissionUpdateManyArgs>(args: SelectSubset<T, CommissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Commissions and returns the data updated in the database.
     * @param {CommissionUpdateManyAndReturnArgs} args - Arguments to update many Commissions.
     * @example
     * // Update many Commissions
     * const commission = await prisma.commission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Commissions and only return the `orderId`
     * const commissionWithOrderIdOnly = await prisma.commission.updateManyAndReturn({
     *   select: { orderId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommissionUpdateManyAndReturnArgs>(args: SelectSubset<T, CommissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Commission.
     * @param {CommissionUpsertArgs} args - Arguments to update or create a Commission.
     * @example
     * // Update or create a Commission
     * const commission = await prisma.commission.upsert({
     *   create: {
     *     // ... data to create a Commission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Commission we want to update
     *   }
     * })
     */
    upsert<T extends CommissionUpsertArgs>(args: SelectSubset<T, CommissionUpsertArgs<ExtArgs>>): Prisma__CommissionClient<$Result.GetResult<Prisma.$CommissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Commissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionCountArgs} args - Arguments to filter Commissions to count.
     * @example
     * // Count the number of Commissions
     * const count = await prisma.commission.count({
     *   where: {
     *     // ... the filter for the Commissions we want to count
     *   }
     * })
    **/
    count<T extends CommissionCountArgs>(
      args?: Subset<T, CommissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Commission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommissionAggregateArgs>(args: Subset<T, CommissionAggregateArgs>): Prisma.PrismaPromise<GetCommissionAggregateType<T>>

    /**
     * Group by Commission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommissionGroupByArgs['orderBy'] }
        : { orderBy?: CommissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Commission model
   */
  readonly fields: CommissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Commission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Commission model
   */
  interface CommissionFieldRefs {
    readonly orderId: FieldRef<"Commission", 'String'>
    readonly finalPriceCents: FieldRef<"Commission", 'Int'>
    readonly rateBp: FieldRef<"Commission", 'Int'>
    readonly minCents: FieldRef<"Commission", 'Int'>
    readonly maxCents: FieldRef<"Commission", 'Int'>
    readonly computedCents: FieldRef<"Commission", 'Int'>
    readonly computedAt: FieldRef<"Commission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Commission findUnique
   */
  export type CommissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter, which Commission to fetch.
     */
    where: CommissionWhereUniqueInput
  }

  /**
   * Commission findUniqueOrThrow
   */
  export type CommissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter, which Commission to fetch.
     */
    where: CommissionWhereUniqueInput
  }

  /**
   * Commission findFirst
   */
  export type CommissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter, which Commission to fetch.
     */
    where?: CommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commissions to fetch.
     */
    orderBy?: CommissionOrderByWithRelationInput | CommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commissions.
     */
    cursor?: CommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commissions.
     */
    distinct?: CommissionScalarFieldEnum | CommissionScalarFieldEnum[]
  }

  /**
   * Commission findFirstOrThrow
   */
  export type CommissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter, which Commission to fetch.
     */
    where?: CommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commissions to fetch.
     */
    orderBy?: CommissionOrderByWithRelationInput | CommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commissions.
     */
    cursor?: CommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commissions.
     */
    distinct?: CommissionScalarFieldEnum | CommissionScalarFieldEnum[]
  }

  /**
   * Commission findMany
   */
  export type CommissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter, which Commissions to fetch.
     */
    where?: CommissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commissions to fetch.
     */
    orderBy?: CommissionOrderByWithRelationInput | CommissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Commissions.
     */
    cursor?: CommissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commissions.
     */
    skip?: number
    distinct?: CommissionScalarFieldEnum | CommissionScalarFieldEnum[]
  }

  /**
   * Commission create
   */
  export type CommissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Commission.
     */
    data: XOR<CommissionCreateInput, CommissionUncheckedCreateInput>
  }

  /**
   * Commission createMany
   */
  export type CommissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Commissions.
     */
    data: CommissionCreateManyInput | CommissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commission createManyAndReturn
   */
  export type CommissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * The data used to create many Commissions.
     */
    data: CommissionCreateManyInput | CommissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Commission update
   */
  export type CommissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Commission.
     */
    data: XOR<CommissionUpdateInput, CommissionUncheckedUpdateInput>
    /**
     * Choose, which Commission to update.
     */
    where: CommissionWhereUniqueInput
  }

  /**
   * Commission updateMany
   */
  export type CommissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Commissions.
     */
    data: XOR<CommissionUpdateManyMutationInput, CommissionUncheckedUpdateManyInput>
    /**
     * Filter which Commissions to update
     */
    where?: CommissionWhereInput
    /**
     * Limit how many Commissions to update.
     */
    limit?: number
  }

  /**
   * Commission updateManyAndReturn
   */
  export type CommissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * The data used to update Commissions.
     */
    data: XOR<CommissionUpdateManyMutationInput, CommissionUncheckedUpdateManyInput>
    /**
     * Filter which Commissions to update
     */
    where?: CommissionWhereInput
    /**
     * Limit how many Commissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Commission upsert
   */
  export type CommissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Commission to update in case it exists.
     */
    where: CommissionWhereUniqueInput
    /**
     * In case the Commission found by the `where` argument doesn't exist, create a new Commission with this data.
     */
    create: XOR<CommissionCreateInput, CommissionUncheckedCreateInput>
    /**
     * In case the Commission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommissionUpdateInput, CommissionUncheckedUpdateInput>
  }

  /**
   * Commission delete
   */
  export type CommissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
    /**
     * Filter which Commission to delete.
     */
    where: CommissionWhereUniqueInput
  }

  /**
   * Commission deleteMany
   */
  export type CommissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commissions to delete
     */
    where?: CommissionWhereInput
    /**
     * Limit how many Commissions to delete.
     */
    limit?: number
  }

  /**
   * Commission without action
   */
  export type CommissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commission
     */
    select?: CommissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Commission
     */
    omit?: CommissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommissionInclude<ExtArgs> | null
  }


  /**
   * Model ClientCredit
   */

  export type AggregateClientCredit = {
    _count: ClientCreditCountAggregateOutputType | null
    _avg: ClientCreditAvgAggregateOutputType | null
    _sum: ClientCreditSumAggregateOutputType | null
    _min: ClientCreditMinAggregateOutputType | null
    _max: ClientCreditMaxAggregateOutputType | null
  }

  export type ClientCreditAvgAggregateOutputType = {
    amountCents: number | null
    usedCents: number | null
  }

  export type ClientCreditSumAggregateOutputType = {
    amountCents: number | null
    usedCents: number | null
  }

  export type ClientCreditMinAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    amountCents: number | null
    expiresAt: Date | null
    usedCents: number | null
    createdAt: Date | null
  }

  export type ClientCreditMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    amountCents: number | null
    expiresAt: Date | null
    usedCents: number | null
    createdAt: Date | null
  }

  export type ClientCreditCountAggregateOutputType = {
    id: number
    userId: number
    orderId: number
    amountCents: number
    expiresAt: number
    usedCents: number
    createdAt: number
    _all: number
  }


  export type ClientCreditAvgAggregateInputType = {
    amountCents?: true
    usedCents?: true
  }

  export type ClientCreditSumAggregateInputType = {
    amountCents?: true
    usedCents?: true
  }

  export type ClientCreditMinAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    amountCents?: true
    expiresAt?: true
    usedCents?: true
    createdAt?: true
  }

  export type ClientCreditMaxAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    amountCents?: true
    expiresAt?: true
    usedCents?: true
    createdAt?: true
  }

  export type ClientCreditCountAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    amountCents?: true
    expiresAt?: true
    usedCents?: true
    createdAt?: true
    _all?: true
  }

  export type ClientCreditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientCredit to aggregate.
     */
    where?: ClientCreditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCredits to fetch.
     */
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientCreditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCredits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCredits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientCredits
    **/
    _count?: true | ClientCreditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientCreditAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientCreditSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientCreditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientCreditMaxAggregateInputType
  }

  export type GetClientCreditAggregateType<T extends ClientCreditAggregateArgs> = {
        [P in keyof T & keyof AggregateClientCredit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientCredit[P]>
      : GetScalarType<T[P], AggregateClientCredit[P]>
  }




  export type ClientCreditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientCreditWhereInput
    orderBy?: ClientCreditOrderByWithAggregationInput | ClientCreditOrderByWithAggregationInput[]
    by: ClientCreditScalarFieldEnum[] | ClientCreditScalarFieldEnum
    having?: ClientCreditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCreditCountAggregateInputType | true
    _avg?: ClientCreditAvgAggregateInputType
    _sum?: ClientCreditSumAggregateInputType
    _min?: ClientCreditMinAggregateInputType
    _max?: ClientCreditMaxAggregateInputType
  }

  export type ClientCreditGroupByOutputType = {
    id: string
    userId: string
    orderId: string
    amountCents: number
    expiresAt: Date
    usedCents: number
    createdAt: Date
    _count: ClientCreditCountAggregateOutputType | null
    _avg: ClientCreditAvgAggregateOutputType | null
    _sum: ClientCreditSumAggregateOutputType | null
    _min: ClientCreditMinAggregateOutputType | null
    _max: ClientCreditMaxAggregateOutputType | null
  }

  type GetClientCreditGroupByPayload<T extends ClientCreditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientCreditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientCreditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientCreditGroupByOutputType[P]>
            : GetScalarType<T[P], ClientCreditGroupByOutputType[P]>
        }
      >
    >


  export type ClientCreditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    amountCents?: boolean
    expiresAt?: boolean
    usedCents?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCredit"]>

  export type ClientCreditSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    amountCents?: boolean
    expiresAt?: boolean
    usedCents?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCredit"]>

  export type ClientCreditSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    amountCents?: boolean
    expiresAt?: boolean
    usedCents?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientCredit"]>

  export type ClientCreditSelectScalar = {
    id?: boolean
    userId?: boolean
    orderId?: boolean
    amountCents?: boolean
    expiresAt?: boolean
    usedCents?: boolean
    createdAt?: boolean
  }

  export type ClientCreditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "orderId" | "amountCents" | "expiresAt" | "usedCents" | "createdAt", ExtArgs["result"]["clientCredit"]>
  export type ClientCreditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type ClientCreditIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type ClientCreditIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $ClientCreditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientCredit"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      orderId: string
      amountCents: number
      expiresAt: Date
      usedCents: number
      createdAt: Date
    }, ExtArgs["result"]["clientCredit"]>
    composites: {}
  }

  type ClientCreditGetPayload<S extends boolean | null | undefined | ClientCreditDefaultArgs> = $Result.GetResult<Prisma.$ClientCreditPayload, S>

  type ClientCreditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClientCreditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientCreditCountAggregateInputType | true
    }

  export interface ClientCreditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientCredit'], meta: { name: 'ClientCredit' } }
    /**
     * Find zero or one ClientCredit that matches the filter.
     * @param {ClientCreditFindUniqueArgs} args - Arguments to find a ClientCredit
     * @example
     * // Get one ClientCredit
     * const clientCredit = await prisma.clientCredit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientCreditFindUniqueArgs>(args: SelectSubset<T, ClientCreditFindUniqueArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClientCredit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClientCreditFindUniqueOrThrowArgs} args - Arguments to find a ClientCredit
     * @example
     * // Get one ClientCredit
     * const clientCredit = await prisma.clientCredit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientCreditFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientCreditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientCredit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditFindFirstArgs} args - Arguments to find a ClientCredit
     * @example
     * // Get one ClientCredit
     * const clientCredit = await prisma.clientCredit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientCreditFindFirstArgs>(args?: SelectSubset<T, ClientCreditFindFirstArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClientCredit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditFindFirstOrThrowArgs} args - Arguments to find a ClientCredit
     * @example
     * // Get one ClientCredit
     * const clientCredit = await prisma.clientCredit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientCreditFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientCreditFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClientCredits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientCredits
     * const clientCredits = await prisma.clientCredit.findMany()
     * 
     * // Get first 10 ClientCredits
     * const clientCredits = await prisma.clientCredit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientCreditWithIdOnly = await prisma.clientCredit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientCreditFindManyArgs>(args?: SelectSubset<T, ClientCreditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClientCredit.
     * @param {ClientCreditCreateArgs} args - Arguments to create a ClientCredit.
     * @example
     * // Create one ClientCredit
     * const ClientCredit = await prisma.clientCredit.create({
     *   data: {
     *     // ... data to create a ClientCredit
     *   }
     * })
     * 
     */
    create<T extends ClientCreditCreateArgs>(args: SelectSubset<T, ClientCreditCreateArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClientCredits.
     * @param {ClientCreditCreateManyArgs} args - Arguments to create many ClientCredits.
     * @example
     * // Create many ClientCredits
     * const clientCredit = await prisma.clientCredit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreditCreateManyArgs>(args?: SelectSubset<T, ClientCreditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientCredits and returns the data saved in the database.
     * @param {ClientCreditCreateManyAndReturnArgs} args - Arguments to create many ClientCredits.
     * @example
     * // Create many ClientCredits
     * const clientCredit = await prisma.clientCredit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientCredits and only return the `id`
     * const clientCreditWithIdOnly = await prisma.clientCredit.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreditCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClientCredit.
     * @param {ClientCreditDeleteArgs} args - Arguments to delete one ClientCredit.
     * @example
     * // Delete one ClientCredit
     * const ClientCredit = await prisma.clientCredit.delete({
     *   where: {
     *     // ... filter to delete one ClientCredit
     *   }
     * })
     * 
     */
    delete<T extends ClientCreditDeleteArgs>(args: SelectSubset<T, ClientCreditDeleteArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClientCredit.
     * @param {ClientCreditUpdateArgs} args - Arguments to update one ClientCredit.
     * @example
     * // Update one ClientCredit
     * const clientCredit = await prisma.clientCredit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientCreditUpdateArgs>(args: SelectSubset<T, ClientCreditUpdateArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClientCredits.
     * @param {ClientCreditDeleteManyArgs} args - Arguments to filter ClientCredits to delete.
     * @example
     * // Delete a few ClientCredits
     * const { count } = await prisma.clientCredit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientCreditDeleteManyArgs>(args?: SelectSubset<T, ClientCreditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientCredits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientCredits
     * const clientCredit = await prisma.clientCredit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientCreditUpdateManyArgs>(args: SelectSubset<T, ClientCreditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientCredits and returns the data updated in the database.
     * @param {ClientCreditUpdateManyAndReturnArgs} args - Arguments to update many ClientCredits.
     * @example
     * // Update many ClientCredits
     * const clientCredit = await prisma.clientCredit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClientCredits and only return the `id`
     * const clientCreditWithIdOnly = await prisma.clientCredit.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClientCreditUpdateManyAndReturnArgs>(args: SelectSubset<T, ClientCreditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClientCredit.
     * @param {ClientCreditUpsertArgs} args - Arguments to update or create a ClientCredit.
     * @example
     * // Update or create a ClientCredit
     * const clientCredit = await prisma.clientCredit.upsert({
     *   create: {
     *     // ... data to create a ClientCredit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientCredit we want to update
     *   }
     * })
     */
    upsert<T extends ClientCreditUpsertArgs>(args: SelectSubset<T, ClientCreditUpsertArgs<ExtArgs>>): Prisma__ClientCreditClient<$Result.GetResult<Prisma.$ClientCreditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClientCredits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditCountArgs} args - Arguments to filter ClientCredits to count.
     * @example
     * // Count the number of ClientCredits
     * const count = await prisma.clientCredit.count({
     *   where: {
     *     // ... the filter for the ClientCredits we want to count
     *   }
     * })
    **/
    count<T extends ClientCreditCountArgs>(
      args?: Subset<T, ClientCreditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCreditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientCredit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientCreditAggregateArgs>(args: Subset<T, ClientCreditAggregateArgs>): Prisma.PrismaPromise<GetClientCreditAggregateType<T>>

    /**
     * Group by ClientCredit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCreditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientCreditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientCreditGroupByArgs['orderBy'] }
        : { orderBy?: ClientCreditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientCreditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientCreditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientCredit model
   */
  readonly fields: ClientCreditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientCredit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientCreditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientCredit model
   */
  interface ClientCreditFieldRefs {
    readonly id: FieldRef<"ClientCredit", 'String'>
    readonly userId: FieldRef<"ClientCredit", 'String'>
    readonly orderId: FieldRef<"ClientCredit", 'String'>
    readonly amountCents: FieldRef<"ClientCredit", 'Int'>
    readonly expiresAt: FieldRef<"ClientCredit", 'DateTime'>
    readonly usedCents: FieldRef<"ClientCredit", 'Int'>
    readonly createdAt: FieldRef<"ClientCredit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientCredit findUnique
   */
  export type ClientCreditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter, which ClientCredit to fetch.
     */
    where: ClientCreditWhereUniqueInput
  }

  /**
   * ClientCredit findUniqueOrThrow
   */
  export type ClientCreditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter, which ClientCredit to fetch.
     */
    where: ClientCreditWhereUniqueInput
  }

  /**
   * ClientCredit findFirst
   */
  export type ClientCreditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter, which ClientCredit to fetch.
     */
    where?: ClientCreditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCredits to fetch.
     */
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientCredits.
     */
    cursor?: ClientCreditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCredits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCredits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientCredits.
     */
    distinct?: ClientCreditScalarFieldEnum | ClientCreditScalarFieldEnum[]
  }

  /**
   * ClientCredit findFirstOrThrow
   */
  export type ClientCreditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter, which ClientCredit to fetch.
     */
    where?: ClientCreditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCredits to fetch.
     */
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientCredits.
     */
    cursor?: ClientCreditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCredits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCredits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientCredits.
     */
    distinct?: ClientCreditScalarFieldEnum | ClientCreditScalarFieldEnum[]
  }

  /**
   * ClientCredit findMany
   */
  export type ClientCreditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter, which ClientCredits to fetch.
     */
    where?: ClientCreditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientCredits to fetch.
     */
    orderBy?: ClientCreditOrderByWithRelationInput | ClientCreditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientCredits.
     */
    cursor?: ClientCreditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientCredits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientCredits.
     */
    skip?: number
    distinct?: ClientCreditScalarFieldEnum | ClientCreditScalarFieldEnum[]
  }

  /**
   * ClientCredit create
   */
  export type ClientCreditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientCredit.
     */
    data: XOR<ClientCreditCreateInput, ClientCreditUncheckedCreateInput>
  }

  /**
   * ClientCredit createMany
   */
  export type ClientCreditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientCredits.
     */
    data: ClientCreditCreateManyInput | ClientCreditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientCredit createManyAndReturn
   */
  export type ClientCreditCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * The data used to create many ClientCredits.
     */
    data: ClientCreditCreateManyInput | ClientCreditCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientCredit update
   */
  export type ClientCreditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientCredit.
     */
    data: XOR<ClientCreditUpdateInput, ClientCreditUncheckedUpdateInput>
    /**
     * Choose, which ClientCredit to update.
     */
    where: ClientCreditWhereUniqueInput
  }

  /**
   * ClientCredit updateMany
   */
  export type ClientCreditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientCredits.
     */
    data: XOR<ClientCreditUpdateManyMutationInput, ClientCreditUncheckedUpdateManyInput>
    /**
     * Filter which ClientCredits to update
     */
    where?: ClientCreditWhereInput
    /**
     * Limit how many ClientCredits to update.
     */
    limit?: number
  }

  /**
   * ClientCredit updateManyAndReturn
   */
  export type ClientCreditUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * The data used to update ClientCredits.
     */
    data: XOR<ClientCreditUpdateManyMutationInput, ClientCreditUncheckedUpdateManyInput>
    /**
     * Filter which ClientCredits to update
     */
    where?: ClientCreditWhereInput
    /**
     * Limit how many ClientCredits to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientCredit upsert
   */
  export type ClientCreditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientCredit to update in case it exists.
     */
    where: ClientCreditWhereUniqueInput
    /**
     * In case the ClientCredit found by the `where` argument doesn't exist, create a new ClientCredit with this data.
     */
    create: XOR<ClientCreditCreateInput, ClientCreditUncheckedCreateInput>
    /**
     * In case the ClientCredit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientCreditUpdateInput, ClientCreditUncheckedUpdateInput>
  }

  /**
   * ClientCredit delete
   */
  export type ClientCreditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
    /**
     * Filter which ClientCredit to delete.
     */
    where: ClientCreditWhereUniqueInput
  }

  /**
   * ClientCredit deleteMany
   */
  export type ClientCreditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientCredits to delete
     */
    where?: ClientCreditWhereInput
    /**
     * Limit how many ClientCredits to delete.
     */
    limit?: number
  }

  /**
   * ClientCredit without action
   */
  export type ClientCreditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCredit
     */
    select?: ClientCreditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClientCredit
     */
    omit?: ClientCreditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientCreditInclude<ExtArgs> | null
  }


  /**
   * Model ProviderPayout
   */

  export type AggregateProviderPayout = {
    _count: ProviderPayoutCountAggregateOutputType | null
    _avg: ProviderPayoutAvgAggregateOutputType | null
    _sum: ProviderPayoutSumAggregateOutputType | null
    _min: ProviderPayoutMinAggregateOutputType | null
    _max: ProviderPayoutMaxAggregateOutputType | null
  }

  export type ProviderPayoutAvgAggregateOutputType = {
    grossCents: number | null
    commissionCents: number | null
    netCents: number | null
  }

  export type ProviderPayoutSumAggregateOutputType = {
    grossCents: number | null
    commissionCents: number | null
    netCents: number | null
  }

  export type ProviderPayoutMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    grossCents: number | null
    commissionCents: number | null
    netCents: number | null
    status: string | null
    paidAt: Date | null
  }

  export type ProviderPayoutMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    grossCents: number | null
    commissionCents: number | null
    netCents: number | null
    status: string | null
    paidAt: Date | null
  }

  export type ProviderPayoutCountAggregateOutputType = {
    id: number
    orderId: number
    providerId: number
    grossCents: number
    commissionCents: number
    netCents: number
    status: number
    paidAt: number
    _all: number
  }


  export type ProviderPayoutAvgAggregateInputType = {
    grossCents?: true
    commissionCents?: true
    netCents?: true
  }

  export type ProviderPayoutSumAggregateInputType = {
    grossCents?: true
    commissionCents?: true
    netCents?: true
  }

  export type ProviderPayoutMinAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    grossCents?: true
    commissionCents?: true
    netCents?: true
    status?: true
    paidAt?: true
  }

  export type ProviderPayoutMaxAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    grossCents?: true
    commissionCents?: true
    netCents?: true
    status?: true
    paidAt?: true
  }

  export type ProviderPayoutCountAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    grossCents?: true
    commissionCents?: true
    netCents?: true
    status?: true
    paidAt?: true
    _all?: true
  }

  export type ProviderPayoutAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderPayout to aggregate.
     */
    where?: ProviderPayoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderPayouts to fetch.
     */
    orderBy?: ProviderPayoutOrderByWithRelationInput | ProviderPayoutOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProviderPayoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderPayouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderPayouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProviderPayouts
    **/
    _count?: true | ProviderPayoutCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProviderPayoutAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProviderPayoutSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProviderPayoutMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProviderPayoutMaxAggregateInputType
  }

  export type GetProviderPayoutAggregateType<T extends ProviderPayoutAggregateArgs> = {
        [P in keyof T & keyof AggregateProviderPayout]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviderPayout[P]>
      : GetScalarType<T[P], AggregateProviderPayout[P]>
  }




  export type ProviderPayoutGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProviderPayoutWhereInput
    orderBy?: ProviderPayoutOrderByWithAggregationInput | ProviderPayoutOrderByWithAggregationInput[]
    by: ProviderPayoutScalarFieldEnum[] | ProviderPayoutScalarFieldEnum
    having?: ProviderPayoutScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProviderPayoutCountAggregateInputType | true
    _avg?: ProviderPayoutAvgAggregateInputType
    _sum?: ProviderPayoutSumAggregateInputType
    _min?: ProviderPayoutMinAggregateInputType
    _max?: ProviderPayoutMaxAggregateInputType
  }

  export type ProviderPayoutGroupByOutputType = {
    id: string
    orderId: string | null
    providerId: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt: Date | null
    _count: ProviderPayoutCountAggregateOutputType | null
    _avg: ProviderPayoutAvgAggregateOutputType | null
    _sum: ProviderPayoutSumAggregateOutputType | null
    _min: ProviderPayoutMinAggregateOutputType | null
    _max: ProviderPayoutMaxAggregateOutputType | null
  }

  type GetProviderPayoutGroupByPayload<T extends ProviderPayoutGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProviderPayoutGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProviderPayoutGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProviderPayoutGroupByOutputType[P]>
            : GetScalarType<T[P], ProviderPayoutGroupByOutputType[P]>
        }
      >
    >


  export type ProviderPayoutSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    grossCents?: boolean
    commissionCents?: boolean
    netCents?: boolean
    status?: boolean
    paidAt?: boolean
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerPayout"]>

  export type ProviderPayoutSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    grossCents?: boolean
    commissionCents?: boolean
    netCents?: boolean
    status?: boolean
    paidAt?: boolean
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerPayout"]>

  export type ProviderPayoutSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    grossCents?: boolean
    commissionCents?: boolean
    netCents?: boolean
    status?: boolean
    paidAt?: boolean
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providerPayout"]>

  export type ProviderPayoutSelectScalar = {
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    grossCents?: boolean
    commissionCents?: boolean
    netCents?: boolean
    status?: boolean
    paidAt?: boolean
  }

  export type ProviderPayoutOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "providerId" | "grossCents" | "commissionCents" | "netCents" | "status" | "paidAt", ExtArgs["result"]["providerPayout"]>
  export type ProviderPayoutInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderPayoutIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ProviderPayoutIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | ProviderPayout$orderArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProviderPayoutPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProviderPayout"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
      provider: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string | null
      providerId: string
      grossCents: number
      commissionCents: number
      netCents: number
      status: string
      paidAt: Date | null
    }, ExtArgs["result"]["providerPayout"]>
    composites: {}
  }

  type ProviderPayoutGetPayload<S extends boolean | null | undefined | ProviderPayoutDefaultArgs> = $Result.GetResult<Prisma.$ProviderPayoutPayload, S>

  type ProviderPayoutCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProviderPayoutFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProviderPayoutCountAggregateInputType | true
    }

  export interface ProviderPayoutDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProviderPayout'], meta: { name: 'ProviderPayout' } }
    /**
     * Find zero or one ProviderPayout that matches the filter.
     * @param {ProviderPayoutFindUniqueArgs} args - Arguments to find a ProviderPayout
     * @example
     * // Get one ProviderPayout
     * const providerPayout = await prisma.providerPayout.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProviderPayoutFindUniqueArgs>(args: SelectSubset<T, ProviderPayoutFindUniqueArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProviderPayout that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProviderPayoutFindUniqueOrThrowArgs} args - Arguments to find a ProviderPayout
     * @example
     * // Get one ProviderPayout
     * const providerPayout = await prisma.providerPayout.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProviderPayoutFindUniqueOrThrowArgs>(args: SelectSubset<T, ProviderPayoutFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderPayout that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutFindFirstArgs} args - Arguments to find a ProviderPayout
     * @example
     * // Get one ProviderPayout
     * const providerPayout = await prisma.providerPayout.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProviderPayoutFindFirstArgs>(args?: SelectSubset<T, ProviderPayoutFindFirstArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProviderPayout that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutFindFirstOrThrowArgs} args - Arguments to find a ProviderPayout
     * @example
     * // Get one ProviderPayout
     * const providerPayout = await prisma.providerPayout.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProviderPayoutFindFirstOrThrowArgs>(args?: SelectSubset<T, ProviderPayoutFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProviderPayouts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProviderPayouts
     * const providerPayouts = await prisma.providerPayout.findMany()
     * 
     * // Get first 10 ProviderPayouts
     * const providerPayouts = await prisma.providerPayout.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providerPayoutWithIdOnly = await prisma.providerPayout.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProviderPayoutFindManyArgs>(args?: SelectSubset<T, ProviderPayoutFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProviderPayout.
     * @param {ProviderPayoutCreateArgs} args - Arguments to create a ProviderPayout.
     * @example
     * // Create one ProviderPayout
     * const ProviderPayout = await prisma.providerPayout.create({
     *   data: {
     *     // ... data to create a ProviderPayout
     *   }
     * })
     * 
     */
    create<T extends ProviderPayoutCreateArgs>(args: SelectSubset<T, ProviderPayoutCreateArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProviderPayouts.
     * @param {ProviderPayoutCreateManyArgs} args - Arguments to create many ProviderPayouts.
     * @example
     * // Create many ProviderPayouts
     * const providerPayout = await prisma.providerPayout.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProviderPayoutCreateManyArgs>(args?: SelectSubset<T, ProviderPayoutCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProviderPayouts and returns the data saved in the database.
     * @param {ProviderPayoutCreateManyAndReturnArgs} args - Arguments to create many ProviderPayouts.
     * @example
     * // Create many ProviderPayouts
     * const providerPayout = await prisma.providerPayout.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProviderPayouts and only return the `id`
     * const providerPayoutWithIdOnly = await prisma.providerPayout.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProviderPayoutCreateManyAndReturnArgs>(args?: SelectSubset<T, ProviderPayoutCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProviderPayout.
     * @param {ProviderPayoutDeleteArgs} args - Arguments to delete one ProviderPayout.
     * @example
     * // Delete one ProviderPayout
     * const ProviderPayout = await prisma.providerPayout.delete({
     *   where: {
     *     // ... filter to delete one ProviderPayout
     *   }
     * })
     * 
     */
    delete<T extends ProviderPayoutDeleteArgs>(args: SelectSubset<T, ProviderPayoutDeleteArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProviderPayout.
     * @param {ProviderPayoutUpdateArgs} args - Arguments to update one ProviderPayout.
     * @example
     * // Update one ProviderPayout
     * const providerPayout = await prisma.providerPayout.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProviderPayoutUpdateArgs>(args: SelectSubset<T, ProviderPayoutUpdateArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProviderPayouts.
     * @param {ProviderPayoutDeleteManyArgs} args - Arguments to filter ProviderPayouts to delete.
     * @example
     * // Delete a few ProviderPayouts
     * const { count } = await prisma.providerPayout.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProviderPayoutDeleteManyArgs>(args?: SelectSubset<T, ProviderPayoutDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderPayouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProviderPayouts
     * const providerPayout = await prisma.providerPayout.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProviderPayoutUpdateManyArgs>(args: SelectSubset<T, ProviderPayoutUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProviderPayouts and returns the data updated in the database.
     * @param {ProviderPayoutUpdateManyAndReturnArgs} args - Arguments to update many ProviderPayouts.
     * @example
     * // Update many ProviderPayouts
     * const providerPayout = await prisma.providerPayout.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProviderPayouts and only return the `id`
     * const providerPayoutWithIdOnly = await prisma.providerPayout.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProviderPayoutUpdateManyAndReturnArgs>(args: SelectSubset<T, ProviderPayoutUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProviderPayout.
     * @param {ProviderPayoutUpsertArgs} args - Arguments to update or create a ProviderPayout.
     * @example
     * // Update or create a ProviderPayout
     * const providerPayout = await prisma.providerPayout.upsert({
     *   create: {
     *     // ... data to create a ProviderPayout
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProviderPayout we want to update
     *   }
     * })
     */
    upsert<T extends ProviderPayoutUpsertArgs>(args: SelectSubset<T, ProviderPayoutUpsertArgs<ExtArgs>>): Prisma__ProviderPayoutClient<$Result.GetResult<Prisma.$ProviderPayoutPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProviderPayouts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutCountArgs} args - Arguments to filter ProviderPayouts to count.
     * @example
     * // Count the number of ProviderPayouts
     * const count = await prisma.providerPayout.count({
     *   where: {
     *     // ... the filter for the ProviderPayouts we want to count
     *   }
     * })
    **/
    count<T extends ProviderPayoutCountArgs>(
      args?: Subset<T, ProviderPayoutCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProviderPayoutCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProviderPayout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProviderPayoutAggregateArgs>(args: Subset<T, ProviderPayoutAggregateArgs>): Prisma.PrismaPromise<GetProviderPayoutAggregateType<T>>

    /**
     * Group by ProviderPayout.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProviderPayoutGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProviderPayoutGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProviderPayoutGroupByArgs['orderBy'] }
        : { orderBy?: ProviderPayoutGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProviderPayoutGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProviderPayoutGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProviderPayout model
   */
  readonly fields: ProviderPayoutFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProviderPayout.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProviderPayoutClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends ProviderPayout$orderArgs<ExtArgs> = {}>(args?: Subset<T, ProviderPayout$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProviderPayout model
   */
  interface ProviderPayoutFieldRefs {
    readonly id: FieldRef<"ProviderPayout", 'String'>
    readonly orderId: FieldRef<"ProviderPayout", 'String'>
    readonly providerId: FieldRef<"ProviderPayout", 'String'>
    readonly grossCents: FieldRef<"ProviderPayout", 'Int'>
    readonly commissionCents: FieldRef<"ProviderPayout", 'Int'>
    readonly netCents: FieldRef<"ProviderPayout", 'Int'>
    readonly status: FieldRef<"ProviderPayout", 'String'>
    readonly paidAt: FieldRef<"ProviderPayout", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProviderPayout findUnique
   */
  export type ProviderPayoutFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter, which ProviderPayout to fetch.
     */
    where: ProviderPayoutWhereUniqueInput
  }

  /**
   * ProviderPayout findUniqueOrThrow
   */
  export type ProviderPayoutFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter, which ProviderPayout to fetch.
     */
    where: ProviderPayoutWhereUniqueInput
  }

  /**
   * ProviderPayout findFirst
   */
  export type ProviderPayoutFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter, which ProviderPayout to fetch.
     */
    where?: ProviderPayoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderPayouts to fetch.
     */
    orderBy?: ProviderPayoutOrderByWithRelationInput | ProviderPayoutOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderPayouts.
     */
    cursor?: ProviderPayoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderPayouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderPayouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderPayouts.
     */
    distinct?: ProviderPayoutScalarFieldEnum | ProviderPayoutScalarFieldEnum[]
  }

  /**
   * ProviderPayout findFirstOrThrow
   */
  export type ProviderPayoutFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter, which ProviderPayout to fetch.
     */
    where?: ProviderPayoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderPayouts to fetch.
     */
    orderBy?: ProviderPayoutOrderByWithRelationInput | ProviderPayoutOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProviderPayouts.
     */
    cursor?: ProviderPayoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderPayouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderPayouts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProviderPayouts.
     */
    distinct?: ProviderPayoutScalarFieldEnum | ProviderPayoutScalarFieldEnum[]
  }

  /**
   * ProviderPayout findMany
   */
  export type ProviderPayoutFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter, which ProviderPayouts to fetch.
     */
    where?: ProviderPayoutWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProviderPayouts to fetch.
     */
    orderBy?: ProviderPayoutOrderByWithRelationInput | ProviderPayoutOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProviderPayouts.
     */
    cursor?: ProviderPayoutWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProviderPayouts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProviderPayouts.
     */
    skip?: number
    distinct?: ProviderPayoutScalarFieldEnum | ProviderPayoutScalarFieldEnum[]
  }

  /**
   * ProviderPayout create
   */
  export type ProviderPayoutCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * The data needed to create a ProviderPayout.
     */
    data: XOR<ProviderPayoutCreateInput, ProviderPayoutUncheckedCreateInput>
  }

  /**
   * ProviderPayout createMany
   */
  export type ProviderPayoutCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProviderPayouts.
     */
    data: ProviderPayoutCreateManyInput | ProviderPayoutCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProviderPayout createManyAndReturn
   */
  export type ProviderPayoutCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * The data used to create many ProviderPayouts.
     */
    data: ProviderPayoutCreateManyInput | ProviderPayoutCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderPayout update
   */
  export type ProviderPayoutUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * The data needed to update a ProviderPayout.
     */
    data: XOR<ProviderPayoutUpdateInput, ProviderPayoutUncheckedUpdateInput>
    /**
     * Choose, which ProviderPayout to update.
     */
    where: ProviderPayoutWhereUniqueInput
  }

  /**
   * ProviderPayout updateMany
   */
  export type ProviderPayoutUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProviderPayouts.
     */
    data: XOR<ProviderPayoutUpdateManyMutationInput, ProviderPayoutUncheckedUpdateManyInput>
    /**
     * Filter which ProviderPayouts to update
     */
    where?: ProviderPayoutWhereInput
    /**
     * Limit how many ProviderPayouts to update.
     */
    limit?: number
  }

  /**
   * ProviderPayout updateManyAndReturn
   */
  export type ProviderPayoutUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * The data used to update ProviderPayouts.
     */
    data: XOR<ProviderPayoutUpdateManyMutationInput, ProviderPayoutUncheckedUpdateManyInput>
    /**
     * Filter which ProviderPayouts to update
     */
    where?: ProviderPayoutWhereInput
    /**
     * Limit how many ProviderPayouts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProviderPayout upsert
   */
  export type ProviderPayoutUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * The filter to search for the ProviderPayout to update in case it exists.
     */
    where: ProviderPayoutWhereUniqueInput
    /**
     * In case the ProviderPayout found by the `where` argument doesn't exist, create a new ProviderPayout with this data.
     */
    create: XOR<ProviderPayoutCreateInput, ProviderPayoutUncheckedCreateInput>
    /**
     * In case the ProviderPayout was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProviderPayoutUpdateInput, ProviderPayoutUncheckedUpdateInput>
  }

  /**
   * ProviderPayout delete
   */
  export type ProviderPayoutDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
    /**
     * Filter which ProviderPayout to delete.
     */
    where: ProviderPayoutWhereUniqueInput
  }

  /**
   * ProviderPayout deleteMany
   */
  export type ProviderPayoutDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProviderPayouts to delete
     */
    where?: ProviderPayoutWhereInput
    /**
     * Limit how many ProviderPayouts to delete.
     */
    limit?: number
  }

  /**
   * ProviderPayout.order
   */
  export type ProviderPayout$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * ProviderPayout without action
   */
  export type ProviderPayoutDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProviderPayout
     */
    select?: ProviderPayoutSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProviderPayout
     */
    omit?: ProviderPayoutOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProviderPayoutInclude<ExtArgs> | null
  }


  /**
   * Model MatchScore
   */

  export type AggregateMatchScore = {
    _count: MatchScoreCountAggregateOutputType | null
    _avg: MatchScoreAvgAggregateOutputType | null
    _sum: MatchScoreSumAggregateOutputType | null
    _min: MatchScoreMinAggregateOutputType | null
    _max: MatchScoreMaxAggregateOutputType | null
  }

  export type MatchScoreAvgAggregateOutputType = {
    distanceKm: Decimal | null
    ratingNorm: Decimal | null
    acceptRate: Decimal | null
    responseFast: Decimal | null
    reliability: Decimal | null
    finalScore: Decimal | null
  }

  export type MatchScoreSumAggregateOutputType = {
    distanceKm: Decimal | null
    ratingNorm: Decimal | null
    acceptRate: Decimal | null
    responseFast: Decimal | null
    reliability: Decimal | null
    finalScore: Decimal | null
  }

  export type MatchScoreMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    distanceKm: Decimal | null
    ratingNorm: Decimal | null
    acceptRate: Decimal | null
    responseFast: Decimal | null
    reliability: Decimal | null
    finalScore: Decimal | null
    createdAt: Date | null
  }

  export type MatchScoreMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    providerId: string | null
    distanceKm: Decimal | null
    ratingNorm: Decimal | null
    acceptRate: Decimal | null
    responseFast: Decimal | null
    reliability: Decimal | null
    finalScore: Decimal | null
    createdAt: Date | null
  }

  export type MatchScoreCountAggregateOutputType = {
    id: number
    orderId: number
    providerId: number
    distanceKm: number
    ratingNorm: number
    acceptRate: number
    responseFast: number
    reliability: number
    finalScore: number
    createdAt: number
    _all: number
  }


  export type MatchScoreAvgAggregateInputType = {
    distanceKm?: true
    ratingNorm?: true
    acceptRate?: true
    responseFast?: true
    reliability?: true
    finalScore?: true
  }

  export type MatchScoreSumAggregateInputType = {
    distanceKm?: true
    ratingNorm?: true
    acceptRate?: true
    responseFast?: true
    reliability?: true
    finalScore?: true
  }

  export type MatchScoreMinAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    distanceKm?: true
    ratingNorm?: true
    acceptRate?: true
    responseFast?: true
    reliability?: true
    finalScore?: true
    createdAt?: true
  }

  export type MatchScoreMaxAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    distanceKm?: true
    ratingNorm?: true
    acceptRate?: true
    responseFast?: true
    reliability?: true
    finalScore?: true
    createdAt?: true
  }

  export type MatchScoreCountAggregateInputType = {
    id?: true
    orderId?: true
    providerId?: true
    distanceKm?: true
    ratingNorm?: true
    acceptRate?: true
    responseFast?: true
    reliability?: true
    finalScore?: true
    createdAt?: true
    _all?: true
  }

  export type MatchScoreAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MatchScore to aggregate.
     */
    where?: MatchScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MatchScores to fetch.
     */
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MatchScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MatchScores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MatchScores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MatchScores
    **/
    _count?: true | MatchScoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MatchScoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MatchScoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MatchScoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MatchScoreMaxAggregateInputType
  }

  export type GetMatchScoreAggregateType<T extends MatchScoreAggregateArgs> = {
        [P in keyof T & keyof AggregateMatchScore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMatchScore[P]>
      : GetScalarType<T[P], AggregateMatchScore[P]>
  }




  export type MatchScoreGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatchScoreWhereInput
    orderBy?: MatchScoreOrderByWithAggregationInput | MatchScoreOrderByWithAggregationInput[]
    by: MatchScoreScalarFieldEnum[] | MatchScoreScalarFieldEnum
    having?: MatchScoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MatchScoreCountAggregateInputType | true
    _avg?: MatchScoreAvgAggregateInputType
    _sum?: MatchScoreSumAggregateInputType
    _min?: MatchScoreMinAggregateInputType
    _max?: MatchScoreMaxAggregateInputType
  }

  export type MatchScoreGroupByOutputType = {
    id: string
    orderId: string
    providerId: string
    distanceKm: Decimal | null
    ratingNorm: Decimal | null
    acceptRate: Decimal | null
    responseFast: Decimal | null
    reliability: Decimal | null
    finalScore: Decimal | null
    createdAt: Date
    _count: MatchScoreCountAggregateOutputType | null
    _avg: MatchScoreAvgAggregateOutputType | null
    _sum: MatchScoreSumAggregateOutputType | null
    _min: MatchScoreMinAggregateOutputType | null
    _max: MatchScoreMaxAggregateOutputType | null
  }

  type GetMatchScoreGroupByPayload<T extends MatchScoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MatchScoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MatchScoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MatchScoreGroupByOutputType[P]>
            : GetScalarType<T[P], MatchScoreGroupByOutputType[P]>
        }
      >
    >


  export type MatchScoreSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    distanceKm?: boolean
    ratingNorm?: boolean
    acceptRate?: boolean
    responseFast?: boolean
    reliability?: boolean
    finalScore?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["matchScore"]>

  export type MatchScoreSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    distanceKm?: boolean
    ratingNorm?: boolean
    acceptRate?: boolean
    responseFast?: boolean
    reliability?: boolean
    finalScore?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["matchScore"]>

  export type MatchScoreSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    distanceKm?: boolean
    ratingNorm?: boolean
    acceptRate?: boolean
    responseFast?: boolean
    reliability?: boolean
    finalScore?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["matchScore"]>

  export type MatchScoreSelectScalar = {
    id?: boolean
    orderId?: boolean
    providerId?: boolean
    distanceKm?: boolean
    ratingNorm?: boolean
    acceptRate?: boolean
    responseFast?: boolean
    reliability?: boolean
    finalScore?: boolean
    createdAt?: boolean
  }

  export type MatchScoreOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "providerId" | "distanceKm" | "ratingNorm" | "acceptRate" | "responseFast" | "reliability" | "finalScore" | "createdAt", ExtArgs["result"]["matchScore"]>
  export type MatchScoreInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MatchScoreIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MatchScoreIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    provider?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MatchScorePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MatchScore"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      provider: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      providerId: string
      distanceKm: Prisma.Decimal | null
      ratingNorm: Prisma.Decimal | null
      acceptRate: Prisma.Decimal | null
      responseFast: Prisma.Decimal | null
      reliability: Prisma.Decimal | null
      finalScore: Prisma.Decimal | null
      createdAt: Date
    }, ExtArgs["result"]["matchScore"]>
    composites: {}
  }

  type MatchScoreGetPayload<S extends boolean | null | undefined | MatchScoreDefaultArgs> = $Result.GetResult<Prisma.$MatchScorePayload, S>

  type MatchScoreCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MatchScoreFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MatchScoreCountAggregateInputType | true
    }

  export interface MatchScoreDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MatchScore'], meta: { name: 'MatchScore' } }
    /**
     * Find zero or one MatchScore that matches the filter.
     * @param {MatchScoreFindUniqueArgs} args - Arguments to find a MatchScore
     * @example
     * // Get one MatchScore
     * const matchScore = await prisma.matchScore.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MatchScoreFindUniqueArgs>(args: SelectSubset<T, MatchScoreFindUniqueArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MatchScore that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MatchScoreFindUniqueOrThrowArgs} args - Arguments to find a MatchScore
     * @example
     * // Get one MatchScore
     * const matchScore = await prisma.matchScore.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MatchScoreFindUniqueOrThrowArgs>(args: SelectSubset<T, MatchScoreFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MatchScore that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreFindFirstArgs} args - Arguments to find a MatchScore
     * @example
     * // Get one MatchScore
     * const matchScore = await prisma.matchScore.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MatchScoreFindFirstArgs>(args?: SelectSubset<T, MatchScoreFindFirstArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MatchScore that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreFindFirstOrThrowArgs} args - Arguments to find a MatchScore
     * @example
     * // Get one MatchScore
     * const matchScore = await prisma.matchScore.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MatchScoreFindFirstOrThrowArgs>(args?: SelectSubset<T, MatchScoreFindFirstOrThrowArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MatchScores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MatchScores
     * const matchScores = await prisma.matchScore.findMany()
     * 
     * // Get first 10 MatchScores
     * const matchScores = await prisma.matchScore.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const matchScoreWithIdOnly = await prisma.matchScore.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MatchScoreFindManyArgs>(args?: SelectSubset<T, MatchScoreFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MatchScore.
     * @param {MatchScoreCreateArgs} args - Arguments to create a MatchScore.
     * @example
     * // Create one MatchScore
     * const MatchScore = await prisma.matchScore.create({
     *   data: {
     *     // ... data to create a MatchScore
     *   }
     * })
     * 
     */
    create<T extends MatchScoreCreateArgs>(args: SelectSubset<T, MatchScoreCreateArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MatchScores.
     * @param {MatchScoreCreateManyArgs} args - Arguments to create many MatchScores.
     * @example
     * // Create many MatchScores
     * const matchScore = await prisma.matchScore.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MatchScoreCreateManyArgs>(args?: SelectSubset<T, MatchScoreCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MatchScores and returns the data saved in the database.
     * @param {MatchScoreCreateManyAndReturnArgs} args - Arguments to create many MatchScores.
     * @example
     * // Create many MatchScores
     * const matchScore = await prisma.matchScore.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MatchScores and only return the `id`
     * const matchScoreWithIdOnly = await prisma.matchScore.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MatchScoreCreateManyAndReturnArgs>(args?: SelectSubset<T, MatchScoreCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MatchScore.
     * @param {MatchScoreDeleteArgs} args - Arguments to delete one MatchScore.
     * @example
     * // Delete one MatchScore
     * const MatchScore = await prisma.matchScore.delete({
     *   where: {
     *     // ... filter to delete one MatchScore
     *   }
     * })
     * 
     */
    delete<T extends MatchScoreDeleteArgs>(args: SelectSubset<T, MatchScoreDeleteArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MatchScore.
     * @param {MatchScoreUpdateArgs} args - Arguments to update one MatchScore.
     * @example
     * // Update one MatchScore
     * const matchScore = await prisma.matchScore.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MatchScoreUpdateArgs>(args: SelectSubset<T, MatchScoreUpdateArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MatchScores.
     * @param {MatchScoreDeleteManyArgs} args - Arguments to filter MatchScores to delete.
     * @example
     * // Delete a few MatchScores
     * const { count } = await prisma.matchScore.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MatchScoreDeleteManyArgs>(args?: SelectSubset<T, MatchScoreDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MatchScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MatchScores
     * const matchScore = await prisma.matchScore.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MatchScoreUpdateManyArgs>(args: SelectSubset<T, MatchScoreUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MatchScores and returns the data updated in the database.
     * @param {MatchScoreUpdateManyAndReturnArgs} args - Arguments to update many MatchScores.
     * @example
     * // Update many MatchScores
     * const matchScore = await prisma.matchScore.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MatchScores and only return the `id`
     * const matchScoreWithIdOnly = await prisma.matchScore.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MatchScoreUpdateManyAndReturnArgs>(args: SelectSubset<T, MatchScoreUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MatchScore.
     * @param {MatchScoreUpsertArgs} args - Arguments to update or create a MatchScore.
     * @example
     * // Update or create a MatchScore
     * const matchScore = await prisma.matchScore.upsert({
     *   create: {
     *     // ... data to create a MatchScore
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MatchScore we want to update
     *   }
     * })
     */
    upsert<T extends MatchScoreUpsertArgs>(args: SelectSubset<T, MatchScoreUpsertArgs<ExtArgs>>): Prisma__MatchScoreClient<$Result.GetResult<Prisma.$MatchScorePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MatchScores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreCountArgs} args - Arguments to filter MatchScores to count.
     * @example
     * // Count the number of MatchScores
     * const count = await prisma.matchScore.count({
     *   where: {
     *     // ... the filter for the MatchScores we want to count
     *   }
     * })
    **/
    count<T extends MatchScoreCountArgs>(
      args?: Subset<T, MatchScoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MatchScoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MatchScore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MatchScoreAggregateArgs>(args: Subset<T, MatchScoreAggregateArgs>): Prisma.PrismaPromise<GetMatchScoreAggregateType<T>>

    /**
     * Group by MatchScore.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatchScoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MatchScoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MatchScoreGroupByArgs['orderBy'] }
        : { orderBy?: MatchScoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MatchScoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMatchScoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MatchScore model
   */
  readonly fields: MatchScoreFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MatchScore.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MatchScoreClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MatchScore model
   */
  interface MatchScoreFieldRefs {
    readonly id: FieldRef<"MatchScore", 'String'>
    readonly orderId: FieldRef<"MatchScore", 'String'>
    readonly providerId: FieldRef<"MatchScore", 'String'>
    readonly distanceKm: FieldRef<"MatchScore", 'Decimal'>
    readonly ratingNorm: FieldRef<"MatchScore", 'Decimal'>
    readonly acceptRate: FieldRef<"MatchScore", 'Decimal'>
    readonly responseFast: FieldRef<"MatchScore", 'Decimal'>
    readonly reliability: FieldRef<"MatchScore", 'Decimal'>
    readonly finalScore: FieldRef<"MatchScore", 'Decimal'>
    readonly createdAt: FieldRef<"MatchScore", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MatchScore findUnique
   */
  export type MatchScoreFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter, which MatchScore to fetch.
     */
    where: MatchScoreWhereUniqueInput
  }

  /**
   * MatchScore findUniqueOrThrow
   */
  export type MatchScoreFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter, which MatchScore to fetch.
     */
    where: MatchScoreWhereUniqueInput
  }

  /**
   * MatchScore findFirst
   */
  export type MatchScoreFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter, which MatchScore to fetch.
     */
    where?: MatchScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MatchScores to fetch.
     */
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MatchScores.
     */
    cursor?: MatchScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MatchScores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MatchScores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MatchScores.
     */
    distinct?: MatchScoreScalarFieldEnum | MatchScoreScalarFieldEnum[]
  }

  /**
   * MatchScore findFirstOrThrow
   */
  export type MatchScoreFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter, which MatchScore to fetch.
     */
    where?: MatchScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MatchScores to fetch.
     */
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MatchScores.
     */
    cursor?: MatchScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MatchScores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MatchScores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MatchScores.
     */
    distinct?: MatchScoreScalarFieldEnum | MatchScoreScalarFieldEnum[]
  }

  /**
   * MatchScore findMany
   */
  export type MatchScoreFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter, which MatchScores to fetch.
     */
    where?: MatchScoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MatchScores to fetch.
     */
    orderBy?: MatchScoreOrderByWithRelationInput | MatchScoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MatchScores.
     */
    cursor?: MatchScoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MatchScores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MatchScores.
     */
    skip?: number
    distinct?: MatchScoreScalarFieldEnum | MatchScoreScalarFieldEnum[]
  }

  /**
   * MatchScore create
   */
  export type MatchScoreCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * The data needed to create a MatchScore.
     */
    data: XOR<MatchScoreCreateInput, MatchScoreUncheckedCreateInput>
  }

  /**
   * MatchScore createMany
   */
  export type MatchScoreCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MatchScores.
     */
    data: MatchScoreCreateManyInput | MatchScoreCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MatchScore createManyAndReturn
   */
  export type MatchScoreCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * The data used to create many MatchScores.
     */
    data: MatchScoreCreateManyInput | MatchScoreCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MatchScore update
   */
  export type MatchScoreUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * The data needed to update a MatchScore.
     */
    data: XOR<MatchScoreUpdateInput, MatchScoreUncheckedUpdateInput>
    /**
     * Choose, which MatchScore to update.
     */
    where: MatchScoreWhereUniqueInput
  }

  /**
   * MatchScore updateMany
   */
  export type MatchScoreUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MatchScores.
     */
    data: XOR<MatchScoreUpdateManyMutationInput, MatchScoreUncheckedUpdateManyInput>
    /**
     * Filter which MatchScores to update
     */
    where?: MatchScoreWhereInput
    /**
     * Limit how many MatchScores to update.
     */
    limit?: number
  }

  /**
   * MatchScore updateManyAndReturn
   */
  export type MatchScoreUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * The data used to update MatchScores.
     */
    data: XOR<MatchScoreUpdateManyMutationInput, MatchScoreUncheckedUpdateManyInput>
    /**
     * Filter which MatchScores to update
     */
    where?: MatchScoreWhereInput
    /**
     * Limit how many MatchScores to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MatchScore upsert
   */
  export type MatchScoreUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * The filter to search for the MatchScore to update in case it exists.
     */
    where: MatchScoreWhereUniqueInput
    /**
     * In case the MatchScore found by the `where` argument doesn't exist, create a new MatchScore with this data.
     */
    create: XOR<MatchScoreCreateInput, MatchScoreUncheckedCreateInput>
    /**
     * In case the MatchScore was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MatchScoreUpdateInput, MatchScoreUncheckedUpdateInput>
  }

  /**
   * MatchScore delete
   */
  export type MatchScoreDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
    /**
     * Filter which MatchScore to delete.
     */
    where: MatchScoreWhereUniqueInput
  }

  /**
   * MatchScore deleteMany
   */
  export type MatchScoreDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MatchScores to delete
     */
    where?: MatchScoreWhereInput
    /**
     * Limit how many MatchScores to delete.
     */
    limit?: number
  }

  /**
   * MatchScore without action
   */
  export type MatchScoreDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MatchScore
     */
    select?: MatchScoreSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MatchScore
     */
    omit?: MatchScoreOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatchScoreInclude<ExtArgs> | null
  }


  /**
   * Model LlmClassification
   */

  export type AggregateLlmClassification = {
    _count: LlmClassificationCountAggregateOutputType | null
    _avg: LlmClassificationAvgAggregateOutputType | null
    _sum: LlmClassificationSumAggregateOutputType | null
    _min: LlmClassificationMinAggregateOutputType | null
    _max: LlmClassificationMaxAggregateOutputType | null
  }

  export type LlmClassificationAvgAggregateOutputType = {
    confidence: Decimal | null
  }

  export type LlmClassificationSumAggregateOutputType = {
    confidence: Decimal | null
  }

  export type LlmClassificationMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    inputText: string | null
    categoryId: string | null
    confidence: Decimal | null
    createdAt: Date | null
  }

  export type LlmClassificationMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    inputText: string | null
    categoryId: string | null
    confidence: Decimal | null
    createdAt: Date | null
  }

  export type LlmClassificationCountAggregateOutputType = {
    id: number
    orderId: number
    inputText: number
    categoryId: number
    confidence: number
    createdAt: number
    _all: number
  }


  export type LlmClassificationAvgAggregateInputType = {
    confidence?: true
  }

  export type LlmClassificationSumAggregateInputType = {
    confidence?: true
  }

  export type LlmClassificationMinAggregateInputType = {
    id?: true
    orderId?: true
    inputText?: true
    categoryId?: true
    confidence?: true
    createdAt?: true
  }

  export type LlmClassificationMaxAggregateInputType = {
    id?: true
    orderId?: true
    inputText?: true
    categoryId?: true
    confidence?: true
    createdAt?: true
  }

  export type LlmClassificationCountAggregateInputType = {
    id?: true
    orderId?: true
    inputText?: true
    categoryId?: true
    confidence?: true
    createdAt?: true
    _all?: true
  }

  export type LlmClassificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmClassification to aggregate.
     */
    where?: LlmClassificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmClassifications to fetch.
     */
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LlmClassificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmClassifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmClassifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LlmClassifications
    **/
    _count?: true | LlmClassificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LlmClassificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LlmClassificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LlmClassificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LlmClassificationMaxAggregateInputType
  }

  export type GetLlmClassificationAggregateType<T extends LlmClassificationAggregateArgs> = {
        [P in keyof T & keyof AggregateLlmClassification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLlmClassification[P]>
      : GetScalarType<T[P], AggregateLlmClassification[P]>
  }




  export type LlmClassificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LlmClassificationWhereInput
    orderBy?: LlmClassificationOrderByWithAggregationInput | LlmClassificationOrderByWithAggregationInput[]
    by: LlmClassificationScalarFieldEnum[] | LlmClassificationScalarFieldEnum
    having?: LlmClassificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LlmClassificationCountAggregateInputType | true
    _avg?: LlmClassificationAvgAggregateInputType
    _sum?: LlmClassificationSumAggregateInputType
    _min?: LlmClassificationMinAggregateInputType
    _max?: LlmClassificationMaxAggregateInputType
  }

  export type LlmClassificationGroupByOutputType = {
    id: string
    orderId: string
    inputText: string | null
    categoryId: string | null
    confidence: Decimal | null
    createdAt: Date
    _count: LlmClassificationCountAggregateOutputType | null
    _avg: LlmClassificationAvgAggregateOutputType | null
    _sum: LlmClassificationSumAggregateOutputType | null
    _min: LlmClassificationMinAggregateOutputType | null
    _max: LlmClassificationMaxAggregateOutputType | null
  }

  type GetLlmClassificationGroupByPayload<T extends LlmClassificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LlmClassificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LlmClassificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LlmClassificationGroupByOutputType[P]>
            : GetScalarType<T[P], LlmClassificationGroupByOutputType[P]>
        }
      >
    >


  export type LlmClassificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    inputText?: boolean
    categoryId?: boolean
    confidence?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["llmClassification"]>

  export type LlmClassificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    inputText?: boolean
    categoryId?: boolean
    confidence?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["llmClassification"]>

  export type LlmClassificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    inputText?: boolean
    categoryId?: boolean
    confidence?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }, ExtArgs["result"]["llmClassification"]>

  export type LlmClassificationSelectScalar = {
    id?: boolean
    orderId?: boolean
    inputText?: boolean
    categoryId?: boolean
    confidence?: boolean
    createdAt?: boolean
  }

  export type LlmClassificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "inputText" | "categoryId" | "confidence" | "createdAt", ExtArgs["result"]["llmClassification"]>
  export type LlmClassificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }
  export type LlmClassificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }
  export type LlmClassificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    category?: boolean | LlmClassification$categoryArgs<ExtArgs>
  }

  export type $LlmClassificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LlmClassification"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      category: Prisma.$CategoryPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      inputText: string | null
      categoryId: string | null
      confidence: Prisma.Decimal | null
      createdAt: Date
    }, ExtArgs["result"]["llmClassification"]>
    composites: {}
  }

  type LlmClassificationGetPayload<S extends boolean | null | undefined | LlmClassificationDefaultArgs> = $Result.GetResult<Prisma.$LlmClassificationPayload, S>

  type LlmClassificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LlmClassificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LlmClassificationCountAggregateInputType | true
    }

  export interface LlmClassificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LlmClassification'], meta: { name: 'LlmClassification' } }
    /**
     * Find zero or one LlmClassification that matches the filter.
     * @param {LlmClassificationFindUniqueArgs} args - Arguments to find a LlmClassification
     * @example
     * // Get one LlmClassification
     * const llmClassification = await prisma.llmClassification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LlmClassificationFindUniqueArgs>(args: SelectSubset<T, LlmClassificationFindUniqueArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LlmClassification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LlmClassificationFindUniqueOrThrowArgs} args - Arguments to find a LlmClassification
     * @example
     * // Get one LlmClassification
     * const llmClassification = await prisma.llmClassification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LlmClassificationFindUniqueOrThrowArgs>(args: SelectSubset<T, LlmClassificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LlmClassification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationFindFirstArgs} args - Arguments to find a LlmClassification
     * @example
     * // Get one LlmClassification
     * const llmClassification = await prisma.llmClassification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LlmClassificationFindFirstArgs>(args?: SelectSubset<T, LlmClassificationFindFirstArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LlmClassification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationFindFirstOrThrowArgs} args - Arguments to find a LlmClassification
     * @example
     * // Get one LlmClassification
     * const llmClassification = await prisma.llmClassification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LlmClassificationFindFirstOrThrowArgs>(args?: SelectSubset<T, LlmClassificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LlmClassifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LlmClassifications
     * const llmClassifications = await prisma.llmClassification.findMany()
     * 
     * // Get first 10 LlmClassifications
     * const llmClassifications = await prisma.llmClassification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const llmClassificationWithIdOnly = await prisma.llmClassification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LlmClassificationFindManyArgs>(args?: SelectSubset<T, LlmClassificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LlmClassification.
     * @param {LlmClassificationCreateArgs} args - Arguments to create a LlmClassification.
     * @example
     * // Create one LlmClassification
     * const LlmClassification = await prisma.llmClassification.create({
     *   data: {
     *     // ... data to create a LlmClassification
     *   }
     * })
     * 
     */
    create<T extends LlmClassificationCreateArgs>(args: SelectSubset<T, LlmClassificationCreateArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LlmClassifications.
     * @param {LlmClassificationCreateManyArgs} args - Arguments to create many LlmClassifications.
     * @example
     * // Create many LlmClassifications
     * const llmClassification = await prisma.llmClassification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LlmClassificationCreateManyArgs>(args?: SelectSubset<T, LlmClassificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LlmClassifications and returns the data saved in the database.
     * @param {LlmClassificationCreateManyAndReturnArgs} args - Arguments to create many LlmClassifications.
     * @example
     * // Create many LlmClassifications
     * const llmClassification = await prisma.llmClassification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LlmClassifications and only return the `id`
     * const llmClassificationWithIdOnly = await prisma.llmClassification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LlmClassificationCreateManyAndReturnArgs>(args?: SelectSubset<T, LlmClassificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LlmClassification.
     * @param {LlmClassificationDeleteArgs} args - Arguments to delete one LlmClassification.
     * @example
     * // Delete one LlmClassification
     * const LlmClassification = await prisma.llmClassification.delete({
     *   where: {
     *     // ... filter to delete one LlmClassification
     *   }
     * })
     * 
     */
    delete<T extends LlmClassificationDeleteArgs>(args: SelectSubset<T, LlmClassificationDeleteArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LlmClassification.
     * @param {LlmClassificationUpdateArgs} args - Arguments to update one LlmClassification.
     * @example
     * // Update one LlmClassification
     * const llmClassification = await prisma.llmClassification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LlmClassificationUpdateArgs>(args: SelectSubset<T, LlmClassificationUpdateArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LlmClassifications.
     * @param {LlmClassificationDeleteManyArgs} args - Arguments to filter LlmClassifications to delete.
     * @example
     * // Delete a few LlmClassifications
     * const { count } = await prisma.llmClassification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LlmClassificationDeleteManyArgs>(args?: SelectSubset<T, LlmClassificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LlmClassifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LlmClassifications
     * const llmClassification = await prisma.llmClassification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LlmClassificationUpdateManyArgs>(args: SelectSubset<T, LlmClassificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LlmClassifications and returns the data updated in the database.
     * @param {LlmClassificationUpdateManyAndReturnArgs} args - Arguments to update many LlmClassifications.
     * @example
     * // Update many LlmClassifications
     * const llmClassification = await prisma.llmClassification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LlmClassifications and only return the `id`
     * const llmClassificationWithIdOnly = await prisma.llmClassification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LlmClassificationUpdateManyAndReturnArgs>(args: SelectSubset<T, LlmClassificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LlmClassification.
     * @param {LlmClassificationUpsertArgs} args - Arguments to update or create a LlmClassification.
     * @example
     * // Update or create a LlmClassification
     * const llmClassification = await prisma.llmClassification.upsert({
     *   create: {
     *     // ... data to create a LlmClassification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LlmClassification we want to update
     *   }
     * })
     */
    upsert<T extends LlmClassificationUpsertArgs>(args: SelectSubset<T, LlmClassificationUpsertArgs<ExtArgs>>): Prisma__LlmClassificationClient<$Result.GetResult<Prisma.$LlmClassificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LlmClassifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationCountArgs} args - Arguments to filter LlmClassifications to count.
     * @example
     * // Count the number of LlmClassifications
     * const count = await prisma.llmClassification.count({
     *   where: {
     *     // ... the filter for the LlmClassifications we want to count
     *   }
     * })
    **/
    count<T extends LlmClassificationCountArgs>(
      args?: Subset<T, LlmClassificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LlmClassificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LlmClassification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LlmClassificationAggregateArgs>(args: Subset<T, LlmClassificationAggregateArgs>): Prisma.PrismaPromise<GetLlmClassificationAggregateType<T>>

    /**
     * Group by LlmClassification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LlmClassificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LlmClassificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LlmClassificationGroupByArgs['orderBy'] }
        : { orderBy?: LlmClassificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LlmClassificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLlmClassificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LlmClassification model
   */
  readonly fields: LlmClassificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LlmClassification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LlmClassificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category<T extends LlmClassification$categoryArgs<ExtArgs> = {}>(args?: Subset<T, LlmClassification$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LlmClassification model
   */
  interface LlmClassificationFieldRefs {
    readonly id: FieldRef<"LlmClassification", 'String'>
    readonly orderId: FieldRef<"LlmClassification", 'String'>
    readonly inputText: FieldRef<"LlmClassification", 'String'>
    readonly categoryId: FieldRef<"LlmClassification", 'String'>
    readonly confidence: FieldRef<"LlmClassification", 'Decimal'>
    readonly createdAt: FieldRef<"LlmClassification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LlmClassification findUnique
   */
  export type LlmClassificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter, which LlmClassification to fetch.
     */
    where: LlmClassificationWhereUniqueInput
  }

  /**
   * LlmClassification findUniqueOrThrow
   */
  export type LlmClassificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter, which LlmClassification to fetch.
     */
    where: LlmClassificationWhereUniqueInput
  }

  /**
   * LlmClassification findFirst
   */
  export type LlmClassificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter, which LlmClassification to fetch.
     */
    where?: LlmClassificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmClassifications to fetch.
     */
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmClassifications.
     */
    cursor?: LlmClassificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmClassifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmClassifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmClassifications.
     */
    distinct?: LlmClassificationScalarFieldEnum | LlmClassificationScalarFieldEnum[]
  }

  /**
   * LlmClassification findFirstOrThrow
   */
  export type LlmClassificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter, which LlmClassification to fetch.
     */
    where?: LlmClassificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmClassifications to fetch.
     */
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LlmClassifications.
     */
    cursor?: LlmClassificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmClassifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmClassifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LlmClassifications.
     */
    distinct?: LlmClassificationScalarFieldEnum | LlmClassificationScalarFieldEnum[]
  }

  /**
   * LlmClassification findMany
   */
  export type LlmClassificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter, which LlmClassifications to fetch.
     */
    where?: LlmClassificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LlmClassifications to fetch.
     */
    orderBy?: LlmClassificationOrderByWithRelationInput | LlmClassificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LlmClassifications.
     */
    cursor?: LlmClassificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LlmClassifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LlmClassifications.
     */
    skip?: number
    distinct?: LlmClassificationScalarFieldEnum | LlmClassificationScalarFieldEnum[]
  }

  /**
   * LlmClassification create
   */
  export type LlmClassificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * The data needed to create a LlmClassification.
     */
    data: XOR<LlmClassificationCreateInput, LlmClassificationUncheckedCreateInput>
  }

  /**
   * LlmClassification createMany
   */
  export type LlmClassificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LlmClassifications.
     */
    data: LlmClassificationCreateManyInput | LlmClassificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LlmClassification createManyAndReturn
   */
  export type LlmClassificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * The data used to create many LlmClassifications.
     */
    data: LlmClassificationCreateManyInput | LlmClassificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LlmClassification update
   */
  export type LlmClassificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * The data needed to update a LlmClassification.
     */
    data: XOR<LlmClassificationUpdateInput, LlmClassificationUncheckedUpdateInput>
    /**
     * Choose, which LlmClassification to update.
     */
    where: LlmClassificationWhereUniqueInput
  }

  /**
   * LlmClassification updateMany
   */
  export type LlmClassificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LlmClassifications.
     */
    data: XOR<LlmClassificationUpdateManyMutationInput, LlmClassificationUncheckedUpdateManyInput>
    /**
     * Filter which LlmClassifications to update
     */
    where?: LlmClassificationWhereInput
    /**
     * Limit how many LlmClassifications to update.
     */
    limit?: number
  }

  /**
   * LlmClassification updateManyAndReturn
   */
  export type LlmClassificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * The data used to update LlmClassifications.
     */
    data: XOR<LlmClassificationUpdateManyMutationInput, LlmClassificationUncheckedUpdateManyInput>
    /**
     * Filter which LlmClassifications to update
     */
    where?: LlmClassificationWhereInput
    /**
     * Limit how many LlmClassifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LlmClassification upsert
   */
  export type LlmClassificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * The filter to search for the LlmClassification to update in case it exists.
     */
    where: LlmClassificationWhereUniqueInput
    /**
     * In case the LlmClassification found by the `where` argument doesn't exist, create a new LlmClassification with this data.
     */
    create: XOR<LlmClassificationCreateInput, LlmClassificationUncheckedCreateInput>
    /**
     * In case the LlmClassification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LlmClassificationUpdateInput, LlmClassificationUncheckedUpdateInput>
  }

  /**
   * LlmClassification delete
   */
  export type LlmClassificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
    /**
     * Filter which LlmClassification to delete.
     */
    where: LlmClassificationWhereUniqueInput
  }

  /**
   * LlmClassification deleteMany
   */
  export type LlmClassificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LlmClassifications to delete
     */
    where?: LlmClassificationWhereInput
    /**
     * Limit how many LlmClassifications to delete.
     */
    limit?: number
  }

  /**
   * LlmClassification.category
   */
  export type LlmClassification$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * LlmClassification without action
   */
  export type LlmClassificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LlmClassification
     */
    select?: LlmClassificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LlmClassification
     */
    omit?: LlmClassificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LlmClassificationInclude<ExtArgs> | null
  }


  /**
   * Model RefusalRule
   */

  export type AggregateRefusalRule = {
    _count: RefusalRuleCountAggregateOutputType | null
    _avg: RefusalRuleAvgAggregateOutputType | null
    _sum: RefusalRuleSumAggregateOutputType | null
    _min: RefusalRuleMinAggregateOutputType | null
    _max: RefusalRuleMaxAggregateOutputType | null
  }

  export type RefusalRuleAvgAggregateOutputType = {
    clientCreditPct: number | null
    providerPct: number | null
    platformPct: number | null
  }

  export type RefusalRuleSumAggregateOutputType = {
    clientCreditPct: number | null
    providerPct: number | null
    platformPct: number | null
  }

  export type RefusalRuleMinAggregateOutputType = {
    code: string | null
    clientCreditPct: number | null
    providerPct: number | null
    platformPct: number | null
  }

  export type RefusalRuleMaxAggregateOutputType = {
    code: string | null
    clientCreditPct: number | null
    providerPct: number | null
    platformPct: number | null
  }

  export type RefusalRuleCountAggregateOutputType = {
    code: number
    clientCreditPct: number
    providerPct: number
    platformPct: number
    _all: number
  }


  export type RefusalRuleAvgAggregateInputType = {
    clientCreditPct?: true
    providerPct?: true
    platformPct?: true
  }

  export type RefusalRuleSumAggregateInputType = {
    clientCreditPct?: true
    providerPct?: true
    platformPct?: true
  }

  export type RefusalRuleMinAggregateInputType = {
    code?: true
    clientCreditPct?: true
    providerPct?: true
    platformPct?: true
  }

  export type RefusalRuleMaxAggregateInputType = {
    code?: true
    clientCreditPct?: true
    providerPct?: true
    platformPct?: true
  }

  export type RefusalRuleCountAggregateInputType = {
    code?: true
    clientCreditPct?: true
    providerPct?: true
    platformPct?: true
    _all?: true
  }

  export type RefusalRuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefusalRule to aggregate.
     */
    where?: RefusalRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefusalRules to fetch.
     */
    orderBy?: RefusalRuleOrderByWithRelationInput | RefusalRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefusalRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefusalRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefusalRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefusalRules
    **/
    _count?: true | RefusalRuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefusalRuleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefusalRuleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefusalRuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefusalRuleMaxAggregateInputType
  }

  export type GetRefusalRuleAggregateType<T extends RefusalRuleAggregateArgs> = {
        [P in keyof T & keyof AggregateRefusalRule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefusalRule[P]>
      : GetScalarType<T[P], AggregateRefusalRule[P]>
  }




  export type RefusalRuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefusalRuleWhereInput
    orderBy?: RefusalRuleOrderByWithAggregationInput | RefusalRuleOrderByWithAggregationInput[]
    by: RefusalRuleScalarFieldEnum[] | RefusalRuleScalarFieldEnum
    having?: RefusalRuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefusalRuleCountAggregateInputType | true
    _avg?: RefusalRuleAvgAggregateInputType
    _sum?: RefusalRuleSumAggregateInputType
    _min?: RefusalRuleMinAggregateInputType
    _max?: RefusalRuleMaxAggregateInputType
  }

  export type RefusalRuleGroupByOutputType = {
    code: string
    clientCreditPct: number
    providerPct: number
    platformPct: number
    _count: RefusalRuleCountAggregateOutputType | null
    _avg: RefusalRuleAvgAggregateOutputType | null
    _sum: RefusalRuleSumAggregateOutputType | null
    _min: RefusalRuleMinAggregateOutputType | null
    _max: RefusalRuleMaxAggregateOutputType | null
  }

  type GetRefusalRuleGroupByPayload<T extends RefusalRuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefusalRuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefusalRuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefusalRuleGroupByOutputType[P]>
            : GetScalarType<T[P], RefusalRuleGroupByOutputType[P]>
        }
      >
    >


  export type RefusalRuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code?: boolean
    clientCreditPct?: boolean
    providerPct?: boolean
    platformPct?: boolean
  }, ExtArgs["result"]["refusalRule"]>

  export type RefusalRuleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code?: boolean
    clientCreditPct?: boolean
    providerPct?: boolean
    platformPct?: boolean
  }, ExtArgs["result"]["refusalRule"]>

  export type RefusalRuleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    code?: boolean
    clientCreditPct?: boolean
    providerPct?: boolean
    platformPct?: boolean
  }, ExtArgs["result"]["refusalRule"]>

  export type RefusalRuleSelectScalar = {
    code?: boolean
    clientCreditPct?: boolean
    providerPct?: boolean
    platformPct?: boolean
  }

  export type RefusalRuleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"code" | "clientCreditPct" | "providerPct" | "platformPct", ExtArgs["result"]["refusalRule"]>

  export type $RefusalRulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefusalRule"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      code: string
      clientCreditPct: number
      providerPct: number
      platformPct: number
    }, ExtArgs["result"]["refusalRule"]>
    composites: {}
  }

  type RefusalRuleGetPayload<S extends boolean | null | undefined | RefusalRuleDefaultArgs> = $Result.GetResult<Prisma.$RefusalRulePayload, S>

  type RefusalRuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefusalRuleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefusalRuleCountAggregateInputType | true
    }

  export interface RefusalRuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefusalRule'], meta: { name: 'RefusalRule' } }
    /**
     * Find zero or one RefusalRule that matches the filter.
     * @param {RefusalRuleFindUniqueArgs} args - Arguments to find a RefusalRule
     * @example
     * // Get one RefusalRule
     * const refusalRule = await prisma.refusalRule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefusalRuleFindUniqueArgs>(args: SelectSubset<T, RefusalRuleFindUniqueArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefusalRule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefusalRuleFindUniqueOrThrowArgs} args - Arguments to find a RefusalRule
     * @example
     * // Get one RefusalRule
     * const refusalRule = await prisma.refusalRule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefusalRuleFindUniqueOrThrowArgs>(args: SelectSubset<T, RefusalRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefusalRule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleFindFirstArgs} args - Arguments to find a RefusalRule
     * @example
     * // Get one RefusalRule
     * const refusalRule = await prisma.refusalRule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefusalRuleFindFirstArgs>(args?: SelectSubset<T, RefusalRuleFindFirstArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefusalRule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleFindFirstOrThrowArgs} args - Arguments to find a RefusalRule
     * @example
     * // Get one RefusalRule
     * const refusalRule = await prisma.refusalRule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefusalRuleFindFirstOrThrowArgs>(args?: SelectSubset<T, RefusalRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefusalRules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefusalRules
     * const refusalRules = await prisma.refusalRule.findMany()
     * 
     * // Get first 10 RefusalRules
     * const refusalRules = await prisma.refusalRule.findMany({ take: 10 })
     * 
     * // Only select the `code`
     * const refusalRuleWithCodeOnly = await prisma.refusalRule.findMany({ select: { code: true } })
     * 
     */
    findMany<T extends RefusalRuleFindManyArgs>(args?: SelectSubset<T, RefusalRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefusalRule.
     * @param {RefusalRuleCreateArgs} args - Arguments to create a RefusalRule.
     * @example
     * // Create one RefusalRule
     * const RefusalRule = await prisma.refusalRule.create({
     *   data: {
     *     // ... data to create a RefusalRule
     *   }
     * })
     * 
     */
    create<T extends RefusalRuleCreateArgs>(args: SelectSubset<T, RefusalRuleCreateArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefusalRules.
     * @param {RefusalRuleCreateManyArgs} args - Arguments to create many RefusalRules.
     * @example
     * // Create many RefusalRules
     * const refusalRule = await prisma.refusalRule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefusalRuleCreateManyArgs>(args?: SelectSubset<T, RefusalRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefusalRules and returns the data saved in the database.
     * @param {RefusalRuleCreateManyAndReturnArgs} args - Arguments to create many RefusalRules.
     * @example
     * // Create many RefusalRules
     * const refusalRule = await prisma.refusalRule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefusalRules and only return the `code`
     * const refusalRuleWithCodeOnly = await prisma.refusalRule.createManyAndReturn({
     *   select: { code: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefusalRuleCreateManyAndReturnArgs>(args?: SelectSubset<T, RefusalRuleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefusalRule.
     * @param {RefusalRuleDeleteArgs} args - Arguments to delete one RefusalRule.
     * @example
     * // Delete one RefusalRule
     * const RefusalRule = await prisma.refusalRule.delete({
     *   where: {
     *     // ... filter to delete one RefusalRule
     *   }
     * })
     * 
     */
    delete<T extends RefusalRuleDeleteArgs>(args: SelectSubset<T, RefusalRuleDeleteArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefusalRule.
     * @param {RefusalRuleUpdateArgs} args - Arguments to update one RefusalRule.
     * @example
     * // Update one RefusalRule
     * const refusalRule = await prisma.refusalRule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefusalRuleUpdateArgs>(args: SelectSubset<T, RefusalRuleUpdateArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefusalRules.
     * @param {RefusalRuleDeleteManyArgs} args - Arguments to filter RefusalRules to delete.
     * @example
     * // Delete a few RefusalRules
     * const { count } = await prisma.refusalRule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefusalRuleDeleteManyArgs>(args?: SelectSubset<T, RefusalRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefusalRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefusalRules
     * const refusalRule = await prisma.refusalRule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefusalRuleUpdateManyArgs>(args: SelectSubset<T, RefusalRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefusalRules and returns the data updated in the database.
     * @param {RefusalRuleUpdateManyAndReturnArgs} args - Arguments to update many RefusalRules.
     * @example
     * // Update many RefusalRules
     * const refusalRule = await prisma.refusalRule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefusalRules and only return the `code`
     * const refusalRuleWithCodeOnly = await prisma.refusalRule.updateManyAndReturn({
     *   select: { code: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefusalRuleUpdateManyAndReturnArgs>(args: SelectSubset<T, RefusalRuleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefusalRule.
     * @param {RefusalRuleUpsertArgs} args - Arguments to update or create a RefusalRule.
     * @example
     * // Update or create a RefusalRule
     * const refusalRule = await prisma.refusalRule.upsert({
     *   create: {
     *     // ... data to create a RefusalRule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefusalRule we want to update
     *   }
     * })
     */
    upsert<T extends RefusalRuleUpsertArgs>(args: SelectSubset<T, RefusalRuleUpsertArgs<ExtArgs>>): Prisma__RefusalRuleClient<$Result.GetResult<Prisma.$RefusalRulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefusalRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleCountArgs} args - Arguments to filter RefusalRules to count.
     * @example
     * // Count the number of RefusalRules
     * const count = await prisma.refusalRule.count({
     *   where: {
     *     // ... the filter for the RefusalRules we want to count
     *   }
     * })
    **/
    count<T extends RefusalRuleCountArgs>(
      args?: Subset<T, RefusalRuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefusalRuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefusalRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefusalRuleAggregateArgs>(args: Subset<T, RefusalRuleAggregateArgs>): Prisma.PrismaPromise<GetRefusalRuleAggregateType<T>>

    /**
     * Group by RefusalRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefusalRuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefusalRuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefusalRuleGroupByArgs['orderBy'] }
        : { orderBy?: RefusalRuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefusalRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefusalRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefusalRule model
   */
  readonly fields: RefusalRuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefusalRule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefusalRuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefusalRule model
   */
  interface RefusalRuleFieldRefs {
    readonly code: FieldRef<"RefusalRule", 'String'>
    readonly clientCreditPct: FieldRef<"RefusalRule", 'Int'>
    readonly providerPct: FieldRef<"RefusalRule", 'Int'>
    readonly platformPct: FieldRef<"RefusalRule", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RefusalRule findUnique
   */
  export type RefusalRuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter, which RefusalRule to fetch.
     */
    where: RefusalRuleWhereUniqueInput
  }

  /**
   * RefusalRule findUniqueOrThrow
   */
  export type RefusalRuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter, which RefusalRule to fetch.
     */
    where: RefusalRuleWhereUniqueInput
  }

  /**
   * RefusalRule findFirst
   */
  export type RefusalRuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter, which RefusalRule to fetch.
     */
    where?: RefusalRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefusalRules to fetch.
     */
    orderBy?: RefusalRuleOrderByWithRelationInput | RefusalRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefusalRules.
     */
    cursor?: RefusalRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefusalRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefusalRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefusalRules.
     */
    distinct?: RefusalRuleScalarFieldEnum | RefusalRuleScalarFieldEnum[]
  }

  /**
   * RefusalRule findFirstOrThrow
   */
  export type RefusalRuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter, which RefusalRule to fetch.
     */
    where?: RefusalRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefusalRules to fetch.
     */
    orderBy?: RefusalRuleOrderByWithRelationInput | RefusalRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefusalRules.
     */
    cursor?: RefusalRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefusalRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefusalRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefusalRules.
     */
    distinct?: RefusalRuleScalarFieldEnum | RefusalRuleScalarFieldEnum[]
  }

  /**
   * RefusalRule findMany
   */
  export type RefusalRuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter, which RefusalRules to fetch.
     */
    where?: RefusalRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefusalRules to fetch.
     */
    orderBy?: RefusalRuleOrderByWithRelationInput | RefusalRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefusalRules.
     */
    cursor?: RefusalRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefusalRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefusalRules.
     */
    skip?: number
    distinct?: RefusalRuleScalarFieldEnum | RefusalRuleScalarFieldEnum[]
  }

  /**
   * RefusalRule create
   */
  export type RefusalRuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * The data needed to create a RefusalRule.
     */
    data: XOR<RefusalRuleCreateInput, RefusalRuleUncheckedCreateInput>
  }

  /**
   * RefusalRule createMany
   */
  export type RefusalRuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefusalRules.
     */
    data: RefusalRuleCreateManyInput | RefusalRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefusalRule createManyAndReturn
   */
  export type RefusalRuleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * The data used to create many RefusalRules.
     */
    data: RefusalRuleCreateManyInput | RefusalRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefusalRule update
   */
  export type RefusalRuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * The data needed to update a RefusalRule.
     */
    data: XOR<RefusalRuleUpdateInput, RefusalRuleUncheckedUpdateInput>
    /**
     * Choose, which RefusalRule to update.
     */
    where: RefusalRuleWhereUniqueInput
  }

  /**
   * RefusalRule updateMany
   */
  export type RefusalRuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefusalRules.
     */
    data: XOR<RefusalRuleUpdateManyMutationInput, RefusalRuleUncheckedUpdateManyInput>
    /**
     * Filter which RefusalRules to update
     */
    where?: RefusalRuleWhereInput
    /**
     * Limit how many RefusalRules to update.
     */
    limit?: number
  }

  /**
   * RefusalRule updateManyAndReturn
   */
  export type RefusalRuleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * The data used to update RefusalRules.
     */
    data: XOR<RefusalRuleUpdateManyMutationInput, RefusalRuleUncheckedUpdateManyInput>
    /**
     * Filter which RefusalRules to update
     */
    where?: RefusalRuleWhereInput
    /**
     * Limit how many RefusalRules to update.
     */
    limit?: number
  }

  /**
   * RefusalRule upsert
   */
  export type RefusalRuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * The filter to search for the RefusalRule to update in case it exists.
     */
    where: RefusalRuleWhereUniqueInput
    /**
     * In case the RefusalRule found by the `where` argument doesn't exist, create a new RefusalRule with this data.
     */
    create: XOR<RefusalRuleCreateInput, RefusalRuleUncheckedCreateInput>
    /**
     * In case the RefusalRule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefusalRuleUpdateInput, RefusalRuleUncheckedUpdateInput>
  }

  /**
   * RefusalRule delete
   */
  export type RefusalRuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
    /**
     * Filter which RefusalRule to delete.
     */
    where: RefusalRuleWhereUniqueInput
  }

  /**
   * RefusalRule deleteMany
   */
  export type RefusalRuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefusalRules to delete
     */
    where?: RefusalRuleWhereInput
    /**
     * Limit how many RefusalRules to delete.
     */
    limit?: number
  }

  /**
   * RefusalRule without action
   */
  export type RefusalRuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefusalRule
     */
    select?: RefusalRuleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefusalRule
     */
    omit?: RefusalRuleOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    role: 'role',
    phoneE164: 'phoneE164',
    whatsappId: 'whatsappId',
    cpf: 'cpf',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const UserRoleAssignmentScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    roleId: 'roleId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserRoleAssignmentScalarFieldEnum = (typeof UserRoleAssignmentScalarFieldEnum)[keyof typeof UserRoleAssignmentScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    expiresAt: 'expiresAt',
    token: 'token',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    userId: 'userId'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    accountId: 'accountId',
    providerId: 'providerId',
    userId: 'userId',
    accessToken: 'accessToken',
    refreshToken: 'refreshToken',
    idToken: 'idToken',
    accessTokenExpiresAt: 'accessTokenExpiresAt',
    refreshTokenExpiresAt: 'refreshTokenExpiresAt',
    scope: 'scope',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const VerificationScalarFieldEnum: {
    id: 'id',
    identifier: 'identifier',
    value: 'value',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VerificationScalarFieldEnum = (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum]


  export const ProviderRequestScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    services: 'services',
    description: 'description',
    experience: 'experience',
    phone: 'phone',
    cep: 'cep',
    address: 'address',
    documentNumber: 'documentNumber',
    portfolioLinks: 'portfolioLinks',
    portfolioLinksJson: 'portfolioLinksJson',
    status: 'status',
    rejectionReason: 'rejectionReason',
    reviewedBy: 'reviewedBy',
    reviewedAt: 'reviewedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProviderRequestScalarFieldEnum = (typeof ProviderRequestScalarFieldEnum)[keyof typeof ProviderRequestScalarFieldEnum]


  export const AddressScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    label: 'label',
    cep: 'cep',
    street: 'street',
    number: 'number',
    complement: 'complement',
    neighborhood: 'neighborhood',
    city: 'city',
    state: 'state',
    lat: 'lat',
    lon: 'lon',
    createdAt: 'createdAt'
  };

  export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


  export const ProviderProfileScalarFieldEnum: {
    userId: 'userId',
    bio: 'bio',
    radiusKm: 'radiusKm',
    avgRating: 'avgRating',
    totalReviews: 'totalReviews',
    acceptRate30d: 'acceptRate30d',
    responseP50S: 'responseP50S',
    noShow30d: 'noShow30d'
  };

  export type ProviderProfileScalarFieldEnum = (typeof ProviderProfileScalarFieldEnum)[keyof typeof ProviderProfileScalarFieldEnum]


  export const ProviderAvailabilityScalarFieldEnum: {
    id: 'id',
    providerId: 'providerId',
    weekday: 'weekday',
    startTime: 'startTime',
    endTime: 'endTime'
  };

  export type ProviderAvailabilityScalarFieldEnum = (typeof ProviderAvailabilityScalarFieldEnum)[keyof typeof ProviderAvailabilityScalarFieldEnum]


  export const ProviderCategoryScalarFieldEnum: {
    id: 'id',
    providerId: 'providerId',
    categoryId: 'categoryId',
    minPriceCents: 'minPriceCents',
    active: 'active',
    updatedAt: 'updatedAt',
    levelWeight: 'levelWeight',
    expWeight: 'expWeight',
    score: 'score',
    isAvailable: 'isAvailable'
  };

  export type ProviderCategoryScalarFieldEnum = (typeof ProviderCategoryScalarFieldEnum)[keyof typeof ProviderCategoryScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    active: 'active'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    providerId: 'providerId',
    addressId: 'addressId',
    categoryId: 'categoryId',
    description: 'description',
    status: 'status',
    depositMethod: 'depositMethod',
    depositBaseAvgCents: 'depositBaseAvgCents',
    depositCents: 'depositCents',
    slotStart: 'slotStart',
    slotEnd: 'slotEnd',
    finalPriceCents: 'finalPriceCents',
    reviewStatus: 'reviewStatus',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderSlotScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    label: 'label',
    startAt: 'startAt',
    endAt: 'endAt',
    origin: 'origin',
    chosen: 'chosen'
  };

  export type OrderSlotScalarFieldEnum = (typeof OrderSlotScalarFieldEnum)[keyof typeof OrderSlotScalarFieldEnum]


  export const OrderCategoryScalarFieldEnum: {
    orderId: 'orderId',
    categorySlug: 'categorySlug',
    confidence: 'confidence',
    rank: 'rank'
  };

  export type OrderCategoryScalarFieldEnum = (typeof OrderCategoryScalarFieldEnum)[keyof typeof OrderCategoryScalarFieldEnum]


  export const OrderInvitationScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    providerId: 'providerId',
    slotId: 'slotId',
    score: 'score',
    sentAt: 'sentAt',
    respondedAt: 'respondedAt',
    response: 'response',
    waMessageId: 'waMessageId',
    waRemoteJid: 'waRemoteJid',
    categorySlug: 'categorySlug',
    status: 'status',
    expiresAt: 'expiresAt',
    meta: 'meta'
  };

  export type OrderInvitationScalarFieldEnum = (typeof OrderInvitationScalarFieldEnum)[keyof typeof OrderInvitationScalarFieldEnum]


  export const OrderStatusHistoryScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    oldStatus: 'oldStatus',
    newStatus: 'newStatus',
    at: 'at',
    byUserId: 'byUserId'
  };

  export type OrderStatusHistoryScalarFieldEnum = (typeof OrderStatusHistoryScalarFieldEnum)[keyof typeof OrderStatusHistoryScalarFieldEnum]


  export const OrderReviewScalarFieldEnum: {
    orderId: 'orderId',
    clientId: 'clientId',
    providerId: 'providerId',
    rating: 'rating',
    comment: 'comment',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderReviewScalarFieldEnum = (typeof OrderReviewScalarFieldEnum)[keyof typeof OrderReviewScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    kind: 'kind',
    gateway: 'gateway',
    gatewayPaymentId: 'gatewayPaymentId',
    status: 'status',
    amountCents: 'amountCents',
    createdAt: 'createdAt',
    approvedAt: 'approvedAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const PaymentEventScalarFieldEnum: {
    id: 'id',
    paymentId: 'paymentId',
    orderId: 'orderId',
    rawPayload: 'rawPayload',
    receivedAt: 'receivedAt',
    signatureOk: 'signatureOk'
  };

  export type PaymentEventScalarFieldEnum = (typeof PaymentEventScalarFieldEnum)[keyof typeof PaymentEventScalarFieldEnum]


  export const CommissionScalarFieldEnum: {
    orderId: 'orderId',
    finalPriceCents: 'finalPriceCents',
    rateBp: 'rateBp',
    minCents: 'minCents',
    maxCents: 'maxCents',
    computedCents: 'computedCents',
    computedAt: 'computedAt'
  };

  export type CommissionScalarFieldEnum = (typeof CommissionScalarFieldEnum)[keyof typeof CommissionScalarFieldEnum]


  export const ClientCreditScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    orderId: 'orderId',
    amountCents: 'amountCents',
    expiresAt: 'expiresAt',
    usedCents: 'usedCents',
    createdAt: 'createdAt'
  };

  export type ClientCreditScalarFieldEnum = (typeof ClientCreditScalarFieldEnum)[keyof typeof ClientCreditScalarFieldEnum]


  export const ProviderPayoutScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    providerId: 'providerId',
    grossCents: 'grossCents',
    commissionCents: 'commissionCents',
    netCents: 'netCents',
    status: 'status',
    paidAt: 'paidAt'
  };

  export type ProviderPayoutScalarFieldEnum = (typeof ProviderPayoutScalarFieldEnum)[keyof typeof ProviderPayoutScalarFieldEnum]


  export const MatchScoreScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    providerId: 'providerId',
    distanceKm: 'distanceKm',
    ratingNorm: 'ratingNorm',
    acceptRate: 'acceptRate',
    responseFast: 'responseFast',
    reliability: 'reliability',
    finalScore: 'finalScore',
    createdAt: 'createdAt'
  };

  export type MatchScoreScalarFieldEnum = (typeof MatchScoreScalarFieldEnum)[keyof typeof MatchScoreScalarFieldEnum]


  export const LlmClassificationScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    inputText: 'inputText',
    categoryId: 'categoryId',
    confidence: 'confidence',
    createdAt: 'createdAt'
  };

  export type LlmClassificationScalarFieldEnum = (typeof LlmClassificationScalarFieldEnum)[keyof typeof LlmClassificationScalarFieldEnum]


  export const RefusalRuleScalarFieldEnum: {
    code: 'code',
    clientCreditPct: 'clientCreditPct',
    providerPct: 'providerPct',
    platformPct: 'platformPct'
  };

  export type RefusalRuleScalarFieldEnum = (typeof RefusalRuleScalarFieldEnum)[keyof typeof RefusalRuleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'ProviderRequestStatus'
   */
  export type EnumProviderRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderRequestStatus'>
    


  /**
   * Reference to a field of type 'ProviderRequestStatus[]'
   */
  export type ListEnumProviderRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProviderRequestStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    image?: StringNullableFilter<"User"> | string | null
    role?: StringNullableFilter<"User"> | string | null
    phoneE164?: StringNullableFilter<"User"> | string | null
    whatsappId?: StringNullableFilter<"User"> | string | null
    cpf?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    userRoles?: UserRoleAssignmentListRelationFilter
    addresses?: AddressListRelationFilter
    providerRequests?: ProviderRequestListRelationFilter
    reviewedRequests?: ProviderRequestListRelationFilter
    providerProfile?: XOR<ProviderProfileNullableScalarRelationFilter, ProviderProfileWhereInput> | null
    providerAvailability?: ProviderAvailabilityListRelationFilter
    providerCategories?: ProviderCategoryListRelationFilter
    providerPayouts?: ProviderPayoutListRelationFilter
    clientCredits?: ClientCreditListRelationFilter
    ordersAsClient?: OrderListRelationFilter
    ordersAsProvider?: OrderListRelationFilter
    orderInvitations?: OrderInvitationListRelationFilter
    orderReviewsAsClient?: OrderReviewListRelationFilter
    orderReviewsAsProvider?: OrderReviewListRelationFilter
    orderStatusHistory?: OrderStatusHistoryListRelationFilter
    matchScores?: MatchScoreListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    image?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    phoneE164?: SortOrderInput | SortOrder
    whatsappId?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    userRoles?: UserRoleAssignmentOrderByRelationAggregateInput
    addresses?: AddressOrderByRelationAggregateInput
    providerRequests?: ProviderRequestOrderByRelationAggregateInput
    reviewedRequests?: ProviderRequestOrderByRelationAggregateInput
    providerProfile?: ProviderProfileOrderByWithRelationInput
    providerAvailability?: ProviderAvailabilityOrderByRelationAggregateInput
    providerCategories?: ProviderCategoryOrderByRelationAggregateInput
    providerPayouts?: ProviderPayoutOrderByRelationAggregateInput
    clientCredits?: ClientCreditOrderByRelationAggregateInput
    ordersAsClient?: OrderOrderByRelationAggregateInput
    ordersAsProvider?: OrderOrderByRelationAggregateInput
    orderInvitations?: OrderInvitationOrderByRelationAggregateInput
    orderReviewsAsClient?: OrderReviewOrderByRelationAggregateInput
    orderReviewsAsProvider?: OrderReviewOrderByRelationAggregateInput
    orderStatusHistory?: OrderStatusHistoryOrderByRelationAggregateInput
    matchScores?: MatchScoreOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    phoneE164?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    image?: StringNullableFilter<"User"> | string | null
    role?: StringNullableFilter<"User"> | string | null
    whatsappId?: StringNullableFilter<"User"> | string | null
    cpf?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    userRoles?: UserRoleAssignmentListRelationFilter
    addresses?: AddressListRelationFilter
    providerRequests?: ProviderRequestListRelationFilter
    reviewedRequests?: ProviderRequestListRelationFilter
    providerProfile?: XOR<ProviderProfileNullableScalarRelationFilter, ProviderProfileWhereInput> | null
    providerAvailability?: ProviderAvailabilityListRelationFilter
    providerCategories?: ProviderCategoryListRelationFilter
    providerPayouts?: ProviderPayoutListRelationFilter
    clientCredits?: ClientCreditListRelationFilter
    ordersAsClient?: OrderListRelationFilter
    ordersAsProvider?: OrderListRelationFilter
    orderInvitations?: OrderInvitationListRelationFilter
    orderReviewsAsClient?: OrderReviewListRelationFilter
    orderReviewsAsProvider?: OrderReviewListRelationFilter
    orderStatusHistory?: OrderStatusHistoryListRelationFilter
    matchScores?: MatchScoreListRelationFilter
  }, "id" | "email" | "phoneE164">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    image?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    phoneE164?: SortOrderInput | SortOrder
    whatsappId?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: StringNullableWithAggregatesFilter<"User"> | string | null
    phoneE164?: StringNullableWithAggregatesFilter<"User"> | string | null
    whatsappId?: StringNullableWithAggregatesFilter<"User"> | string | null
    cpf?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: StringFilter<"Role"> | string
    name?: EnumUserRoleFilter<"Role"> | $Enums.UserRole
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    userRoles?: UserRoleAssignmentListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userRoles?: UserRoleAssignmentOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: $Enums.UserRole
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    userRoles?: UserRoleAssignmentListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Role"> | string
    name?: EnumUserRoleWithAggregatesFilter<"Role"> | $Enums.UserRole
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
  }

  export type UserRoleAssignmentWhereInput = {
    AND?: UserRoleAssignmentWhereInput | UserRoleAssignmentWhereInput[]
    OR?: UserRoleAssignmentWhereInput[]
    NOT?: UserRoleAssignmentWhereInput | UserRoleAssignmentWhereInput[]
    id?: StringFilter<"UserRoleAssignment"> | string
    userId?: StringFilter<"UserRoleAssignment"> | string
    roleId?: StringFilter<"UserRoleAssignment"> | string
    createdAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserRoleAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: RoleOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type UserRoleAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_roleId?: UserRoleAssignmentUserIdRoleIdCompoundUniqueInput
    AND?: UserRoleAssignmentWhereInput | UserRoleAssignmentWhereInput[]
    OR?: UserRoleAssignmentWhereInput[]
    NOT?: UserRoleAssignmentWhereInput | UserRoleAssignmentWhereInput[]
    userId?: StringFilter<"UserRoleAssignment"> | string
    roleId?: StringFilter<"UserRoleAssignment"> | string
    createdAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId_roleId">

  export type UserRoleAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserRoleAssignmentCountOrderByAggregateInput
    _max?: UserRoleAssignmentMaxOrderByAggregateInput
    _min?: UserRoleAssignmentMinOrderByAggregateInput
  }

  export type UserRoleAssignmentScalarWhereWithAggregatesInput = {
    AND?: UserRoleAssignmentScalarWhereWithAggregatesInput | UserRoleAssignmentScalarWhereWithAggregatesInput[]
    OR?: UserRoleAssignmentScalarWhereWithAggregatesInput[]
    NOT?: UserRoleAssignmentScalarWhereWithAggregatesInput | UserRoleAssignmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserRoleAssignment"> | string
    userId?: StringWithAggregatesFilter<"UserRoleAssignment"> | string
    roleId?: StringWithAggregatesFilter<"UserRoleAssignment"> | string
    createdAt?: DateTimeWithAggregatesFilter<"UserRoleAssignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserRoleAssignment"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    token?: StringFilter<"Session"> | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    token?: StringWithAggregatesFilter<"Session"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    ipAddress?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userId?: StringWithAggregatesFilter<"Session"> | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    accountId?: StringWithAggregatesFilter<"Account"> | string
    providerId?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    accessToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    refreshToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    idToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    password?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type VerificationWhereInput = {
    AND?: VerificationWhereInput | VerificationWhereInput[]
    OR?: VerificationWhereInput[]
    NOT?: VerificationWhereInput | VerificationWhereInput[]
    id?: StringFilter<"Verification"> | string
    identifier?: StringFilter<"Verification"> | string
    value?: StringFilter<"Verification"> | string
    expiresAt?: DateTimeFilter<"Verification"> | Date | string
    createdAt?: DateTimeFilter<"Verification"> | Date | string
    updatedAt?: DateTimeFilter<"Verification"> | Date | string
  }

  export type VerificationOrderByWithRelationInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VerificationWhereInput | VerificationWhereInput[]
    OR?: VerificationWhereInput[]
    NOT?: VerificationWhereInput | VerificationWhereInput[]
    identifier?: StringFilter<"Verification"> | string
    value?: StringFilter<"Verification"> | string
    expiresAt?: DateTimeFilter<"Verification"> | Date | string
    createdAt?: DateTimeFilter<"Verification"> | Date | string
    updatedAt?: DateTimeFilter<"Verification"> | Date | string
  }, "id">

  export type VerificationOrderByWithAggregationInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VerificationCountOrderByAggregateInput
    _max?: VerificationMaxOrderByAggregateInput
    _min?: VerificationMinOrderByAggregateInput
  }

  export type VerificationScalarWhereWithAggregatesInput = {
    AND?: VerificationScalarWhereWithAggregatesInput | VerificationScalarWhereWithAggregatesInput[]
    OR?: VerificationScalarWhereWithAggregatesInput[]
    NOT?: VerificationScalarWhereWithAggregatesInput | VerificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Verification"> | string
    identifier?: StringWithAggregatesFilter<"Verification"> | string
    value?: StringWithAggregatesFilter<"Verification"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Verification"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Verification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Verification"> | Date | string
  }

  export type ProviderRequestWhereInput = {
    AND?: ProviderRequestWhereInput | ProviderRequestWhereInput[]
    OR?: ProviderRequestWhereInput[]
    NOT?: ProviderRequestWhereInput | ProviderRequestWhereInput[]
    id?: StringFilter<"ProviderRequest"> | string
    userId?: StringFilter<"ProviderRequest"> | string
    services?: JsonNullableFilter<"ProviderRequest">
    description?: StringFilter<"ProviderRequest"> | string
    experience?: StringFilter<"ProviderRequest"> | string
    phone?: StringFilter<"ProviderRequest"> | string
    cep?: StringNullableFilter<"ProviderRequest"> | string | null
    address?: StringFilter<"ProviderRequest"> | string
    documentNumber?: StringFilter<"ProviderRequest"> | string
    portfolioLinks?: StringNullableFilter<"ProviderRequest"> | string | null
    portfolioLinksJson?: JsonNullableFilter<"ProviderRequest">
    status?: EnumProviderRequestStatusFilter<"ProviderRequest"> | $Enums.ProviderRequestStatus
    rejectionReason?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedBy?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedAt?: DateTimeNullableFilter<"ProviderRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ProviderRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderRequest"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    reviewedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ProviderRequestOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    services?: SortOrderInput | SortOrder
    description?: SortOrder
    experience?: SortOrder
    phone?: SortOrder
    cep?: SortOrderInput | SortOrder
    address?: SortOrder
    documentNumber?: SortOrder
    portfolioLinks?: SortOrderInput | SortOrder
    portfolioLinksJson?: SortOrderInput | SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    reviewedByUser?: UserOrderByWithRelationInput
  }

  export type ProviderRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProviderRequestWhereInput | ProviderRequestWhereInput[]
    OR?: ProviderRequestWhereInput[]
    NOT?: ProviderRequestWhereInput | ProviderRequestWhereInput[]
    userId?: StringFilter<"ProviderRequest"> | string
    services?: JsonNullableFilter<"ProviderRequest">
    description?: StringFilter<"ProviderRequest"> | string
    experience?: StringFilter<"ProviderRequest"> | string
    phone?: StringFilter<"ProviderRequest"> | string
    cep?: StringNullableFilter<"ProviderRequest"> | string | null
    address?: StringFilter<"ProviderRequest"> | string
    documentNumber?: StringFilter<"ProviderRequest"> | string
    portfolioLinks?: StringNullableFilter<"ProviderRequest"> | string | null
    portfolioLinksJson?: JsonNullableFilter<"ProviderRequest">
    status?: EnumProviderRequestStatusFilter<"ProviderRequest"> | $Enums.ProviderRequestStatus
    rejectionReason?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedBy?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedAt?: DateTimeNullableFilter<"ProviderRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ProviderRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderRequest"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    reviewedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ProviderRequestOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    services?: SortOrderInput | SortOrder
    description?: SortOrder
    experience?: SortOrder
    phone?: SortOrder
    cep?: SortOrderInput | SortOrder
    address?: SortOrder
    documentNumber?: SortOrder
    portfolioLinks?: SortOrderInput | SortOrder
    portfolioLinksJson?: SortOrderInput | SortOrder
    status?: SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProviderRequestCountOrderByAggregateInput
    _max?: ProviderRequestMaxOrderByAggregateInput
    _min?: ProviderRequestMinOrderByAggregateInput
  }

  export type ProviderRequestScalarWhereWithAggregatesInput = {
    AND?: ProviderRequestScalarWhereWithAggregatesInput | ProviderRequestScalarWhereWithAggregatesInput[]
    OR?: ProviderRequestScalarWhereWithAggregatesInput[]
    NOT?: ProviderRequestScalarWhereWithAggregatesInput | ProviderRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderRequest"> | string
    userId?: StringWithAggregatesFilter<"ProviderRequest"> | string
    services?: JsonNullableWithAggregatesFilter<"ProviderRequest">
    description?: StringWithAggregatesFilter<"ProviderRequest"> | string
    experience?: StringWithAggregatesFilter<"ProviderRequest"> | string
    phone?: StringWithAggregatesFilter<"ProviderRequest"> | string
    cep?: StringNullableWithAggregatesFilter<"ProviderRequest"> | string | null
    address?: StringWithAggregatesFilter<"ProviderRequest"> | string
    documentNumber?: StringWithAggregatesFilter<"ProviderRequest"> | string
    portfolioLinks?: StringNullableWithAggregatesFilter<"ProviderRequest"> | string | null
    portfolioLinksJson?: JsonNullableWithAggregatesFilter<"ProviderRequest">
    status?: EnumProviderRequestStatusWithAggregatesFilter<"ProviderRequest"> | $Enums.ProviderRequestStatus
    rejectionReason?: StringNullableWithAggregatesFilter<"ProviderRequest"> | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"ProviderRequest"> | string | null
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"ProviderRequest"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProviderRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProviderRequest"> | Date | string
  }

  export type AddressWhereInput = {
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    id?: StringFilter<"Address"> | string
    userId?: StringNullableFilter<"Address"> | string | null
    label?: StringNullableFilter<"Address"> | string | null
    cep?: StringNullableFilter<"Address"> | string | null
    street?: StringNullableFilter<"Address"> | string | null
    number?: StringNullableFilter<"Address"> | string | null
    complement?: StringNullableFilter<"Address"> | string | null
    neighborhood?: StringNullableFilter<"Address"> | string | null
    city?: StringNullableFilter<"Address"> | string | null
    state?: StringNullableFilter<"Address"> | string | null
    lat?: FloatNullableFilter<"Address"> | number | null
    lon?: FloatNullableFilter<"Address"> | number | null
    createdAt?: DateTimeFilter<"Address"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    orders?: OrderListRelationFilter
  }

  export type AddressOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    street?: SortOrderInput | SortOrder
    number?: SortOrderInput | SortOrder
    complement?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lon?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    orders?: OrderOrderByRelationAggregateInput
  }

  export type AddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    userId?: StringNullableFilter<"Address"> | string | null
    label?: StringNullableFilter<"Address"> | string | null
    cep?: StringNullableFilter<"Address"> | string | null
    street?: StringNullableFilter<"Address"> | string | null
    number?: StringNullableFilter<"Address"> | string | null
    complement?: StringNullableFilter<"Address"> | string | null
    neighborhood?: StringNullableFilter<"Address"> | string | null
    city?: StringNullableFilter<"Address"> | string | null
    state?: StringNullableFilter<"Address"> | string | null
    lat?: FloatNullableFilter<"Address"> | number | null
    lon?: FloatNullableFilter<"Address"> | number | null
    createdAt?: DateTimeFilter<"Address"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    orders?: OrderListRelationFilter
  }, "id">

  export type AddressOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    cep?: SortOrderInput | SortOrder
    street?: SortOrderInput | SortOrder
    number?: SortOrderInput | SortOrder
    complement?: SortOrderInput | SortOrder
    neighborhood?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lon?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AddressCountOrderByAggregateInput
    _avg?: AddressAvgOrderByAggregateInput
    _max?: AddressMaxOrderByAggregateInput
    _min?: AddressMinOrderByAggregateInput
    _sum?: AddressSumOrderByAggregateInput
  }

  export type AddressScalarWhereWithAggregatesInput = {
    AND?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    OR?: AddressScalarWhereWithAggregatesInput[]
    NOT?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Address"> | string
    userId?: StringNullableWithAggregatesFilter<"Address"> | string | null
    label?: StringNullableWithAggregatesFilter<"Address"> | string | null
    cep?: StringNullableWithAggregatesFilter<"Address"> | string | null
    street?: StringNullableWithAggregatesFilter<"Address"> | string | null
    number?: StringNullableWithAggregatesFilter<"Address"> | string | null
    complement?: StringNullableWithAggregatesFilter<"Address"> | string | null
    neighborhood?: StringNullableWithAggregatesFilter<"Address"> | string | null
    city?: StringNullableWithAggregatesFilter<"Address"> | string | null
    state?: StringNullableWithAggregatesFilter<"Address"> | string | null
    lat?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    lon?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Address"> | Date | string
  }

  export type ProviderProfileWhereInput = {
    AND?: ProviderProfileWhereInput | ProviderProfileWhereInput[]
    OR?: ProviderProfileWhereInput[]
    NOT?: ProviderProfileWhereInput | ProviderProfileWhereInput[]
    userId?: StringFilter<"ProviderProfile"> | string
    bio?: StringNullableFilter<"ProviderProfile"> | string | null
    radiusKm?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"ProviderProfile"> | number
    acceptRate30d?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFilter<"ProviderProfile"> | number
    noShow30d?: IntFilter<"ProviderProfile"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProviderProfileOrderByWithRelationInput = {
    userId?: SortOrder
    bio?: SortOrderInput | SortOrder
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type ProviderProfileWhereUniqueInput = Prisma.AtLeast<{
    userId?: string
    AND?: ProviderProfileWhereInput | ProviderProfileWhereInput[]
    OR?: ProviderProfileWhereInput[]
    NOT?: ProviderProfileWhereInput | ProviderProfileWhereInput[]
    bio?: StringNullableFilter<"ProviderProfile"> | string | null
    radiusKm?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"ProviderProfile"> | number
    acceptRate30d?: DecimalFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFilter<"ProviderProfile"> | number
    noShow30d?: IntFilter<"ProviderProfile"> | number
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "userId">

  export type ProviderProfileOrderByWithAggregationInput = {
    userId?: SortOrder
    bio?: SortOrderInput | SortOrder
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
    _count?: ProviderProfileCountOrderByAggregateInput
    _avg?: ProviderProfileAvgOrderByAggregateInput
    _max?: ProviderProfileMaxOrderByAggregateInput
    _min?: ProviderProfileMinOrderByAggregateInput
    _sum?: ProviderProfileSumOrderByAggregateInput
  }

  export type ProviderProfileScalarWhereWithAggregatesInput = {
    AND?: ProviderProfileScalarWhereWithAggregatesInput | ProviderProfileScalarWhereWithAggregatesInput[]
    OR?: ProviderProfileScalarWhereWithAggregatesInput[]
    NOT?: ProviderProfileScalarWhereWithAggregatesInput | ProviderProfileScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"ProviderProfile"> | string
    bio?: StringNullableWithAggregatesFilter<"ProviderProfile"> | string | null
    radiusKm?: DecimalWithAggregatesFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalWithAggregatesFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntWithAggregatesFilter<"ProviderProfile"> | number
    acceptRate30d?: DecimalWithAggregatesFilter<"ProviderProfile"> | Decimal | DecimalJsLike | number | string
    responseP50S?: IntWithAggregatesFilter<"ProviderProfile"> | number
    noShow30d?: IntWithAggregatesFilter<"ProviderProfile"> | number
  }

  export type ProviderAvailabilityWhereInput = {
    AND?: ProviderAvailabilityWhereInput | ProviderAvailabilityWhereInput[]
    OR?: ProviderAvailabilityWhereInput[]
    NOT?: ProviderAvailabilityWhereInput | ProviderAvailabilityWhereInput[]
    id?: StringFilter<"ProviderAvailability"> | string
    providerId?: StringFilter<"ProviderAvailability"> | string
    weekday?: IntFilter<"ProviderAvailability"> | number
    startTime?: StringFilter<"ProviderAvailability"> | string
    endTime?: StringFilter<"ProviderAvailability"> | string
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProviderAvailabilityOrderByWithRelationInput = {
    id?: SortOrder
    providerId?: SortOrder
    weekday?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    provider?: UserOrderByWithRelationInput
  }

  export type ProviderAvailabilityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    providerId_weekday_startTime_endTime?: ProviderAvailabilityProviderIdWeekdayStartTimeEndTimeCompoundUniqueInput
    AND?: ProviderAvailabilityWhereInput | ProviderAvailabilityWhereInput[]
    OR?: ProviderAvailabilityWhereInput[]
    NOT?: ProviderAvailabilityWhereInput | ProviderAvailabilityWhereInput[]
    providerId?: StringFilter<"ProviderAvailability"> | string
    weekday?: IntFilter<"ProviderAvailability"> | number
    startTime?: StringFilter<"ProviderAvailability"> | string
    endTime?: StringFilter<"ProviderAvailability"> | string
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "providerId_weekday_startTime_endTime">

  export type ProviderAvailabilityOrderByWithAggregationInput = {
    id?: SortOrder
    providerId?: SortOrder
    weekday?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    _count?: ProviderAvailabilityCountOrderByAggregateInput
    _avg?: ProviderAvailabilityAvgOrderByAggregateInput
    _max?: ProviderAvailabilityMaxOrderByAggregateInput
    _min?: ProviderAvailabilityMinOrderByAggregateInput
    _sum?: ProviderAvailabilitySumOrderByAggregateInput
  }

  export type ProviderAvailabilityScalarWhereWithAggregatesInput = {
    AND?: ProviderAvailabilityScalarWhereWithAggregatesInput | ProviderAvailabilityScalarWhereWithAggregatesInput[]
    OR?: ProviderAvailabilityScalarWhereWithAggregatesInput[]
    NOT?: ProviderAvailabilityScalarWhereWithAggregatesInput | ProviderAvailabilityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderAvailability"> | string
    providerId?: StringWithAggregatesFilter<"ProviderAvailability"> | string
    weekday?: IntWithAggregatesFilter<"ProviderAvailability"> | number
    startTime?: StringWithAggregatesFilter<"ProviderAvailability"> | string
    endTime?: StringWithAggregatesFilter<"ProviderAvailability"> | string
  }

  export type ProviderCategoryWhereInput = {
    AND?: ProviderCategoryWhereInput | ProviderCategoryWhereInput[]
    OR?: ProviderCategoryWhereInput[]
    NOT?: ProviderCategoryWhereInput | ProviderCategoryWhereInput[]
    id?: StringFilter<"ProviderCategory"> | string
    providerId?: StringFilter<"ProviderCategory"> | string
    categoryId?: StringFilter<"ProviderCategory"> | string
    minPriceCents?: IntFilter<"ProviderCategory"> | number
    active?: BoolFilter<"ProviderCategory"> | boolean
    updatedAt?: DateTimeFilter<"ProviderCategory"> | Date | string
    levelWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    expWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    score?: DecimalNullableFilter<"ProviderCategory"> | Decimal | DecimalJsLike | number | string | null
    isAvailable?: BoolNullableFilter<"ProviderCategory"> | boolean | null
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
  }

  export type ProviderCategoryOrderByWithRelationInput = {
    id?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
    minPriceCents?: SortOrder
    active?: SortOrder
    updatedAt?: SortOrder
    levelWeight?: SortOrderInput | SortOrder
    expWeight?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    isAvailable?: SortOrderInput | SortOrder
    provider?: UserOrderByWithRelationInput
    category?: CategoryOrderByWithRelationInput
  }

  export type ProviderCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    providerId_categoryId?: ProviderCategoryProviderIdCategoryIdCompoundUniqueInput
    AND?: ProviderCategoryWhereInput | ProviderCategoryWhereInput[]
    OR?: ProviderCategoryWhereInput[]
    NOT?: ProviderCategoryWhereInput | ProviderCategoryWhereInput[]
    providerId?: StringFilter<"ProviderCategory"> | string
    categoryId?: StringFilter<"ProviderCategory"> | string
    minPriceCents?: IntFilter<"ProviderCategory"> | number
    active?: BoolFilter<"ProviderCategory"> | boolean
    updatedAt?: DateTimeFilter<"ProviderCategory"> | Date | string
    levelWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    expWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    score?: DecimalNullableFilter<"ProviderCategory"> | Decimal | DecimalJsLike | number | string | null
    isAvailable?: BoolNullableFilter<"ProviderCategory"> | boolean | null
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
  }, "id" | "providerId_categoryId">

  export type ProviderCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
    minPriceCents?: SortOrder
    active?: SortOrder
    updatedAt?: SortOrder
    levelWeight?: SortOrderInput | SortOrder
    expWeight?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    isAvailable?: SortOrderInput | SortOrder
    _count?: ProviderCategoryCountOrderByAggregateInput
    _avg?: ProviderCategoryAvgOrderByAggregateInput
    _max?: ProviderCategoryMaxOrderByAggregateInput
    _min?: ProviderCategoryMinOrderByAggregateInput
    _sum?: ProviderCategorySumOrderByAggregateInput
  }

  export type ProviderCategoryScalarWhereWithAggregatesInput = {
    AND?: ProviderCategoryScalarWhereWithAggregatesInput | ProviderCategoryScalarWhereWithAggregatesInput[]
    OR?: ProviderCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProviderCategoryScalarWhereWithAggregatesInput | ProviderCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderCategory"> | string
    providerId?: StringWithAggregatesFilter<"ProviderCategory"> | string
    categoryId?: StringWithAggregatesFilter<"ProviderCategory"> | string
    minPriceCents?: IntWithAggregatesFilter<"ProviderCategory"> | number
    active?: BoolWithAggregatesFilter<"ProviderCategory"> | boolean
    updatedAt?: DateTimeWithAggregatesFilter<"ProviderCategory"> | Date | string
    levelWeight?: IntNullableWithAggregatesFilter<"ProviderCategory"> | number | null
    expWeight?: IntNullableWithAggregatesFilter<"ProviderCategory"> | number | null
    score?: DecimalNullableWithAggregatesFilter<"ProviderCategory"> | Decimal | DecimalJsLike | number | string | null
    isAvailable?: BoolNullableWithAggregatesFilter<"ProviderCategory"> | boolean | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    slug?: StringNullableFilter<"Category"> | string | null
    active?: BoolFilter<"Category"> | boolean
    orders?: OrderListRelationFilter
    providerCategories?: ProviderCategoryListRelationFilter
    llmClassifications?: LlmClassificationListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrderInput | SortOrder
    active?: SortOrder
    orders?: OrderOrderByRelationAggregateInput
    providerCategories?: ProviderCategoryOrderByRelationAggregateInput
    llmClassifications?: LlmClassificationOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    active?: BoolFilter<"Category"> | boolean
    orders?: OrderListRelationFilter
    providerCategories?: ProviderCategoryListRelationFilter
    llmClassifications?: LlmClassificationListRelationFilter
  }, "id" | "slug">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrderInput | SortOrder
    active?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    slug?: StringNullableWithAggregatesFilter<"Category"> | string | null
    active?: BoolWithAggregatesFilter<"Category"> | boolean
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    clientId?: StringFilter<"Order"> | string
    providerId?: StringNullableFilter<"Order"> | string | null
    addressId?: StringNullableFilter<"Order"> | string | null
    categoryId?: StringNullableFilter<"Order"> | string | null
    description?: StringNullableFilter<"Order"> | string | null
    status?: StringFilter<"Order"> | string
    depositMethod?: StringFilter<"Order"> | string
    depositBaseAvgCents?: IntNullableFilter<"Order"> | number | null
    depositCents?: IntFilter<"Order"> | number
    slotStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    slotEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    finalPriceCents?: IntNullableFilter<"Order"> | number | null
    reviewStatus?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    provider?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    address?: XOR<AddressNullableScalarRelationFilter, AddressWhereInput> | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    orderSlots?: OrderSlotListRelationFilter
    orderCategories?: OrderCategoryListRelationFilter
    orderInvitations?: OrderInvitationListRelationFilter
    orderStatusHistory?: OrderStatusHistoryListRelationFilter
    orderReview?: XOR<OrderReviewNullableScalarRelationFilter, OrderReviewWhereInput> | null
    payments?: PaymentListRelationFilter
    paymentEvents?: PaymentEventListRelationFilter
    commission?: XOR<CommissionNullableScalarRelationFilter, CommissionWhereInput> | null
    clientCredits?: ClientCreditListRelationFilter
    providerPayout?: XOR<ProviderPayoutNullableScalarRelationFilter, ProviderPayoutWhereInput> | null
    matchScores?: MatchScoreListRelationFilter
    llmClassifications?: LlmClassificationListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrderInput | SortOrder
    addressId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    depositMethod?: SortOrder
    depositBaseAvgCents?: SortOrderInput | SortOrder
    depositCents?: SortOrder
    slotStart?: SortOrderInput | SortOrder
    slotEnd?: SortOrderInput | SortOrder
    finalPriceCents?: SortOrderInput | SortOrder
    reviewStatus?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    client?: UserOrderByWithRelationInput
    provider?: UserOrderByWithRelationInput
    address?: AddressOrderByWithRelationInput
    category?: CategoryOrderByWithRelationInput
    orderSlots?: OrderSlotOrderByRelationAggregateInput
    orderCategories?: OrderCategoryOrderByRelationAggregateInput
    orderInvitations?: OrderInvitationOrderByRelationAggregateInput
    orderStatusHistory?: OrderStatusHistoryOrderByRelationAggregateInput
    orderReview?: OrderReviewOrderByWithRelationInput
    payments?: PaymentOrderByRelationAggregateInput
    paymentEvents?: PaymentEventOrderByRelationAggregateInput
    commission?: CommissionOrderByWithRelationInput
    clientCredits?: ClientCreditOrderByRelationAggregateInput
    providerPayout?: ProviderPayoutOrderByWithRelationInput
    matchScores?: MatchScoreOrderByRelationAggregateInput
    llmClassifications?: LlmClassificationOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    clientId?: StringFilter<"Order"> | string
    providerId?: StringNullableFilter<"Order"> | string | null
    addressId?: StringNullableFilter<"Order"> | string | null
    categoryId?: StringNullableFilter<"Order"> | string | null
    description?: StringNullableFilter<"Order"> | string | null
    status?: StringFilter<"Order"> | string
    depositMethod?: StringFilter<"Order"> | string
    depositBaseAvgCents?: IntNullableFilter<"Order"> | number | null
    depositCents?: IntFilter<"Order"> | number
    slotStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    slotEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    finalPriceCents?: IntNullableFilter<"Order"> | number | null
    reviewStatus?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    provider?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    address?: XOR<AddressNullableScalarRelationFilter, AddressWhereInput> | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    orderSlots?: OrderSlotListRelationFilter
    orderCategories?: OrderCategoryListRelationFilter
    orderInvitations?: OrderInvitationListRelationFilter
    orderStatusHistory?: OrderStatusHistoryListRelationFilter
    orderReview?: XOR<OrderReviewNullableScalarRelationFilter, OrderReviewWhereInput> | null
    payments?: PaymentListRelationFilter
    paymentEvents?: PaymentEventListRelationFilter
    commission?: XOR<CommissionNullableScalarRelationFilter, CommissionWhereInput> | null
    clientCredits?: ClientCreditListRelationFilter
    providerPayout?: XOR<ProviderPayoutNullableScalarRelationFilter, ProviderPayoutWhereInput> | null
    matchScores?: MatchScoreListRelationFilter
    llmClassifications?: LlmClassificationListRelationFilter
  }, "id">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrderInput | SortOrder
    addressId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    depositMethod?: SortOrder
    depositBaseAvgCents?: SortOrderInput | SortOrder
    depositCents?: SortOrder
    slotStart?: SortOrderInput | SortOrder
    slotEnd?: SortOrderInput | SortOrder
    finalPriceCents?: SortOrderInput | SortOrder
    reviewStatus?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    clientId?: StringWithAggregatesFilter<"Order"> | string
    providerId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    addressId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    categoryId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    description?: StringNullableWithAggregatesFilter<"Order"> | string | null
    status?: StringWithAggregatesFilter<"Order"> | string
    depositMethod?: StringWithAggregatesFilter<"Order"> | string
    depositBaseAvgCents?: IntNullableWithAggregatesFilter<"Order"> | number | null
    depositCents?: IntWithAggregatesFilter<"Order"> | number
    slotStart?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    slotEnd?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    finalPriceCents?: IntNullableWithAggregatesFilter<"Order"> | number | null
    reviewStatus?: StringNullableWithAggregatesFilter<"Order"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type OrderSlotWhereInput = {
    AND?: OrderSlotWhereInput | OrderSlotWhereInput[]
    OR?: OrderSlotWhereInput[]
    NOT?: OrderSlotWhereInput | OrderSlotWhereInput[]
    id?: StringFilter<"OrderSlot"> | string
    orderId?: StringFilter<"OrderSlot"> | string
    label?: StringNullableFilter<"OrderSlot"> | string | null
    startAt?: DateTimeFilter<"OrderSlot"> | Date | string
    endAt?: DateTimeFilter<"OrderSlot"> | Date | string
    origin?: StringFilter<"OrderSlot"> | string
    chosen?: BoolFilter<"OrderSlot"> | boolean
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    invitations?: OrderInvitationListRelationFilter
  }

  export type OrderSlotOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    label?: SortOrderInput | SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    origin?: SortOrder
    chosen?: SortOrder
    order?: OrderOrderByWithRelationInput
    invitations?: OrderInvitationOrderByRelationAggregateInput
  }

  export type OrderSlotWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderSlotWhereInput | OrderSlotWhereInput[]
    OR?: OrderSlotWhereInput[]
    NOT?: OrderSlotWhereInput | OrderSlotWhereInput[]
    orderId?: StringFilter<"OrderSlot"> | string
    label?: StringNullableFilter<"OrderSlot"> | string | null
    startAt?: DateTimeFilter<"OrderSlot"> | Date | string
    endAt?: DateTimeFilter<"OrderSlot"> | Date | string
    origin?: StringFilter<"OrderSlot"> | string
    chosen?: BoolFilter<"OrderSlot"> | boolean
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    invitations?: OrderInvitationListRelationFilter
  }, "id">

  export type OrderSlotOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    label?: SortOrderInput | SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    origin?: SortOrder
    chosen?: SortOrder
    _count?: OrderSlotCountOrderByAggregateInput
    _max?: OrderSlotMaxOrderByAggregateInput
    _min?: OrderSlotMinOrderByAggregateInput
  }

  export type OrderSlotScalarWhereWithAggregatesInput = {
    AND?: OrderSlotScalarWhereWithAggregatesInput | OrderSlotScalarWhereWithAggregatesInput[]
    OR?: OrderSlotScalarWhereWithAggregatesInput[]
    NOT?: OrderSlotScalarWhereWithAggregatesInput | OrderSlotScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderSlot"> | string
    orderId?: StringWithAggregatesFilter<"OrderSlot"> | string
    label?: StringNullableWithAggregatesFilter<"OrderSlot"> | string | null
    startAt?: DateTimeWithAggregatesFilter<"OrderSlot"> | Date | string
    endAt?: DateTimeWithAggregatesFilter<"OrderSlot"> | Date | string
    origin?: StringWithAggregatesFilter<"OrderSlot"> | string
    chosen?: BoolWithAggregatesFilter<"OrderSlot"> | boolean
  }

  export type OrderCategoryWhereInput = {
    AND?: OrderCategoryWhereInput | OrderCategoryWhereInput[]
    OR?: OrderCategoryWhereInput[]
    NOT?: OrderCategoryWhereInput | OrderCategoryWhereInput[]
    orderId?: StringFilter<"OrderCategory"> | string
    categorySlug?: StringFilter<"OrderCategory"> | string
    confidence?: DecimalFilter<"OrderCategory"> | Decimal | DecimalJsLike | number | string
    rank?: IntFilter<"OrderCategory"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }

  export type OrderCategoryOrderByWithRelationInput = {
    orderId?: SortOrder
    categorySlug?: SortOrder
    confidence?: SortOrder
    rank?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type OrderCategoryWhereUniqueInput = Prisma.AtLeast<{
    orderId_categorySlug?: OrderCategoryOrderIdCategorySlugCompoundUniqueInput
    AND?: OrderCategoryWhereInput | OrderCategoryWhereInput[]
    OR?: OrderCategoryWhereInput[]
    NOT?: OrderCategoryWhereInput | OrderCategoryWhereInput[]
    orderId?: StringFilter<"OrderCategory"> | string
    categorySlug?: StringFilter<"OrderCategory"> | string
    confidence?: DecimalFilter<"OrderCategory"> | Decimal | DecimalJsLike | number | string
    rank?: IntFilter<"OrderCategory"> | number
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }, "orderId_categorySlug">

  export type OrderCategoryOrderByWithAggregationInput = {
    orderId?: SortOrder
    categorySlug?: SortOrder
    confidence?: SortOrder
    rank?: SortOrder
    _count?: OrderCategoryCountOrderByAggregateInput
    _avg?: OrderCategoryAvgOrderByAggregateInput
    _max?: OrderCategoryMaxOrderByAggregateInput
    _min?: OrderCategoryMinOrderByAggregateInput
    _sum?: OrderCategorySumOrderByAggregateInput
  }

  export type OrderCategoryScalarWhereWithAggregatesInput = {
    AND?: OrderCategoryScalarWhereWithAggregatesInput | OrderCategoryScalarWhereWithAggregatesInput[]
    OR?: OrderCategoryScalarWhereWithAggregatesInput[]
    NOT?: OrderCategoryScalarWhereWithAggregatesInput | OrderCategoryScalarWhereWithAggregatesInput[]
    orderId?: StringWithAggregatesFilter<"OrderCategory"> | string
    categorySlug?: StringWithAggregatesFilter<"OrderCategory"> | string
    confidence?: DecimalWithAggregatesFilter<"OrderCategory"> | Decimal | DecimalJsLike | number | string
    rank?: IntWithAggregatesFilter<"OrderCategory"> | number
  }

  export type OrderInvitationWhereInput = {
    AND?: OrderInvitationWhereInput | OrderInvitationWhereInput[]
    OR?: OrderInvitationWhereInput[]
    NOT?: OrderInvitationWhereInput | OrderInvitationWhereInput[]
    id?: StringFilter<"OrderInvitation"> | string
    orderId?: StringFilter<"OrderInvitation"> | string
    providerId?: StringFilter<"OrderInvitation"> | string
    slotId?: StringNullableFilter<"OrderInvitation"> | string | null
    score?: DecimalNullableFilter<"OrderInvitation"> | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFilter<"OrderInvitation"> | Date | string
    respondedAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    response?: StringNullableFilter<"OrderInvitation"> | string | null
    waMessageId?: StringNullableFilter<"OrderInvitation"> | string | null
    waRemoteJid?: StringNullableFilter<"OrderInvitation"> | string | null
    categorySlug?: StringNullableFilter<"OrderInvitation"> | string | null
    status?: StringNullableFilter<"OrderInvitation"> | string | null
    expiresAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    meta?: JsonNullableFilter<"OrderInvitation">
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
    slot?: XOR<OrderSlotNullableScalarRelationFilter, OrderSlotWhereInput> | null
  }

  export type OrderInvitationOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    slotId?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    sentAt?: SortOrder
    respondedAt?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    waMessageId?: SortOrderInput | SortOrder
    waRemoteJid?: SortOrderInput | SortOrder
    categorySlug?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    meta?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    provider?: UserOrderByWithRelationInput
    slot?: OrderSlotOrderByWithRelationInput
  }

  export type OrderInvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    waMessageId?: string
    orderId_providerId?: OrderInvitationOrderIdProviderIdCompoundUniqueInput
    AND?: OrderInvitationWhereInput | OrderInvitationWhereInput[]
    OR?: OrderInvitationWhereInput[]
    NOT?: OrderInvitationWhereInput | OrderInvitationWhereInput[]
    orderId?: StringFilter<"OrderInvitation"> | string
    providerId?: StringFilter<"OrderInvitation"> | string
    slotId?: StringNullableFilter<"OrderInvitation"> | string | null
    score?: DecimalNullableFilter<"OrderInvitation"> | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFilter<"OrderInvitation"> | Date | string
    respondedAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    response?: StringNullableFilter<"OrderInvitation"> | string | null
    waRemoteJid?: StringNullableFilter<"OrderInvitation"> | string | null
    categorySlug?: StringNullableFilter<"OrderInvitation"> | string | null
    status?: StringNullableFilter<"OrderInvitation"> | string | null
    expiresAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    meta?: JsonNullableFilter<"OrderInvitation">
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
    slot?: XOR<OrderSlotNullableScalarRelationFilter, OrderSlotWhereInput> | null
  }, "id" | "waMessageId" | "orderId_providerId">

  export type OrderInvitationOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    slotId?: SortOrderInput | SortOrder
    score?: SortOrderInput | SortOrder
    sentAt?: SortOrder
    respondedAt?: SortOrderInput | SortOrder
    response?: SortOrderInput | SortOrder
    waMessageId?: SortOrderInput | SortOrder
    waRemoteJid?: SortOrderInput | SortOrder
    categorySlug?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    meta?: SortOrderInput | SortOrder
    _count?: OrderInvitationCountOrderByAggregateInput
    _avg?: OrderInvitationAvgOrderByAggregateInput
    _max?: OrderInvitationMaxOrderByAggregateInput
    _min?: OrderInvitationMinOrderByAggregateInput
    _sum?: OrderInvitationSumOrderByAggregateInput
  }

  export type OrderInvitationScalarWhereWithAggregatesInput = {
    AND?: OrderInvitationScalarWhereWithAggregatesInput | OrderInvitationScalarWhereWithAggregatesInput[]
    OR?: OrderInvitationScalarWhereWithAggregatesInput[]
    NOT?: OrderInvitationScalarWhereWithAggregatesInput | OrderInvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderInvitation"> | string
    orderId?: StringWithAggregatesFilter<"OrderInvitation"> | string
    providerId?: StringWithAggregatesFilter<"OrderInvitation"> | string
    slotId?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    score?: DecimalNullableWithAggregatesFilter<"OrderInvitation"> | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeWithAggregatesFilter<"OrderInvitation"> | Date | string
    respondedAt?: DateTimeNullableWithAggregatesFilter<"OrderInvitation"> | Date | string | null
    response?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    waMessageId?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    waRemoteJid?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    categorySlug?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    status?: StringNullableWithAggregatesFilter<"OrderInvitation"> | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"OrderInvitation"> | Date | string | null
    meta?: JsonNullableWithAggregatesFilter<"OrderInvitation">
  }

  export type OrderStatusHistoryWhereInput = {
    AND?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    OR?: OrderStatusHistoryWhereInput[]
    NOT?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    id?: StringFilter<"OrderStatusHistory"> | string
    orderId?: StringFilter<"OrderStatusHistory"> | string
    oldStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    newStatus?: StringFilter<"OrderStatusHistory"> | string
    at?: DateTimeFilter<"OrderStatusHistory"> | Date | string
    byUserId?: StringNullableFilter<"OrderStatusHistory"> | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    byUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type OrderStatusHistoryOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    oldStatus?: SortOrderInput | SortOrder
    newStatus?: SortOrder
    at?: SortOrder
    byUserId?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    byUser?: UserOrderByWithRelationInput
  }

  export type OrderStatusHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    OR?: OrderStatusHistoryWhereInput[]
    NOT?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    orderId?: StringFilter<"OrderStatusHistory"> | string
    oldStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    newStatus?: StringFilter<"OrderStatusHistory"> | string
    at?: DateTimeFilter<"OrderStatusHistory"> | Date | string
    byUserId?: StringNullableFilter<"OrderStatusHistory"> | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    byUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type OrderStatusHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    oldStatus?: SortOrderInput | SortOrder
    newStatus?: SortOrder
    at?: SortOrder
    byUserId?: SortOrderInput | SortOrder
    _count?: OrderStatusHistoryCountOrderByAggregateInput
    _max?: OrderStatusHistoryMaxOrderByAggregateInput
    _min?: OrderStatusHistoryMinOrderByAggregateInput
  }

  export type OrderStatusHistoryScalarWhereWithAggregatesInput = {
    AND?: OrderStatusHistoryScalarWhereWithAggregatesInput | OrderStatusHistoryScalarWhereWithAggregatesInput[]
    OR?: OrderStatusHistoryScalarWhereWithAggregatesInput[]
    NOT?: OrderStatusHistoryScalarWhereWithAggregatesInput | OrderStatusHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    orderId?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    oldStatus?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
    newStatus?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    at?: DateTimeWithAggregatesFilter<"OrderStatusHistory"> | Date | string
    byUserId?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
  }

  export type OrderReviewWhereInput = {
    AND?: OrderReviewWhereInput | OrderReviewWhereInput[]
    OR?: OrderReviewWhereInput[]
    NOT?: OrderReviewWhereInput | OrderReviewWhereInput[]
    orderId?: StringFilter<"OrderReview"> | string
    clientId?: StringFilter<"OrderReview"> | string
    providerId?: StringFilter<"OrderReview"> | string
    rating?: IntNullableFilter<"OrderReview"> | number | null
    comment?: StringNullableFilter<"OrderReview"> | string | null
    createdAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type OrderReviewOrderByWithRelationInput = {
    orderId?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    rating?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    client?: UserOrderByWithRelationInput
    provider?: UserOrderByWithRelationInput
  }

  export type OrderReviewWhereUniqueInput = Prisma.AtLeast<{
    orderId?: string
    AND?: OrderReviewWhereInput | OrderReviewWhereInput[]
    OR?: OrderReviewWhereInput[]
    NOT?: OrderReviewWhereInput | OrderReviewWhereInput[]
    clientId?: StringFilter<"OrderReview"> | string
    providerId?: StringFilter<"OrderReview"> | string
    rating?: IntNullableFilter<"OrderReview"> | number | null
    comment?: StringNullableFilter<"OrderReview"> | string | null
    createdAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    client?: XOR<UserScalarRelationFilter, UserWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "orderId">

  export type OrderReviewOrderByWithAggregationInput = {
    orderId?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    rating?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: OrderReviewCountOrderByAggregateInput
    _avg?: OrderReviewAvgOrderByAggregateInput
    _max?: OrderReviewMaxOrderByAggregateInput
    _min?: OrderReviewMinOrderByAggregateInput
    _sum?: OrderReviewSumOrderByAggregateInput
  }

  export type OrderReviewScalarWhereWithAggregatesInput = {
    AND?: OrderReviewScalarWhereWithAggregatesInput | OrderReviewScalarWhereWithAggregatesInput[]
    OR?: OrderReviewScalarWhereWithAggregatesInput[]
    NOT?: OrderReviewScalarWhereWithAggregatesInput | OrderReviewScalarWhereWithAggregatesInput[]
    orderId?: StringWithAggregatesFilter<"OrderReview"> | string
    clientId?: StringWithAggregatesFilter<"OrderReview"> | string
    providerId?: StringWithAggregatesFilter<"OrderReview"> | string
    rating?: IntNullableWithAggregatesFilter<"OrderReview"> | number | null
    comment?: StringNullableWithAggregatesFilter<"OrderReview"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"OrderReview"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"OrderReview"> | Date | string | null
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    orderId?: StringFilter<"Payment"> | string
    kind?: StringFilter<"Payment"> | string
    gateway?: StringFilter<"Payment"> | string
    gatewayPaymentId?: StringNullableFilter<"Payment"> | string | null
    status?: StringFilter<"Payment"> | string
    amountCents?: IntFilter<"Payment"> | number
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    approvedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    paymentEvents?: PaymentEventListRelationFilter
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    kind?: SortOrder
    gateway?: SortOrder
    gatewayPaymentId?: SortOrderInput | SortOrder
    status?: SortOrder
    amountCents?: SortOrder
    createdAt?: SortOrder
    approvedAt?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    paymentEvents?: PaymentEventOrderByRelationAggregateInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    gatewayPaymentId?: string
    gateway_gatewayPaymentId?: PaymentGatewayGatewayPaymentIdCompoundUniqueInput
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    orderId?: StringFilter<"Payment"> | string
    kind?: StringFilter<"Payment"> | string
    gateway?: StringFilter<"Payment"> | string
    status?: StringFilter<"Payment"> | string
    amountCents?: IntFilter<"Payment"> | number
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    approvedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    paymentEvents?: PaymentEventListRelationFilter
  }, "id" | "gatewayPaymentId" | "gateway_gatewayPaymentId">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    kind?: SortOrder
    gateway?: SortOrder
    gatewayPaymentId?: SortOrderInput | SortOrder
    status?: SortOrder
    amountCents?: SortOrder
    createdAt?: SortOrder
    approvedAt?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    orderId?: StringWithAggregatesFilter<"Payment"> | string
    kind?: StringWithAggregatesFilter<"Payment"> | string
    gateway?: StringWithAggregatesFilter<"Payment"> | string
    gatewayPaymentId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    status?: StringWithAggregatesFilter<"Payment"> | string
    amountCents?: IntWithAggregatesFilter<"Payment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    approvedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
  }

  export type PaymentEventWhereInput = {
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    id?: StringFilter<"PaymentEvent"> | string
    paymentId?: StringNullableFilter<"PaymentEvent"> | string | null
    orderId?: StringFilter<"PaymentEvent"> | string
    rawPayload?: JsonFilter<"PaymentEvent">
    receivedAt?: DateTimeFilter<"PaymentEvent"> | Date | string
    signatureOk?: BoolNullableFilter<"PaymentEvent"> | boolean | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }

  export type PaymentEventOrderByWithRelationInput = {
    id?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    orderId?: SortOrder
    rawPayload?: SortOrder
    receivedAt?: SortOrder
    signatureOk?: SortOrderInput | SortOrder
    payment?: PaymentOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type PaymentEventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    paymentId?: StringNullableFilter<"PaymentEvent"> | string | null
    orderId?: StringFilter<"PaymentEvent"> | string
    rawPayload?: JsonFilter<"PaymentEvent">
    receivedAt?: DateTimeFilter<"PaymentEvent"> | Date | string
    signatureOk?: BoolNullableFilter<"PaymentEvent"> | boolean | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }, "id">

  export type PaymentEventOrderByWithAggregationInput = {
    id?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    orderId?: SortOrder
    rawPayload?: SortOrder
    receivedAt?: SortOrder
    signatureOk?: SortOrderInput | SortOrder
    _count?: PaymentEventCountOrderByAggregateInput
    _max?: PaymentEventMaxOrderByAggregateInput
    _min?: PaymentEventMinOrderByAggregateInput
  }

  export type PaymentEventScalarWhereWithAggregatesInput = {
    AND?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    OR?: PaymentEventScalarWhereWithAggregatesInput[]
    NOT?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentEvent"> | string
    paymentId?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    orderId?: StringWithAggregatesFilter<"PaymentEvent"> | string
    rawPayload?: JsonWithAggregatesFilter<"PaymentEvent">
    receivedAt?: DateTimeWithAggregatesFilter<"PaymentEvent"> | Date | string
    signatureOk?: BoolNullableWithAggregatesFilter<"PaymentEvent"> | boolean | null
  }

  export type CommissionWhereInput = {
    AND?: CommissionWhereInput | CommissionWhereInput[]
    OR?: CommissionWhereInput[]
    NOT?: CommissionWhereInput | CommissionWhereInput[]
    orderId?: StringFilter<"Commission"> | string
    finalPriceCents?: IntFilter<"Commission"> | number
    rateBp?: IntFilter<"Commission"> | number
    minCents?: IntFilter<"Commission"> | number
    maxCents?: IntFilter<"Commission"> | number
    computedCents?: IntFilter<"Commission"> | number
    computedAt?: DateTimeFilter<"Commission"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }

  export type CommissionOrderByWithRelationInput = {
    orderId?: SortOrder
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
    computedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type CommissionWhereUniqueInput = Prisma.AtLeast<{
    orderId?: string
    AND?: CommissionWhereInput | CommissionWhereInput[]
    OR?: CommissionWhereInput[]
    NOT?: CommissionWhereInput | CommissionWhereInput[]
    finalPriceCents?: IntFilter<"Commission"> | number
    rateBp?: IntFilter<"Commission"> | number
    minCents?: IntFilter<"Commission"> | number
    maxCents?: IntFilter<"Commission"> | number
    computedCents?: IntFilter<"Commission"> | number
    computedAt?: DateTimeFilter<"Commission"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }, "orderId">

  export type CommissionOrderByWithAggregationInput = {
    orderId?: SortOrder
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
    computedAt?: SortOrder
    _count?: CommissionCountOrderByAggregateInput
    _avg?: CommissionAvgOrderByAggregateInput
    _max?: CommissionMaxOrderByAggregateInput
    _min?: CommissionMinOrderByAggregateInput
    _sum?: CommissionSumOrderByAggregateInput
  }

  export type CommissionScalarWhereWithAggregatesInput = {
    AND?: CommissionScalarWhereWithAggregatesInput | CommissionScalarWhereWithAggregatesInput[]
    OR?: CommissionScalarWhereWithAggregatesInput[]
    NOT?: CommissionScalarWhereWithAggregatesInput | CommissionScalarWhereWithAggregatesInput[]
    orderId?: StringWithAggregatesFilter<"Commission"> | string
    finalPriceCents?: IntWithAggregatesFilter<"Commission"> | number
    rateBp?: IntWithAggregatesFilter<"Commission"> | number
    minCents?: IntWithAggregatesFilter<"Commission"> | number
    maxCents?: IntWithAggregatesFilter<"Commission"> | number
    computedCents?: IntWithAggregatesFilter<"Commission"> | number
    computedAt?: DateTimeWithAggregatesFilter<"Commission"> | Date | string
  }

  export type ClientCreditWhereInput = {
    AND?: ClientCreditWhereInput | ClientCreditWhereInput[]
    OR?: ClientCreditWhereInput[]
    NOT?: ClientCreditWhereInput | ClientCreditWhereInput[]
    id?: StringFilter<"ClientCredit"> | string
    userId?: StringFilter<"ClientCredit"> | string
    orderId?: StringFilter<"ClientCredit"> | string
    amountCents?: IntFilter<"ClientCredit"> | number
    expiresAt?: DateTimeFilter<"ClientCredit"> | Date | string
    usedCents?: IntFilter<"ClientCredit"> | number
    createdAt?: DateTimeFilter<"ClientCredit"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }

  export type ClientCreditOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    amountCents?: SortOrder
    expiresAt?: SortOrder
    usedCents?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type ClientCreditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ClientCreditWhereInput | ClientCreditWhereInput[]
    OR?: ClientCreditWhereInput[]
    NOT?: ClientCreditWhereInput | ClientCreditWhereInput[]
    userId?: StringFilter<"ClientCredit"> | string
    orderId?: StringFilter<"ClientCredit"> | string
    amountCents?: IntFilter<"ClientCredit"> | number
    expiresAt?: DateTimeFilter<"ClientCredit"> | Date | string
    usedCents?: IntFilter<"ClientCredit"> | number
    createdAt?: DateTimeFilter<"ClientCredit"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }, "id">

  export type ClientCreditOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    amountCents?: SortOrder
    expiresAt?: SortOrder
    usedCents?: SortOrder
    createdAt?: SortOrder
    _count?: ClientCreditCountOrderByAggregateInput
    _avg?: ClientCreditAvgOrderByAggregateInput
    _max?: ClientCreditMaxOrderByAggregateInput
    _min?: ClientCreditMinOrderByAggregateInput
    _sum?: ClientCreditSumOrderByAggregateInput
  }

  export type ClientCreditScalarWhereWithAggregatesInput = {
    AND?: ClientCreditScalarWhereWithAggregatesInput | ClientCreditScalarWhereWithAggregatesInput[]
    OR?: ClientCreditScalarWhereWithAggregatesInput[]
    NOT?: ClientCreditScalarWhereWithAggregatesInput | ClientCreditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClientCredit"> | string
    userId?: StringWithAggregatesFilter<"ClientCredit"> | string
    orderId?: StringWithAggregatesFilter<"ClientCredit"> | string
    amountCents?: IntWithAggregatesFilter<"ClientCredit"> | number
    expiresAt?: DateTimeWithAggregatesFilter<"ClientCredit"> | Date | string
    usedCents?: IntWithAggregatesFilter<"ClientCredit"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ClientCredit"> | Date | string
  }

  export type ProviderPayoutWhereInput = {
    AND?: ProviderPayoutWhereInput | ProviderPayoutWhereInput[]
    OR?: ProviderPayoutWhereInput[]
    NOT?: ProviderPayoutWhereInput | ProviderPayoutWhereInput[]
    id?: StringFilter<"ProviderPayout"> | string
    orderId?: StringNullableFilter<"ProviderPayout"> | string | null
    providerId?: StringFilter<"ProviderPayout"> | string
    grossCents?: IntFilter<"ProviderPayout"> | number
    commissionCents?: IntFilter<"ProviderPayout"> | number
    netCents?: IntFilter<"ProviderPayout"> | number
    status?: StringFilter<"ProviderPayout"> | string
    paidAt?: DateTimeNullableFilter<"ProviderPayout"> | Date | string | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ProviderPayoutOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    providerId?: SortOrder
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
    status?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    provider?: UserOrderByWithRelationInput
  }

  export type ProviderPayoutWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderId?: string
    AND?: ProviderPayoutWhereInput | ProviderPayoutWhereInput[]
    OR?: ProviderPayoutWhereInput[]
    NOT?: ProviderPayoutWhereInput | ProviderPayoutWhereInput[]
    providerId?: StringFilter<"ProviderPayout"> | string
    grossCents?: IntFilter<"ProviderPayout"> | number
    commissionCents?: IntFilter<"ProviderPayout"> | number
    netCents?: IntFilter<"ProviderPayout"> | number
    status?: StringFilter<"ProviderPayout"> | string
    paidAt?: DateTimeNullableFilter<"ProviderPayout"> | Date | string | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "orderId">

  export type ProviderPayoutOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    providerId?: SortOrder
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
    status?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    _count?: ProviderPayoutCountOrderByAggregateInput
    _avg?: ProviderPayoutAvgOrderByAggregateInput
    _max?: ProviderPayoutMaxOrderByAggregateInput
    _min?: ProviderPayoutMinOrderByAggregateInput
    _sum?: ProviderPayoutSumOrderByAggregateInput
  }

  export type ProviderPayoutScalarWhereWithAggregatesInput = {
    AND?: ProviderPayoutScalarWhereWithAggregatesInput | ProviderPayoutScalarWhereWithAggregatesInput[]
    OR?: ProviderPayoutScalarWhereWithAggregatesInput[]
    NOT?: ProviderPayoutScalarWhereWithAggregatesInput | ProviderPayoutScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProviderPayout"> | string
    orderId?: StringNullableWithAggregatesFilter<"ProviderPayout"> | string | null
    providerId?: StringWithAggregatesFilter<"ProviderPayout"> | string
    grossCents?: IntWithAggregatesFilter<"ProviderPayout"> | number
    commissionCents?: IntWithAggregatesFilter<"ProviderPayout"> | number
    netCents?: IntWithAggregatesFilter<"ProviderPayout"> | number
    status?: StringWithAggregatesFilter<"ProviderPayout"> | string
    paidAt?: DateTimeNullableWithAggregatesFilter<"ProviderPayout"> | Date | string | null
  }

  export type MatchScoreWhereInput = {
    AND?: MatchScoreWhereInput | MatchScoreWhereInput[]
    OR?: MatchScoreWhereInput[]
    NOT?: MatchScoreWhereInput | MatchScoreWhereInput[]
    id?: StringFilter<"MatchScore"> | string
    orderId?: StringFilter<"MatchScore"> | string
    providerId?: StringFilter<"MatchScore"> | string
    distanceKm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    acceptRate?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    responseFast?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    reliability?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    finalScore?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"MatchScore"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MatchScoreOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    distanceKm?: SortOrderInput | SortOrder
    ratingNorm?: SortOrderInput | SortOrder
    acceptRate?: SortOrderInput | SortOrder
    responseFast?: SortOrderInput | SortOrder
    reliability?: SortOrderInput | SortOrder
    finalScore?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    provider?: UserOrderByWithRelationInput
  }

  export type MatchScoreWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MatchScoreWhereInput | MatchScoreWhereInput[]
    OR?: MatchScoreWhereInput[]
    NOT?: MatchScoreWhereInput | MatchScoreWhereInput[]
    orderId?: StringFilter<"MatchScore"> | string
    providerId?: StringFilter<"MatchScore"> | string
    distanceKm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    acceptRate?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    responseFast?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    reliability?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    finalScore?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"MatchScore"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    provider?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MatchScoreOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    distanceKm?: SortOrderInput | SortOrder
    ratingNorm?: SortOrderInput | SortOrder
    acceptRate?: SortOrderInput | SortOrder
    responseFast?: SortOrderInput | SortOrder
    reliability?: SortOrderInput | SortOrder
    finalScore?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: MatchScoreCountOrderByAggregateInput
    _avg?: MatchScoreAvgOrderByAggregateInput
    _max?: MatchScoreMaxOrderByAggregateInput
    _min?: MatchScoreMinOrderByAggregateInput
    _sum?: MatchScoreSumOrderByAggregateInput
  }

  export type MatchScoreScalarWhereWithAggregatesInput = {
    AND?: MatchScoreScalarWhereWithAggregatesInput | MatchScoreScalarWhereWithAggregatesInput[]
    OR?: MatchScoreScalarWhereWithAggregatesInput[]
    NOT?: MatchScoreScalarWhereWithAggregatesInput | MatchScoreScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MatchScore"> | string
    orderId?: StringWithAggregatesFilter<"MatchScore"> | string
    providerId?: StringWithAggregatesFilter<"MatchScore"> | string
    distanceKm?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    acceptRate?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    responseFast?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    reliability?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    finalScore?: DecimalNullableWithAggregatesFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MatchScore"> | Date | string
  }

  export type LlmClassificationWhereInput = {
    AND?: LlmClassificationWhereInput | LlmClassificationWhereInput[]
    OR?: LlmClassificationWhereInput[]
    NOT?: LlmClassificationWhereInput | LlmClassificationWhereInput[]
    id?: StringFilter<"LlmClassification"> | string
    orderId?: StringFilter<"LlmClassification"> | string
    inputText?: StringNullableFilter<"LlmClassification"> | string | null
    categoryId?: StringNullableFilter<"LlmClassification"> | string | null
    confidence?: DecimalNullableFilter<"LlmClassification"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"LlmClassification"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
  }

  export type LlmClassificationOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    inputText?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    confidence?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    category?: CategoryOrderByWithRelationInput
  }

  export type LlmClassificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LlmClassificationWhereInput | LlmClassificationWhereInput[]
    OR?: LlmClassificationWhereInput[]
    NOT?: LlmClassificationWhereInput | LlmClassificationWhereInput[]
    orderId?: StringFilter<"LlmClassification"> | string
    inputText?: StringNullableFilter<"LlmClassification"> | string | null
    categoryId?: StringNullableFilter<"LlmClassification"> | string | null
    confidence?: DecimalNullableFilter<"LlmClassification"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"LlmClassification"> | Date | string
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
  }, "id">

  export type LlmClassificationOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    inputText?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    confidence?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: LlmClassificationCountOrderByAggregateInput
    _avg?: LlmClassificationAvgOrderByAggregateInput
    _max?: LlmClassificationMaxOrderByAggregateInput
    _min?: LlmClassificationMinOrderByAggregateInput
    _sum?: LlmClassificationSumOrderByAggregateInput
  }

  export type LlmClassificationScalarWhereWithAggregatesInput = {
    AND?: LlmClassificationScalarWhereWithAggregatesInput | LlmClassificationScalarWhereWithAggregatesInput[]
    OR?: LlmClassificationScalarWhereWithAggregatesInput[]
    NOT?: LlmClassificationScalarWhereWithAggregatesInput | LlmClassificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LlmClassification"> | string
    orderId?: StringWithAggregatesFilter<"LlmClassification"> | string
    inputText?: StringNullableWithAggregatesFilter<"LlmClassification"> | string | null
    categoryId?: StringNullableWithAggregatesFilter<"LlmClassification"> | string | null
    confidence?: DecimalNullableWithAggregatesFilter<"LlmClassification"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeWithAggregatesFilter<"LlmClassification"> | Date | string
  }

  export type RefusalRuleWhereInput = {
    AND?: RefusalRuleWhereInput | RefusalRuleWhereInput[]
    OR?: RefusalRuleWhereInput[]
    NOT?: RefusalRuleWhereInput | RefusalRuleWhereInput[]
    code?: StringFilter<"RefusalRule"> | string
    clientCreditPct?: IntFilter<"RefusalRule"> | number
    providerPct?: IntFilter<"RefusalRule"> | number
    platformPct?: IntFilter<"RefusalRule"> | number
  }

  export type RefusalRuleOrderByWithRelationInput = {
    code?: SortOrder
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type RefusalRuleWhereUniqueInput = Prisma.AtLeast<{
    code?: string
    AND?: RefusalRuleWhereInput | RefusalRuleWhereInput[]
    OR?: RefusalRuleWhereInput[]
    NOT?: RefusalRuleWhereInput | RefusalRuleWhereInput[]
    clientCreditPct?: IntFilter<"RefusalRule"> | number
    providerPct?: IntFilter<"RefusalRule"> | number
    platformPct?: IntFilter<"RefusalRule"> | number
  }, "code">

  export type RefusalRuleOrderByWithAggregationInput = {
    code?: SortOrder
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
    _count?: RefusalRuleCountOrderByAggregateInput
    _avg?: RefusalRuleAvgOrderByAggregateInput
    _max?: RefusalRuleMaxOrderByAggregateInput
    _min?: RefusalRuleMinOrderByAggregateInput
    _sum?: RefusalRuleSumOrderByAggregateInput
  }

  export type RefusalRuleScalarWhereWithAggregatesInput = {
    AND?: RefusalRuleScalarWhereWithAggregatesInput | RefusalRuleScalarWhereWithAggregatesInput[]
    OR?: RefusalRuleScalarWhereWithAggregatesInput[]
    NOT?: RefusalRuleScalarWhereWithAggregatesInput | RefusalRuleScalarWhereWithAggregatesInput[]
    code?: StringWithAggregatesFilter<"RefusalRule"> | string
    clientCreditPct?: IntWithAggregatesFilter<"RefusalRule"> | number
    providerPct?: IntWithAggregatesFilter<"RefusalRule"> | number
    platformPct?: IntWithAggregatesFilter<"RefusalRule"> | number
  }

  export type UserCreateInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    id?: string
    name: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: string
    name: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userRoles?: UserRoleAssignmentUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: string
    name: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUserRolesInput
    user: UserCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleAssignmentUncheckedCreateInput = {
    id?: string
    userId: string
    roleId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRoleAssignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUserRolesNestedInput
    user?: UserUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleAssignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentCreateManyInput = {
    id?: string
    userId: string
    roleId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRoleAssignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type SessionCreateManyInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type AccountCreateInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyInput = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCreateInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationUncheckedCreateInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCreateManyInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestCreateInput = {
    id?: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProviderRequestsInput
    reviewedByUser?: UserCreateNestedOneWithoutReviewedRequestsInput
  }

  export type ProviderRequestUncheckedCreateInput = {
    id?: string
    userId: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProviderRequestsNestedInput
    reviewedByUser?: UserUpdateOneWithoutReviewedRequestsNestedInput
  }

  export type ProviderRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestCreateManyInput = {
    id?: string
    userId: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressCreateInput = {
    id?: string
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
    user?: UserCreateNestedOneWithoutAddressesInput
    orders?: OrderCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateInput = {
    id?: string
    userId?: string | null
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutAddressesNestedInput
    orders?: OrderUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressCreateManyInput = {
    id?: string
    userId?: string | null
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
  }

  export type AddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderProfileCreateInput = {
    bio?: string | null
    radiusKm?: Decimal | DecimalJsLike | number | string
    avgRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    acceptRate30d?: Decimal | DecimalJsLike | number | string
    responseP50S?: number
    noShow30d?: number
    user?: UserCreateNestedOneWithoutProviderProfileInput
  }

  export type ProviderProfileUncheckedCreateInput = {
    userId?: string
    bio?: string | null
    radiusKm?: Decimal | DecimalJsLike | number | string
    avgRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    acceptRate30d?: Decimal | DecimalJsLike | number | string
    responseP50S?: number
    noShow30d?: number
  }

  export type ProviderProfileUpdateInput = {
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutProviderProfileNestedInput
  }

  export type ProviderProfileUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderProfileCreateManyInput = {
    userId?: string
    bio?: string | null
    radiusKm?: Decimal | DecimalJsLike | number | string
    avgRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    acceptRate30d?: Decimal | DecimalJsLike | number | string
    responseP50S?: number
    noShow30d?: number
  }

  export type ProviderProfileUpdateManyMutationInput = {
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderProfileUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderAvailabilityCreateInput = {
    id?: string
    weekday: number
    startTime: string
    endTime: string
    provider: UserCreateNestedOneWithoutProviderAvailabilityInput
  }

  export type ProviderAvailabilityUncheckedCreateInput = {
    id?: string
    providerId: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderAvailabilityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
    provider?: UserUpdateOneRequiredWithoutProviderAvailabilityNestedInput
  }

  export type ProviderAvailabilityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderAvailabilityCreateManyInput = {
    id?: string
    providerId: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderAvailabilityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderAvailabilityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderCategoryCreateInput = {
    id?: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
    provider: UserCreateNestedOneWithoutProviderCategoriesInput
    category: CategoryCreateNestedOneWithoutProviderCategoriesInput
  }

  export type ProviderCategoryUncheckedCreateInput = {
    id?: string
    providerId: string
    categoryId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type ProviderCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    provider?: UserUpdateOneRequiredWithoutProviderCategoriesNestedInput
    category?: CategoryUpdateOneRequiredWithoutProviderCategoriesNestedInput
  }

  export type ProviderCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProviderCategoryCreateManyInput = {
    id?: string
    providerId: string
    categoryId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type ProviderCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProviderCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderCreateNestedManyWithoutCategoryInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutCategoryInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutCategoryNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutCategoryNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderCreateInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderSlotCreateInput = {
    id?: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
    order: OrderCreateNestedOneWithoutOrderSlotsInput
    invitations?: OrderInvitationCreateNestedManyWithoutSlotInput
  }

  export type OrderSlotUncheckedCreateInput = {
    id?: string
    orderId: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
    invitations?: OrderInvitationUncheckedCreateNestedManyWithoutSlotInput
  }

  export type OrderSlotUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
    order?: OrderUpdateOneRequiredWithoutOrderSlotsNestedInput
    invitations?: OrderInvitationUpdateManyWithoutSlotNestedInput
  }

  export type OrderSlotUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
    invitations?: OrderInvitationUncheckedUpdateManyWithoutSlotNestedInput
  }

  export type OrderSlotCreateManyInput = {
    id?: string
    orderId: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
  }

  export type OrderSlotUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderSlotUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderCategoryCreateInput = {
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
    order: OrderCreateNestedOneWithoutOrderCategoriesInput
  }

  export type OrderCategoryUncheckedCreateInput = {
    orderId: string
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
  }

  export type OrderCategoryUpdateInput = {
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
    order?: OrderUpdateOneRequiredWithoutOrderCategoriesNestedInput
  }

  export type OrderCategoryUncheckedUpdateInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCategoryCreateManyInput = {
    orderId: string
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
  }

  export type OrderCategoryUpdateManyMutationInput = {
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCategoryUncheckedUpdateManyInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderInvitationCreateInput = {
    id?: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutOrderInvitationsInput
    provider: UserCreateNestedOneWithoutOrderInvitationsInput
    slot?: OrderSlotCreateNestedOneWithoutInvitationsInput
  }

  export type OrderInvitationUncheckedCreateInput = {
    id?: string
    orderId: string
    providerId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutOrderInvitationsNestedInput
    provider?: UserUpdateOneRequiredWithoutOrderInvitationsNestedInput
    slot?: OrderSlotUpdateOneWithoutInvitationsNestedInput
  }

  export type OrderInvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationCreateManyInput = {
    id?: string
    orderId: string
    providerId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderStatusHistoryCreateInput = {
    id?: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    order: OrderCreateNestedOneWithoutOrderStatusHistoryInput
    byUser?: UserCreateNestedOneWithoutOrderStatusHistoryInput
  }

  export type OrderStatusHistoryUncheckedCreateInput = {
    id?: string
    orderId: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    byUserId?: string | null
  }

  export type OrderStatusHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutOrderStatusHistoryNestedInput
    byUser?: UserUpdateOneWithoutOrderStatusHistoryNestedInput
  }

  export type OrderStatusHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    byUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderStatusHistoryCreateManyInput = {
    id?: string
    orderId: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    byUserId?: string | null
  }

  export type OrderStatusHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    byUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderReviewCreateInput = {
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    order: OrderCreateNestedOneWithoutOrderReviewInput
    client: UserCreateNestedOneWithoutOrderReviewsAsClientInput
    provider: UserCreateNestedOneWithoutOrderReviewsAsProviderInput
  }

  export type OrderReviewUncheckedCreateInput = {
    orderId: string
    clientId: string
    providerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewUpdateInput = {
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutOrderReviewNestedInput
    client?: UserUpdateOneRequiredWithoutOrderReviewsAsClientNestedInput
    provider?: UserUpdateOneRequiredWithoutOrderReviewsAsProviderNestedInput
  }

  export type OrderReviewUncheckedUpdateInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderReviewCreateManyInput = {
    orderId: string
    clientId: string
    providerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewUpdateManyMutationInput = {
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderReviewUncheckedUpdateManyInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentCreateInput = {
    id?: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
    order: OrderCreateNestedOneWithoutPaymentsInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    orderId: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutPaymentsNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentCreateManyInput = {
    id?: string
    orderId: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentEventCreateInput = {
    id?: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
    payment?: PaymentCreateNestedOneWithoutPaymentEventsInput
    order: OrderCreateNestedOneWithoutPaymentEventsInput
  }

  export type PaymentEventUncheckedCreateInput = {
    id?: string
    paymentId?: string | null
    orderId: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type PaymentEventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
    payment?: PaymentUpdateOneWithoutPaymentEventsNestedInput
    order?: OrderUpdateOneRequiredWithoutPaymentEventsNestedInput
  }

  export type PaymentEventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PaymentEventCreateManyInput = {
    id?: string
    paymentId?: string | null
    orderId: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type PaymentEventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PaymentEventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type CommissionCreateInput = {
    finalPriceCents: number
    rateBp?: number
    minCents?: number
    maxCents?: number
    computedCents: number
    computedAt?: Date | string
    order: OrderCreateNestedOneWithoutCommissionInput
  }

  export type CommissionUncheckedCreateInput = {
    orderId: string
    finalPriceCents: number
    rateBp?: number
    minCents?: number
    maxCents?: number
    computedCents: number
    computedAt?: Date | string
  }

  export type CommissionUpdateInput = {
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutCommissionNestedInput
  }

  export type CommissionUncheckedUpdateInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommissionCreateManyInput = {
    orderId: string
    finalPriceCents: number
    rateBp?: number
    minCents?: number
    maxCents?: number
    computedCents: number
    computedAt?: Date | string
  }

  export type CommissionUpdateManyMutationInput = {
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommissionUncheckedUpdateManyInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditCreateInput = {
    id?: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutClientCreditsInput
    order: OrderCreateNestedOneWithoutClientCreditsInput
  }

  export type ClientCreditUncheckedCreateInput = {
    id?: string
    userId: string
    orderId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type ClientCreditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutClientCreditsNestedInput
    order?: OrderUpdateOneRequiredWithoutClientCreditsNestedInput
  }

  export type ClientCreditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditCreateManyInput = {
    id?: string
    userId: string
    orderId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type ClientCreditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderPayoutCreateInput = {
    id?: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
    order?: OrderCreateNestedOneWithoutProviderPayoutInput
    provider: UserCreateNestedOneWithoutProviderPayoutsInput
  }

  export type ProviderPayoutUncheckedCreateInput = {
    id?: string
    orderId?: string | null
    providerId: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
  }

  export type ProviderPayoutUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneWithoutProviderPayoutNestedInput
    provider?: UserUpdateOneRequiredWithoutProviderPayoutsNestedInput
  }

  export type ProviderPayoutUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    providerId?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderPayoutCreateManyInput = {
    id?: string
    orderId?: string | null
    providerId: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
  }

  export type ProviderPayoutUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderPayoutUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    providerId?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MatchScoreCreateInput = {
    id?: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutMatchScoresInput
    provider: UserCreateNestedOneWithoutMatchScoresInput
  }

  export type MatchScoreUncheckedCreateInput = {
    id?: string
    orderId: string
    providerId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type MatchScoreUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutMatchScoresNestedInput
    provider?: UserUpdateOneRequiredWithoutMatchScoresNestedInput
  }

  export type MatchScoreUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreCreateManyInput = {
    id?: string
    orderId: string
    providerId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type MatchScoreUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationCreateInput = {
    id?: string
    inputText?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutLlmClassificationsInput
    category?: CategoryCreateNestedOneWithoutLlmClassificationsInput
  }

  export type LlmClassificationUncheckedCreateInput = {
    id?: string
    orderId: string
    inputText?: string | null
    categoryId?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type LlmClassificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutLlmClassificationsNestedInput
    category?: CategoryUpdateOneWithoutLlmClassificationsNestedInput
  }

  export type LlmClassificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationCreateManyInput = {
    id?: string
    orderId: string
    inputText?: string | null
    categoryId?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type LlmClassificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefusalRuleCreateInput = {
    code: string
    clientCreditPct: number
    providerPct: number
    platformPct: number
  }

  export type RefusalRuleUncheckedCreateInput = {
    code: string
    clientCreditPct: number
    providerPct: number
    platformPct: number
  }

  export type RefusalRuleUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    clientCreditPct?: IntFieldUpdateOperationsInput | number
    providerPct?: IntFieldUpdateOperationsInput | number
    platformPct?: IntFieldUpdateOperationsInput | number
  }

  export type RefusalRuleUncheckedUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    clientCreditPct?: IntFieldUpdateOperationsInput | number
    providerPct?: IntFieldUpdateOperationsInput | number
    platformPct?: IntFieldUpdateOperationsInput | number
  }

  export type RefusalRuleCreateManyInput = {
    code: string
    clientCreditPct: number
    providerPct: number
    platformPct: number
  }

  export type RefusalRuleUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    clientCreditPct?: IntFieldUpdateOperationsInput | number
    providerPct?: IntFieldUpdateOperationsInput | number
    platformPct?: IntFieldUpdateOperationsInput | number
  }

  export type RefusalRuleUncheckedUpdateManyInput = {
    code?: StringFieldUpdateOperationsInput | string
    clientCreditPct?: IntFieldUpdateOperationsInput | number
    providerPct?: IntFieldUpdateOperationsInput | number
    platformPct?: IntFieldUpdateOperationsInput | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type UserRoleAssignmentListRelationFilter = {
    every?: UserRoleAssignmentWhereInput
    some?: UserRoleAssignmentWhereInput
    none?: UserRoleAssignmentWhereInput
  }

  export type AddressListRelationFilter = {
    every?: AddressWhereInput
    some?: AddressWhereInput
    none?: AddressWhereInput
  }

  export type ProviderRequestListRelationFilter = {
    every?: ProviderRequestWhereInput
    some?: ProviderRequestWhereInput
    none?: ProviderRequestWhereInput
  }

  export type ProviderProfileNullableScalarRelationFilter = {
    is?: ProviderProfileWhereInput | null
    isNot?: ProviderProfileWhereInput | null
  }

  export type ProviderAvailabilityListRelationFilter = {
    every?: ProviderAvailabilityWhereInput
    some?: ProviderAvailabilityWhereInput
    none?: ProviderAvailabilityWhereInput
  }

  export type ProviderCategoryListRelationFilter = {
    every?: ProviderCategoryWhereInput
    some?: ProviderCategoryWhereInput
    none?: ProviderCategoryWhereInput
  }

  export type ProviderPayoutListRelationFilter = {
    every?: ProviderPayoutWhereInput
    some?: ProviderPayoutWhereInput
    none?: ProviderPayoutWhereInput
  }

  export type ClientCreditListRelationFilter = {
    every?: ClientCreditWhereInput
    some?: ClientCreditWhereInput
    none?: ClientCreditWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type OrderInvitationListRelationFilter = {
    every?: OrderInvitationWhereInput
    some?: OrderInvitationWhereInput
    none?: OrderInvitationWhereInput
  }

  export type OrderReviewListRelationFilter = {
    every?: OrderReviewWhereInput
    some?: OrderReviewWhereInput
    none?: OrderReviewWhereInput
  }

  export type OrderStatusHistoryListRelationFilter = {
    every?: OrderStatusHistoryWhereInput
    some?: OrderStatusHistoryWhereInput
    none?: OrderStatusHistoryWhereInput
  }

  export type MatchScoreListRelationFilter = {
    every?: MatchScoreWhereInput
    some?: MatchScoreWhereInput
    none?: MatchScoreWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserRoleAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderAvailabilityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProviderPayoutOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCreditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderInvitationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderStatusHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MatchScoreOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    role?: SortOrder
    phoneE164?: SortOrder
    whatsappId?: SortOrder
    cpf?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    role?: SortOrder
    phoneE164?: SortOrder
    whatsappId?: SortOrder
    cpf?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    role?: SortOrder
    phoneE164?: SortOrder
    whatsappId?: SortOrder
    cpf?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserRoleAssignmentUserIdRoleIdCompoundUniqueInput = {
    userId: string
    roleId: string
  }

  export type UserRoleAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserRoleAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserRoleAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type VerificationCountOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationMaxOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationMinOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumProviderRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderRequestStatus | EnumProviderRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderRequestStatusFilter<$PrismaModel> | $Enums.ProviderRequestStatus
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type ProviderRequestCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    services?: SortOrder
    description?: SortOrder
    experience?: SortOrder
    phone?: SortOrder
    cep?: SortOrder
    address?: SortOrder
    documentNumber?: SortOrder
    portfolioLinks?: SortOrder
    portfolioLinksJson?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProviderRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    description?: SortOrder
    experience?: SortOrder
    phone?: SortOrder
    cep?: SortOrder
    address?: SortOrder
    documentNumber?: SortOrder
    portfolioLinks?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProviderRequestMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    description?: SortOrder
    experience?: SortOrder
    phone?: SortOrder
    cep?: SortOrder
    address?: SortOrder
    documentNumber?: SortOrder
    portfolioLinks?: SortOrder
    status?: SortOrder
    rejectionReason?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumProviderRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderRequestStatus | EnumProviderRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProviderRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumProviderRequestStatusFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type AddressCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    label?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lon?: SortOrder
    createdAt?: SortOrder
  }

  export type AddressAvgOrderByAggregateInput = {
    lat?: SortOrder
    lon?: SortOrder
  }

  export type AddressMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    label?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lon?: SortOrder
    createdAt?: SortOrder
  }

  export type AddressMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    label?: SortOrder
    cep?: SortOrder
    street?: SortOrder
    number?: SortOrder
    complement?: SortOrder
    neighborhood?: SortOrder
    city?: SortOrder
    state?: SortOrder
    lat?: SortOrder
    lon?: SortOrder
    createdAt?: SortOrder
  }

  export type AddressSumOrderByAggregateInput = {
    lat?: SortOrder
    lon?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type ProviderProfileCountOrderByAggregateInput = {
    userId?: SortOrder
    bio?: SortOrder
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
  }

  export type ProviderProfileAvgOrderByAggregateInput = {
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
  }

  export type ProviderProfileMaxOrderByAggregateInput = {
    userId?: SortOrder
    bio?: SortOrder
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
  }

  export type ProviderProfileMinOrderByAggregateInput = {
    userId?: SortOrder
    bio?: SortOrder
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
  }

  export type ProviderProfileSumOrderByAggregateInput = {
    radiusKm?: SortOrder
    avgRating?: SortOrder
    totalReviews?: SortOrder
    acceptRate30d?: SortOrder
    responseP50S?: SortOrder
    noShow30d?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type ProviderAvailabilityProviderIdWeekdayStartTimeEndTimeCompoundUniqueInput = {
    providerId: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderAvailabilityCountOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    weekday?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
  }

  export type ProviderAvailabilityAvgOrderByAggregateInput = {
    weekday?: SortOrder
  }

  export type ProviderAvailabilityMaxOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    weekday?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
  }

  export type ProviderAvailabilityMinOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    weekday?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
  }

  export type ProviderAvailabilitySumOrderByAggregateInput = {
    weekday?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type ProviderCategoryProviderIdCategoryIdCompoundUniqueInput = {
    providerId: string
    categoryId: string
  }

  export type ProviderCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
    minPriceCents?: SortOrder
    active?: SortOrder
    updatedAt?: SortOrder
    levelWeight?: SortOrder
    expWeight?: SortOrder
    score?: SortOrder
    isAvailable?: SortOrder
  }

  export type ProviderCategoryAvgOrderByAggregateInput = {
    minPriceCents?: SortOrder
    levelWeight?: SortOrder
    expWeight?: SortOrder
    score?: SortOrder
  }

  export type ProviderCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
    minPriceCents?: SortOrder
    active?: SortOrder
    updatedAt?: SortOrder
    levelWeight?: SortOrder
    expWeight?: SortOrder
    score?: SortOrder
    isAvailable?: SortOrder
  }

  export type ProviderCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
    minPriceCents?: SortOrder
    active?: SortOrder
    updatedAt?: SortOrder
    levelWeight?: SortOrder
    expWeight?: SortOrder
    score?: SortOrder
    isAvailable?: SortOrder
  }

  export type ProviderCategorySumOrderByAggregateInput = {
    minPriceCents?: SortOrder
    levelWeight?: SortOrder
    expWeight?: SortOrder
    score?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type LlmClassificationListRelationFilter = {
    every?: LlmClassificationWhereInput
    some?: LlmClassificationWhereInput
    none?: LlmClassificationWhereInput
  }

  export type LlmClassificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    active?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    active?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    active?: SortOrder
  }

  export type AddressNullableScalarRelationFilter = {
    is?: AddressWhereInput | null
    isNot?: AddressWhereInput | null
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type OrderSlotListRelationFilter = {
    every?: OrderSlotWhereInput
    some?: OrderSlotWhereInput
    none?: OrderSlotWhereInput
  }

  export type OrderCategoryListRelationFilter = {
    every?: OrderCategoryWhereInput
    some?: OrderCategoryWhereInput
    none?: OrderCategoryWhereInput
  }

  export type OrderReviewNullableScalarRelationFilter = {
    is?: OrderReviewWhereInput | null
    isNot?: OrderReviewWhereInput | null
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type PaymentEventListRelationFilter = {
    every?: PaymentEventWhereInput
    some?: PaymentEventWhereInput
    none?: PaymentEventWhereInput
  }

  export type CommissionNullableScalarRelationFilter = {
    is?: CommissionWhereInput | null
    isNot?: CommissionWhereInput | null
  }

  export type ProviderPayoutNullableScalarRelationFilter = {
    is?: ProviderPayoutWhereInput | null
    isNot?: ProviderPayoutWhereInput | null
  }

  export type OrderSlotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    addressId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    status?: SortOrder
    depositMethod?: SortOrder
    depositBaseAvgCents?: SortOrder
    depositCents?: SortOrder
    slotStart?: SortOrder
    slotEnd?: SortOrder
    finalPriceCents?: SortOrder
    reviewStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    depositBaseAvgCents?: SortOrder
    depositCents?: SortOrder
    finalPriceCents?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    addressId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    status?: SortOrder
    depositMethod?: SortOrder
    depositBaseAvgCents?: SortOrder
    depositCents?: SortOrder
    slotStart?: SortOrder
    slotEnd?: SortOrder
    finalPriceCents?: SortOrder
    reviewStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    addressId?: SortOrder
    categoryId?: SortOrder
    description?: SortOrder
    status?: SortOrder
    depositMethod?: SortOrder
    depositBaseAvgCents?: SortOrder
    depositCents?: SortOrder
    slotStart?: SortOrder
    slotEnd?: SortOrder
    finalPriceCents?: SortOrder
    reviewStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    depositBaseAvgCents?: SortOrder
    depositCents?: SortOrder
    finalPriceCents?: SortOrder
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderSlotCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    label?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    origin?: SortOrder
    chosen?: SortOrder
  }

  export type OrderSlotMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    label?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    origin?: SortOrder
    chosen?: SortOrder
  }

  export type OrderSlotMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    label?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    origin?: SortOrder
    chosen?: SortOrder
  }

  export type OrderCategoryOrderIdCategorySlugCompoundUniqueInput = {
    orderId: string
    categorySlug: string
  }

  export type OrderCategoryCountOrderByAggregateInput = {
    orderId?: SortOrder
    categorySlug?: SortOrder
    confidence?: SortOrder
    rank?: SortOrder
  }

  export type OrderCategoryAvgOrderByAggregateInput = {
    confidence?: SortOrder
    rank?: SortOrder
  }

  export type OrderCategoryMaxOrderByAggregateInput = {
    orderId?: SortOrder
    categorySlug?: SortOrder
    confidence?: SortOrder
    rank?: SortOrder
  }

  export type OrderCategoryMinOrderByAggregateInput = {
    orderId?: SortOrder
    categorySlug?: SortOrder
    confidence?: SortOrder
    rank?: SortOrder
  }

  export type OrderCategorySumOrderByAggregateInput = {
    confidence?: SortOrder
    rank?: SortOrder
  }

  export type OrderSlotNullableScalarRelationFilter = {
    is?: OrderSlotWhereInput | null
    isNot?: OrderSlotWhereInput | null
  }

  export type OrderInvitationOrderIdProviderIdCompoundUniqueInput = {
    orderId: string
    providerId: string
  }

  export type OrderInvitationCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    slotId?: SortOrder
    score?: SortOrder
    sentAt?: SortOrder
    respondedAt?: SortOrder
    response?: SortOrder
    waMessageId?: SortOrder
    waRemoteJid?: SortOrder
    categorySlug?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    meta?: SortOrder
  }

  export type OrderInvitationAvgOrderByAggregateInput = {
    score?: SortOrder
  }

  export type OrderInvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    slotId?: SortOrder
    score?: SortOrder
    sentAt?: SortOrder
    respondedAt?: SortOrder
    response?: SortOrder
    waMessageId?: SortOrder
    waRemoteJid?: SortOrder
    categorySlug?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
  }

  export type OrderInvitationMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    slotId?: SortOrder
    score?: SortOrder
    sentAt?: SortOrder
    respondedAt?: SortOrder
    response?: SortOrder
    waMessageId?: SortOrder
    waRemoteJid?: SortOrder
    categorySlug?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
  }

  export type OrderInvitationSumOrderByAggregateInput = {
    score?: SortOrder
  }

  export type OrderStatusHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    oldStatus?: SortOrder
    newStatus?: SortOrder
    at?: SortOrder
    byUserId?: SortOrder
  }

  export type OrderStatusHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    oldStatus?: SortOrder
    newStatus?: SortOrder
    at?: SortOrder
    byUserId?: SortOrder
  }

  export type OrderStatusHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    oldStatus?: SortOrder
    newStatus?: SortOrder
    at?: SortOrder
    byUserId?: SortOrder
  }

  export type OrderReviewCountOrderByAggregateInput = {
    orderId?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type OrderReviewMaxOrderByAggregateInput = {
    orderId?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderReviewMinOrderByAggregateInput = {
    orderId?: SortOrder
    clientId?: SortOrder
    providerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderReviewSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type PaymentGatewayGatewayPaymentIdCompoundUniqueInput = {
    gateway: string
    gatewayPaymentId: string
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    kind?: SortOrder
    gateway?: SortOrder
    gatewayPaymentId?: SortOrder
    status?: SortOrder
    amountCents?: SortOrder
    createdAt?: SortOrder
    approvedAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amountCents?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    kind?: SortOrder
    gateway?: SortOrder
    gatewayPaymentId?: SortOrder
    status?: SortOrder
    amountCents?: SortOrder
    createdAt?: SortOrder
    approvedAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    kind?: SortOrder
    gateway?: SortOrder
    gatewayPaymentId?: SortOrder
    status?: SortOrder
    amountCents?: SortOrder
    createdAt?: SortOrder
    approvedAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amountCents?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PaymentNullableScalarRelationFilter = {
    is?: PaymentWhereInput | null
    isNot?: PaymentWhereInput | null
  }

  export type PaymentEventCountOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    orderId?: SortOrder
    rawPayload?: SortOrder
    receivedAt?: SortOrder
    signatureOk?: SortOrder
  }

  export type PaymentEventMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    orderId?: SortOrder
    receivedAt?: SortOrder
    signatureOk?: SortOrder
  }

  export type PaymentEventMinOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    orderId?: SortOrder
    receivedAt?: SortOrder
    signatureOk?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type CommissionCountOrderByAggregateInput = {
    orderId?: SortOrder
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
    computedAt?: SortOrder
  }

  export type CommissionAvgOrderByAggregateInput = {
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
  }

  export type CommissionMaxOrderByAggregateInput = {
    orderId?: SortOrder
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
    computedAt?: SortOrder
  }

  export type CommissionMinOrderByAggregateInput = {
    orderId?: SortOrder
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
    computedAt?: SortOrder
  }

  export type CommissionSumOrderByAggregateInput = {
    finalPriceCents?: SortOrder
    rateBp?: SortOrder
    minCents?: SortOrder
    maxCents?: SortOrder
    computedCents?: SortOrder
  }

  export type ClientCreditCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    amountCents?: SortOrder
    expiresAt?: SortOrder
    usedCents?: SortOrder
    createdAt?: SortOrder
  }

  export type ClientCreditAvgOrderByAggregateInput = {
    amountCents?: SortOrder
    usedCents?: SortOrder
  }

  export type ClientCreditMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    amountCents?: SortOrder
    expiresAt?: SortOrder
    usedCents?: SortOrder
    createdAt?: SortOrder
  }

  export type ClientCreditMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    amountCents?: SortOrder
    expiresAt?: SortOrder
    usedCents?: SortOrder
    createdAt?: SortOrder
  }

  export type ClientCreditSumOrderByAggregateInput = {
    amountCents?: SortOrder
    usedCents?: SortOrder
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type ProviderPayoutCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
    status?: SortOrder
    paidAt?: SortOrder
  }

  export type ProviderPayoutAvgOrderByAggregateInput = {
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
  }

  export type ProviderPayoutMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
    status?: SortOrder
    paidAt?: SortOrder
  }

  export type ProviderPayoutMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
    status?: SortOrder
    paidAt?: SortOrder
  }

  export type ProviderPayoutSumOrderByAggregateInput = {
    grossCents?: SortOrder
    commissionCents?: SortOrder
    netCents?: SortOrder
  }

  export type MatchScoreCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    distanceKm?: SortOrder
    ratingNorm?: SortOrder
    acceptRate?: SortOrder
    responseFast?: SortOrder
    reliability?: SortOrder
    finalScore?: SortOrder
    createdAt?: SortOrder
  }

  export type MatchScoreAvgOrderByAggregateInput = {
    distanceKm?: SortOrder
    ratingNorm?: SortOrder
    acceptRate?: SortOrder
    responseFast?: SortOrder
    reliability?: SortOrder
    finalScore?: SortOrder
  }

  export type MatchScoreMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    distanceKm?: SortOrder
    ratingNorm?: SortOrder
    acceptRate?: SortOrder
    responseFast?: SortOrder
    reliability?: SortOrder
    finalScore?: SortOrder
    createdAt?: SortOrder
  }

  export type MatchScoreMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    providerId?: SortOrder
    distanceKm?: SortOrder
    ratingNorm?: SortOrder
    acceptRate?: SortOrder
    responseFast?: SortOrder
    reliability?: SortOrder
    finalScore?: SortOrder
    createdAt?: SortOrder
  }

  export type MatchScoreSumOrderByAggregateInput = {
    distanceKm?: SortOrder
    ratingNorm?: SortOrder
    acceptRate?: SortOrder
    responseFast?: SortOrder
    reliability?: SortOrder
    finalScore?: SortOrder
  }

  export type LlmClassificationCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    inputText?: SortOrder
    categoryId?: SortOrder
    confidence?: SortOrder
    createdAt?: SortOrder
  }

  export type LlmClassificationAvgOrderByAggregateInput = {
    confidence?: SortOrder
  }

  export type LlmClassificationMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    inputText?: SortOrder
    categoryId?: SortOrder
    confidence?: SortOrder
    createdAt?: SortOrder
  }

  export type LlmClassificationMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    inputText?: SortOrder
    categoryId?: SortOrder
    confidence?: SortOrder
    createdAt?: SortOrder
  }

  export type LlmClassificationSumOrderByAggregateInput = {
    confidence?: SortOrder
  }

  export type RefusalRuleCountOrderByAggregateInput = {
    code?: SortOrder
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type RefusalRuleAvgOrderByAggregateInput = {
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type RefusalRuleMaxOrderByAggregateInput = {
    code?: SortOrder
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type RefusalRuleMinOrderByAggregateInput = {
    code?: SortOrder
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type RefusalRuleSumOrderByAggregateInput = {
    clientCreditPct?: SortOrder
    providerPct?: SortOrder
    platformPct?: SortOrder
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserRoleAssignmentCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput> | UserRoleAssignmentCreateWithoutUserInput[] | UserRoleAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutUserInput | UserRoleAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: UserRoleAssignmentCreateManyUserInputEnvelope
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
  }

  export type AddressCreateNestedManyWithoutUserInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type ProviderRequestCreateNestedManyWithoutUserInput = {
    create?: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput> | ProviderRequestCreateWithoutUserInput[] | ProviderRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutUserInput | ProviderRequestCreateOrConnectWithoutUserInput[]
    createMany?: ProviderRequestCreateManyUserInputEnvelope
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
  }

  export type ProviderRequestCreateNestedManyWithoutReviewedByUserInput = {
    create?: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput> | ProviderRequestCreateWithoutReviewedByUserInput[] | ProviderRequestUncheckedCreateWithoutReviewedByUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutReviewedByUserInput | ProviderRequestCreateOrConnectWithoutReviewedByUserInput[]
    createMany?: ProviderRequestCreateManyReviewedByUserInputEnvelope
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
  }

  export type ProviderProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProviderProfileCreateOrConnectWithoutUserInput
    connect?: ProviderProfileWhereUniqueInput
  }

  export type ProviderAvailabilityCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput> | ProviderAvailabilityCreateWithoutProviderInput[] | ProviderAvailabilityUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderAvailabilityCreateOrConnectWithoutProviderInput | ProviderAvailabilityCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderAvailabilityCreateManyProviderInputEnvelope
    connect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
  }

  export type ProviderCategoryCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput> | ProviderCategoryCreateWithoutProviderInput[] | ProviderCategoryUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutProviderInput | ProviderCategoryCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderCategoryCreateManyProviderInputEnvelope
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
  }

  export type ProviderPayoutCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput> | ProviderPayoutCreateWithoutProviderInput[] | ProviderPayoutUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutProviderInput | ProviderPayoutCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderPayoutCreateManyProviderInputEnvelope
    connect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
  }

  export type ClientCreditCreateNestedManyWithoutUserInput = {
    create?: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput> | ClientCreditCreateWithoutUserInput[] | ClientCreditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutUserInput | ClientCreditCreateOrConnectWithoutUserInput[]
    createMany?: ClientCreditCreateManyUserInputEnvelope
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutClientInput = {
    create?: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput> | OrderCreateWithoutClientInput[] | OrderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutClientInput | OrderCreateOrConnectWithoutClientInput[]
    createMany?: OrderCreateManyClientInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput> | OrderCreateWithoutProviderInput[] | OrderUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutProviderInput | OrderCreateOrConnectWithoutProviderInput[]
    createMany?: OrderCreateManyProviderInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderInvitationCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput> | OrderInvitationCreateWithoutProviderInput[] | OrderInvitationUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutProviderInput | OrderInvitationCreateOrConnectWithoutProviderInput[]
    createMany?: OrderInvitationCreateManyProviderInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderReviewCreateNestedManyWithoutClientInput = {
    create?: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput> | OrderReviewCreateWithoutClientInput[] | OrderReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutClientInput | OrderReviewCreateOrConnectWithoutClientInput[]
    createMany?: OrderReviewCreateManyClientInputEnvelope
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
  }

  export type OrderReviewCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput> | OrderReviewCreateWithoutProviderInput[] | OrderReviewUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutProviderInput | OrderReviewCreateOrConnectWithoutProviderInput[]
    createMany?: OrderReviewCreateManyProviderInputEnvelope
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
  }

  export type OrderStatusHistoryCreateNestedManyWithoutByUserInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput> | OrderStatusHistoryCreateWithoutByUserInput[] | OrderStatusHistoryUncheckedCreateWithoutByUserInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutByUserInput | OrderStatusHistoryCreateOrConnectWithoutByUserInput[]
    createMany?: OrderStatusHistoryCreateManyByUserInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type MatchScoreCreateNestedManyWithoutProviderInput = {
    create?: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput> | MatchScoreCreateWithoutProviderInput[] | MatchScoreUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutProviderInput | MatchScoreCreateOrConnectWithoutProviderInput[]
    createMany?: MatchScoreCreateManyProviderInputEnvelope
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput> | UserRoleAssignmentCreateWithoutUserInput[] | UserRoleAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutUserInput | UserRoleAssignmentCreateOrConnectWithoutUserInput[]
    createMany?: UserRoleAssignmentCreateManyUserInputEnvelope
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
  }

  export type AddressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type ProviderRequestUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput> | ProviderRequestCreateWithoutUserInput[] | ProviderRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutUserInput | ProviderRequestCreateOrConnectWithoutUserInput[]
    createMany?: ProviderRequestCreateManyUserInputEnvelope
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
  }

  export type ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput = {
    create?: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput> | ProviderRequestCreateWithoutReviewedByUserInput[] | ProviderRequestUncheckedCreateWithoutReviewedByUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutReviewedByUserInput | ProviderRequestCreateOrConnectWithoutReviewedByUserInput[]
    createMany?: ProviderRequestCreateManyReviewedByUserInputEnvelope
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
  }

  export type ProviderProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProviderProfileCreateOrConnectWithoutUserInput
    connect?: ProviderProfileWhereUniqueInput
  }

  export type ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput> | ProviderAvailabilityCreateWithoutProviderInput[] | ProviderAvailabilityUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderAvailabilityCreateOrConnectWithoutProviderInput | ProviderAvailabilityCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderAvailabilityCreateManyProviderInputEnvelope
    connect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
  }

  export type ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput> | ProviderCategoryCreateWithoutProviderInput[] | ProviderCategoryUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutProviderInput | ProviderCategoryCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderCategoryCreateManyProviderInputEnvelope
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
  }

  export type ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput> | ProviderPayoutCreateWithoutProviderInput[] | ProviderPayoutUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutProviderInput | ProviderPayoutCreateOrConnectWithoutProviderInput[]
    createMany?: ProviderPayoutCreateManyProviderInputEnvelope
    connect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
  }

  export type ClientCreditUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput> | ClientCreditCreateWithoutUserInput[] | ClientCreditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutUserInput | ClientCreditCreateOrConnectWithoutUserInput[]
    createMany?: ClientCreditCreateManyUserInputEnvelope
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput> | OrderCreateWithoutClientInput[] | OrderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutClientInput | OrderCreateOrConnectWithoutClientInput[]
    createMany?: OrderCreateManyClientInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput> | OrderCreateWithoutProviderInput[] | OrderUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutProviderInput | OrderCreateOrConnectWithoutProviderInput[]
    createMany?: OrderCreateManyProviderInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderInvitationUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput> | OrderInvitationCreateWithoutProviderInput[] | OrderInvitationUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutProviderInput | OrderInvitationCreateOrConnectWithoutProviderInput[]
    createMany?: OrderInvitationCreateManyProviderInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderReviewUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput> | OrderReviewCreateWithoutClientInput[] | OrderReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutClientInput | OrderReviewCreateOrConnectWithoutClientInput[]
    createMany?: OrderReviewCreateManyClientInputEnvelope
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
  }

  export type OrderReviewUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput> | OrderReviewCreateWithoutProviderInput[] | OrderReviewUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutProviderInput | OrderReviewCreateOrConnectWithoutProviderInput[]
    createMany?: OrderReviewCreateManyProviderInputEnvelope
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
  }

  export type OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput> | OrderStatusHistoryCreateWithoutByUserInput[] | OrderStatusHistoryUncheckedCreateWithoutByUserInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutByUserInput | OrderStatusHistoryCreateOrConnectWithoutByUserInput[]
    createMany?: OrderStatusHistoryCreateManyByUserInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type MatchScoreUncheckedCreateNestedManyWithoutProviderInput = {
    create?: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput> | MatchScoreCreateWithoutProviderInput[] | MatchScoreUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutProviderInput | MatchScoreCreateOrConnectWithoutProviderInput[]
    createMany?: MatchScoreCreateManyProviderInputEnvelope
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserRoleAssignmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput> | UserRoleAssignmentCreateWithoutUserInput[] | UserRoleAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutUserInput | UserRoleAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: UserRoleAssignmentUpsertWithWhereUniqueWithoutUserInput | UserRoleAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRoleAssignmentCreateManyUserInputEnvelope
    set?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    disconnect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    delete?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    update?: UserRoleAssignmentUpdateWithWhereUniqueWithoutUserInput | UserRoleAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRoleAssignmentUpdateManyWithWhereWithoutUserInput | UserRoleAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
  }

  export type AddressUpdateManyWithoutUserNestedInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUserInput | AddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUserInput | AddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUserInput | AddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type ProviderRequestUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput> | ProviderRequestCreateWithoutUserInput[] | ProviderRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutUserInput | ProviderRequestCreateOrConnectWithoutUserInput[]
    upsert?: ProviderRequestUpsertWithWhereUniqueWithoutUserInput | ProviderRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProviderRequestCreateManyUserInputEnvelope
    set?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    disconnect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    delete?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    update?: ProviderRequestUpdateWithWhereUniqueWithoutUserInput | ProviderRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProviderRequestUpdateManyWithWhereWithoutUserInput | ProviderRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
  }

  export type ProviderRequestUpdateManyWithoutReviewedByUserNestedInput = {
    create?: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput> | ProviderRequestCreateWithoutReviewedByUserInput[] | ProviderRequestUncheckedCreateWithoutReviewedByUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutReviewedByUserInput | ProviderRequestCreateOrConnectWithoutReviewedByUserInput[]
    upsert?: ProviderRequestUpsertWithWhereUniqueWithoutReviewedByUserInput | ProviderRequestUpsertWithWhereUniqueWithoutReviewedByUserInput[]
    createMany?: ProviderRequestCreateManyReviewedByUserInputEnvelope
    set?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    disconnect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    delete?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    update?: ProviderRequestUpdateWithWhereUniqueWithoutReviewedByUserInput | ProviderRequestUpdateWithWhereUniqueWithoutReviewedByUserInput[]
    updateMany?: ProviderRequestUpdateManyWithWhereWithoutReviewedByUserInput | ProviderRequestUpdateManyWithWhereWithoutReviewedByUserInput[]
    deleteMany?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
  }

  export type ProviderProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProviderProfileCreateOrConnectWithoutUserInput
    upsert?: ProviderProfileUpsertWithoutUserInput
    disconnect?: ProviderProfileWhereInput | boolean
    delete?: ProviderProfileWhereInput | boolean
    connect?: ProviderProfileWhereUniqueInput
    update?: XOR<XOR<ProviderProfileUpdateToOneWithWhereWithoutUserInput, ProviderProfileUpdateWithoutUserInput>, ProviderProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProviderAvailabilityUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput> | ProviderAvailabilityCreateWithoutProviderInput[] | ProviderAvailabilityUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderAvailabilityCreateOrConnectWithoutProviderInput | ProviderAvailabilityCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderAvailabilityUpsertWithWhereUniqueWithoutProviderInput | ProviderAvailabilityUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderAvailabilityCreateManyProviderInputEnvelope
    set?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    disconnect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    delete?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    connect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    update?: ProviderAvailabilityUpdateWithWhereUniqueWithoutProviderInput | ProviderAvailabilityUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderAvailabilityUpdateManyWithWhereWithoutProviderInput | ProviderAvailabilityUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderAvailabilityScalarWhereInput | ProviderAvailabilityScalarWhereInput[]
  }

  export type ProviderCategoryUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput> | ProviderCategoryCreateWithoutProviderInput[] | ProviderCategoryUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutProviderInput | ProviderCategoryCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderCategoryUpsertWithWhereUniqueWithoutProviderInput | ProviderCategoryUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderCategoryCreateManyProviderInputEnvelope
    set?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    disconnect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    delete?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    update?: ProviderCategoryUpdateWithWhereUniqueWithoutProviderInput | ProviderCategoryUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderCategoryUpdateManyWithWhereWithoutProviderInput | ProviderCategoryUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
  }

  export type ProviderPayoutUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput> | ProviderPayoutCreateWithoutProviderInput[] | ProviderPayoutUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutProviderInput | ProviderPayoutCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderPayoutUpsertWithWhereUniqueWithoutProviderInput | ProviderPayoutUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderPayoutCreateManyProviderInputEnvelope
    set?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    disconnect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    delete?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    connect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    update?: ProviderPayoutUpdateWithWhereUniqueWithoutProviderInput | ProviderPayoutUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderPayoutUpdateManyWithWhereWithoutProviderInput | ProviderPayoutUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderPayoutScalarWhereInput | ProviderPayoutScalarWhereInput[]
  }

  export type ClientCreditUpdateManyWithoutUserNestedInput = {
    create?: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput> | ClientCreditCreateWithoutUserInput[] | ClientCreditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutUserInput | ClientCreditCreateOrConnectWithoutUserInput[]
    upsert?: ClientCreditUpsertWithWhereUniqueWithoutUserInput | ClientCreditUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ClientCreditCreateManyUserInputEnvelope
    set?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    disconnect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    delete?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    update?: ClientCreditUpdateWithWhereUniqueWithoutUserInput | ClientCreditUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ClientCreditUpdateManyWithWhereWithoutUserInput | ClientCreditUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutClientNestedInput = {
    create?: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput> | OrderCreateWithoutClientInput[] | OrderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutClientInput | OrderCreateOrConnectWithoutClientInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutClientInput | OrderUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OrderCreateManyClientInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutClientInput | OrderUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutClientInput | OrderUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput> | OrderCreateWithoutProviderInput[] | OrderUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutProviderInput | OrderCreateOrConnectWithoutProviderInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutProviderInput | OrderUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderCreateManyProviderInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutProviderInput | OrderUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutProviderInput | OrderUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderInvitationUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput> | OrderInvitationCreateWithoutProviderInput[] | OrderInvitationUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutProviderInput | OrderInvitationCreateOrConnectWithoutProviderInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutProviderInput | OrderInvitationUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderInvitationCreateManyProviderInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutProviderInput | OrderInvitationUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutProviderInput | OrderInvitationUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderReviewUpdateManyWithoutClientNestedInput = {
    create?: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput> | OrderReviewCreateWithoutClientInput[] | OrderReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutClientInput | OrderReviewCreateOrConnectWithoutClientInput[]
    upsert?: OrderReviewUpsertWithWhereUniqueWithoutClientInput | OrderReviewUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OrderReviewCreateManyClientInputEnvelope
    set?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    disconnect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    delete?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    update?: OrderReviewUpdateWithWhereUniqueWithoutClientInput | OrderReviewUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OrderReviewUpdateManyWithWhereWithoutClientInput | OrderReviewUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
  }

  export type OrderReviewUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput> | OrderReviewCreateWithoutProviderInput[] | OrderReviewUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutProviderInput | OrderReviewCreateOrConnectWithoutProviderInput[]
    upsert?: OrderReviewUpsertWithWhereUniqueWithoutProviderInput | OrderReviewUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderReviewCreateManyProviderInputEnvelope
    set?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    disconnect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    delete?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    update?: OrderReviewUpdateWithWhereUniqueWithoutProviderInput | OrderReviewUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderReviewUpdateManyWithWhereWithoutProviderInput | OrderReviewUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
  }

  export type OrderStatusHistoryUpdateManyWithoutByUserNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput> | OrderStatusHistoryCreateWithoutByUserInput[] | OrderStatusHistoryUncheckedCreateWithoutByUserInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutByUserInput | OrderStatusHistoryCreateOrConnectWithoutByUserInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutByUserInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutByUserInput[]
    createMany?: OrderStatusHistoryCreateManyByUserInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutByUserInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutByUserInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutByUserInput | OrderStatusHistoryUpdateManyWithWhereWithoutByUserInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type MatchScoreUpdateManyWithoutProviderNestedInput = {
    create?: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput> | MatchScoreCreateWithoutProviderInput[] | MatchScoreUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutProviderInput | MatchScoreCreateOrConnectWithoutProviderInput[]
    upsert?: MatchScoreUpsertWithWhereUniqueWithoutProviderInput | MatchScoreUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: MatchScoreCreateManyProviderInputEnvelope
    set?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    disconnect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    delete?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    update?: MatchScoreUpdateWithWhereUniqueWithoutProviderInput | MatchScoreUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: MatchScoreUpdateManyWithWhereWithoutProviderInput | MatchScoreUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput> | UserRoleAssignmentCreateWithoutUserInput[] | UserRoleAssignmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutUserInput | UserRoleAssignmentCreateOrConnectWithoutUserInput[]
    upsert?: UserRoleAssignmentUpsertWithWhereUniqueWithoutUserInput | UserRoleAssignmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRoleAssignmentCreateManyUserInputEnvelope
    set?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    disconnect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    delete?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    update?: UserRoleAssignmentUpdateWithWhereUniqueWithoutUserInput | UserRoleAssignmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRoleAssignmentUpdateManyWithWhereWithoutUserInput | UserRoleAssignmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
  }

  export type AddressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput> | AddressCreateWithoutUserInput[] | AddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUserInput | AddressCreateOrConnectWithoutUserInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUserInput | AddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AddressCreateManyUserInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUserInput | AddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUserInput | AddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type ProviderRequestUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput> | ProviderRequestCreateWithoutUserInput[] | ProviderRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutUserInput | ProviderRequestCreateOrConnectWithoutUserInput[]
    upsert?: ProviderRequestUpsertWithWhereUniqueWithoutUserInput | ProviderRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ProviderRequestCreateManyUserInputEnvelope
    set?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    disconnect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    delete?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    update?: ProviderRequestUpdateWithWhereUniqueWithoutUserInput | ProviderRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ProviderRequestUpdateManyWithWhereWithoutUserInput | ProviderRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
  }

  export type ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput = {
    create?: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput> | ProviderRequestCreateWithoutReviewedByUserInput[] | ProviderRequestUncheckedCreateWithoutReviewedByUserInput[]
    connectOrCreate?: ProviderRequestCreateOrConnectWithoutReviewedByUserInput | ProviderRequestCreateOrConnectWithoutReviewedByUserInput[]
    upsert?: ProviderRequestUpsertWithWhereUniqueWithoutReviewedByUserInput | ProviderRequestUpsertWithWhereUniqueWithoutReviewedByUserInput[]
    createMany?: ProviderRequestCreateManyReviewedByUserInputEnvelope
    set?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    disconnect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    delete?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    connect?: ProviderRequestWhereUniqueInput | ProviderRequestWhereUniqueInput[]
    update?: ProviderRequestUpdateWithWhereUniqueWithoutReviewedByUserInput | ProviderRequestUpdateWithWhereUniqueWithoutReviewedByUserInput[]
    updateMany?: ProviderRequestUpdateManyWithWhereWithoutReviewedByUserInput | ProviderRequestUpdateManyWithWhereWithoutReviewedByUserInput[]
    deleteMany?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
  }

  export type ProviderProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProviderProfileCreateOrConnectWithoutUserInput
    upsert?: ProviderProfileUpsertWithoutUserInput
    disconnect?: ProviderProfileWhereInput | boolean
    delete?: ProviderProfileWhereInput | boolean
    connect?: ProviderProfileWhereUniqueInput
    update?: XOR<XOR<ProviderProfileUpdateToOneWithWhereWithoutUserInput, ProviderProfileUpdateWithoutUserInput>, ProviderProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput> | ProviderAvailabilityCreateWithoutProviderInput[] | ProviderAvailabilityUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderAvailabilityCreateOrConnectWithoutProviderInput | ProviderAvailabilityCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderAvailabilityUpsertWithWhereUniqueWithoutProviderInput | ProviderAvailabilityUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderAvailabilityCreateManyProviderInputEnvelope
    set?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    disconnect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    delete?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    connect?: ProviderAvailabilityWhereUniqueInput | ProviderAvailabilityWhereUniqueInput[]
    update?: ProviderAvailabilityUpdateWithWhereUniqueWithoutProviderInput | ProviderAvailabilityUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderAvailabilityUpdateManyWithWhereWithoutProviderInput | ProviderAvailabilityUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderAvailabilityScalarWhereInput | ProviderAvailabilityScalarWhereInput[]
  }

  export type ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput> | ProviderCategoryCreateWithoutProviderInput[] | ProviderCategoryUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutProviderInput | ProviderCategoryCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderCategoryUpsertWithWhereUniqueWithoutProviderInput | ProviderCategoryUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderCategoryCreateManyProviderInputEnvelope
    set?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    disconnect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    delete?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    update?: ProviderCategoryUpdateWithWhereUniqueWithoutProviderInput | ProviderCategoryUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderCategoryUpdateManyWithWhereWithoutProviderInput | ProviderCategoryUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
  }

  export type ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput> | ProviderPayoutCreateWithoutProviderInput[] | ProviderPayoutUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutProviderInput | ProviderPayoutCreateOrConnectWithoutProviderInput[]
    upsert?: ProviderPayoutUpsertWithWhereUniqueWithoutProviderInput | ProviderPayoutUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: ProviderPayoutCreateManyProviderInputEnvelope
    set?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    disconnect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    delete?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    connect?: ProviderPayoutWhereUniqueInput | ProviderPayoutWhereUniqueInput[]
    update?: ProviderPayoutUpdateWithWhereUniqueWithoutProviderInput | ProviderPayoutUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: ProviderPayoutUpdateManyWithWhereWithoutProviderInput | ProviderPayoutUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: ProviderPayoutScalarWhereInput | ProviderPayoutScalarWhereInput[]
  }

  export type ClientCreditUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput> | ClientCreditCreateWithoutUserInput[] | ClientCreditUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutUserInput | ClientCreditCreateOrConnectWithoutUserInput[]
    upsert?: ClientCreditUpsertWithWhereUniqueWithoutUserInput | ClientCreditUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ClientCreditCreateManyUserInputEnvelope
    set?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    disconnect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    delete?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    update?: ClientCreditUpdateWithWhereUniqueWithoutUserInput | ClientCreditUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ClientCreditUpdateManyWithWhereWithoutUserInput | ClientCreditUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput> | OrderCreateWithoutClientInput[] | OrderUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutClientInput | OrderCreateOrConnectWithoutClientInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutClientInput | OrderUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OrderCreateManyClientInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutClientInput | OrderUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutClientInput | OrderUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput> | OrderCreateWithoutProviderInput[] | OrderUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutProviderInput | OrderCreateOrConnectWithoutProviderInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutProviderInput | OrderUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderCreateManyProviderInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutProviderInput | OrderUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutProviderInput | OrderUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput> | OrderInvitationCreateWithoutProviderInput[] | OrderInvitationUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutProviderInput | OrderInvitationCreateOrConnectWithoutProviderInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutProviderInput | OrderInvitationUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderInvitationCreateManyProviderInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutProviderInput | OrderInvitationUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutProviderInput | OrderInvitationUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderReviewUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput> | OrderReviewCreateWithoutClientInput[] | OrderReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutClientInput | OrderReviewCreateOrConnectWithoutClientInput[]
    upsert?: OrderReviewUpsertWithWhereUniqueWithoutClientInput | OrderReviewUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: OrderReviewCreateManyClientInputEnvelope
    set?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    disconnect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    delete?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    update?: OrderReviewUpdateWithWhereUniqueWithoutClientInput | OrderReviewUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: OrderReviewUpdateManyWithWhereWithoutClientInput | OrderReviewUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
  }

  export type OrderReviewUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput> | OrderReviewCreateWithoutProviderInput[] | OrderReviewUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: OrderReviewCreateOrConnectWithoutProviderInput | OrderReviewCreateOrConnectWithoutProviderInput[]
    upsert?: OrderReviewUpsertWithWhereUniqueWithoutProviderInput | OrderReviewUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: OrderReviewCreateManyProviderInputEnvelope
    set?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    disconnect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    delete?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    connect?: OrderReviewWhereUniqueInput | OrderReviewWhereUniqueInput[]
    update?: OrderReviewUpdateWithWhereUniqueWithoutProviderInput | OrderReviewUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: OrderReviewUpdateManyWithWhereWithoutProviderInput | OrderReviewUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput> | OrderStatusHistoryCreateWithoutByUserInput[] | OrderStatusHistoryUncheckedCreateWithoutByUserInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutByUserInput | OrderStatusHistoryCreateOrConnectWithoutByUserInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutByUserInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutByUserInput[]
    createMany?: OrderStatusHistoryCreateManyByUserInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutByUserInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutByUserInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutByUserInput | OrderStatusHistoryUpdateManyWithWhereWithoutByUserInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type MatchScoreUncheckedUpdateManyWithoutProviderNestedInput = {
    create?: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput> | MatchScoreCreateWithoutProviderInput[] | MatchScoreUncheckedCreateWithoutProviderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutProviderInput | MatchScoreCreateOrConnectWithoutProviderInput[]
    upsert?: MatchScoreUpsertWithWhereUniqueWithoutProviderInput | MatchScoreUpsertWithWhereUniqueWithoutProviderInput[]
    createMany?: MatchScoreCreateManyProviderInputEnvelope
    set?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    disconnect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    delete?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    update?: MatchScoreUpdateWithWhereUniqueWithoutProviderInput | MatchScoreUpdateWithWhereUniqueWithoutProviderInput[]
    updateMany?: MatchScoreUpdateManyWithWhereWithoutProviderInput | MatchScoreUpdateManyWithWhereWithoutProviderInput[]
    deleteMany?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
  }

  export type UserRoleAssignmentCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput> | UserRoleAssignmentCreateWithoutRoleInput[] | UserRoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutRoleInput | UserRoleAssignmentCreateOrConnectWithoutRoleInput[]
    createMany?: UserRoleAssignmentCreateManyRoleInputEnvelope
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
  }

  export type UserRoleAssignmentUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput> | UserRoleAssignmentCreateWithoutRoleInput[] | UserRoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutRoleInput | UserRoleAssignmentCreateOrConnectWithoutRoleInput[]
    createMany?: UserRoleAssignmentCreateManyRoleInputEnvelope
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type UserRoleAssignmentUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput> | UserRoleAssignmentCreateWithoutRoleInput[] | UserRoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutRoleInput | UserRoleAssignmentCreateOrConnectWithoutRoleInput[]
    upsert?: UserRoleAssignmentUpsertWithWhereUniqueWithoutRoleInput | UserRoleAssignmentUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserRoleAssignmentCreateManyRoleInputEnvelope
    set?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    disconnect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    delete?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    update?: UserRoleAssignmentUpdateWithWhereUniqueWithoutRoleInput | UserRoleAssignmentUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserRoleAssignmentUpdateManyWithWhereWithoutRoleInput | UserRoleAssignmentUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
  }

  export type UserRoleAssignmentUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput> | UserRoleAssignmentCreateWithoutRoleInput[] | UserRoleAssignmentUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleAssignmentCreateOrConnectWithoutRoleInput | UserRoleAssignmentCreateOrConnectWithoutRoleInput[]
    upsert?: UserRoleAssignmentUpsertWithWhereUniqueWithoutRoleInput | UserRoleAssignmentUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserRoleAssignmentCreateManyRoleInputEnvelope
    set?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    disconnect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    delete?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    connect?: UserRoleAssignmentWhereUniqueInput | UserRoleAssignmentWhereUniqueInput[]
    update?: UserRoleAssignmentUpdateWithWhereUniqueWithoutRoleInput | UserRoleAssignmentUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserRoleAssignmentUpdateManyWithWhereWithoutRoleInput | UserRoleAssignmentUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutUserRolesInput = {
    create?: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserRolesInput
    connect?: RoleWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserRolesInput = {
    create?: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRolesInput
    connect?: UserWhereUniqueInput
  }

  export type RoleUpdateOneRequiredWithoutUserRolesNestedInput = {
    create?: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserRolesInput
    upsert?: RoleUpsertWithoutUserRolesInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUserRolesInput, RoleUpdateWithoutUserRolesInput>, RoleUncheckedUpdateWithoutUserRolesInput>
  }

  export type UserUpdateOneRequiredWithoutUserRolesNestedInput = {
    create?: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRolesInput
    upsert?: UserUpsertWithoutUserRolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserRolesInput, UserUpdateWithoutUserRolesInput>, UserUncheckedUpdateWithoutUserRolesInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutProviderRequestsInput = {
    create?: XOR<UserCreateWithoutProviderRequestsInput, UserUncheckedCreateWithoutProviderRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedRequestsInput = {
    create?: XOR<UserCreateWithoutReviewedRequestsInput, UserUncheckedCreateWithoutReviewedRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumProviderRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProviderRequestStatus
  }

  export type UserUpdateOneRequiredWithoutProviderRequestsNestedInput = {
    create?: XOR<UserCreateWithoutProviderRequestsInput, UserUncheckedCreateWithoutProviderRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderRequestsInput
    upsert?: UserUpsertWithoutProviderRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProviderRequestsInput, UserUpdateWithoutProviderRequestsInput>, UserUncheckedUpdateWithoutProviderRequestsInput>
  }

  export type UserUpdateOneWithoutReviewedRequestsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedRequestsInput, UserUncheckedCreateWithoutReviewedRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedRequestsInput
    upsert?: UserUpsertWithoutReviewedRequestsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedRequestsInput, UserUpdateWithoutReviewedRequestsInput>, UserUncheckedUpdateWithoutReviewedRequestsInput>
  }

  export type UserCreateNestedOneWithoutAddressesInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedManyWithoutAddressInput = {
    create?: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput> | OrderCreateWithoutAddressInput[] | OrderUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutAddressInput | OrderCreateOrConnectWithoutAddressInput[]
    createMany?: OrderCreateManyAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput> | OrderCreateWithoutAddressInput[] | OrderUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutAddressInput | OrderCreateOrConnectWithoutAddressInput[]
    createMany?: OrderCreateManyAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneWithoutAddressesNestedInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    upsert?: UserUpsertWithoutAddressesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAddressesInput, UserUpdateWithoutAddressesInput>, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type OrderUpdateManyWithoutAddressNestedInput = {
    create?: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput> | OrderCreateWithoutAddressInput[] | OrderUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutAddressInput | OrderCreateOrConnectWithoutAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutAddressInput | OrderUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: OrderCreateManyAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutAddressInput | OrderUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutAddressInput | OrderUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput> | OrderCreateWithoutAddressInput[] | OrderUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutAddressInput | OrderCreateOrConnectWithoutAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutAddressInput | OrderUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: OrderCreateManyAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutAddressInput | OrderUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutAddressInput | OrderUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutProviderProfileInput = {
    create?: XOR<UserCreateWithoutProviderProfileInput, UserUncheckedCreateWithoutProviderProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderProfileInput
    connect?: UserWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutProviderProfileNestedInput = {
    create?: XOR<UserCreateWithoutProviderProfileInput, UserUncheckedCreateWithoutProviderProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderProfileInput
    upsert?: UserUpsertWithoutProviderProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProviderProfileInput, UserUpdateWithoutProviderProfileInput>, UserUncheckedUpdateWithoutProviderProfileInput>
  }

  export type UserCreateNestedOneWithoutProviderAvailabilityInput = {
    create?: XOR<UserCreateWithoutProviderAvailabilityInput, UserUncheckedCreateWithoutProviderAvailabilityInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderAvailabilityInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutProviderAvailabilityNestedInput = {
    create?: XOR<UserCreateWithoutProviderAvailabilityInput, UserUncheckedCreateWithoutProviderAvailabilityInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderAvailabilityInput
    upsert?: UserUpsertWithoutProviderAvailabilityInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProviderAvailabilityInput, UserUpdateWithoutProviderAvailabilityInput>, UserUncheckedUpdateWithoutProviderAvailabilityInput>
  }

  export type UserCreateNestedOneWithoutProviderCategoriesInput = {
    create?: XOR<UserCreateWithoutProviderCategoriesInput, UserUncheckedCreateWithoutProviderCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutProviderCategoriesInput = {
    create?: XOR<CategoryCreateWithoutProviderCategoriesInput, CategoryUncheckedCreateWithoutProviderCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProviderCategoriesInput
    connect?: CategoryWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UserUpdateOneRequiredWithoutProviderCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutProviderCategoriesInput, UserUncheckedCreateWithoutProviderCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderCategoriesInput
    upsert?: UserUpsertWithoutProviderCategoriesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProviderCategoriesInput, UserUpdateWithoutProviderCategoriesInput>, UserUncheckedUpdateWithoutProviderCategoriesInput>
  }

  export type CategoryUpdateOneRequiredWithoutProviderCategoriesNestedInput = {
    create?: XOR<CategoryCreateWithoutProviderCategoriesInput, CategoryUncheckedCreateWithoutProviderCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProviderCategoriesInput
    upsert?: CategoryUpsertWithoutProviderCategoriesInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProviderCategoriesInput, CategoryUpdateWithoutProviderCategoriesInput>, CategoryUncheckedUpdateWithoutProviderCategoriesInput>
  }

  export type OrderCreateNestedManyWithoutCategoryInput = {
    create?: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput> | OrderCreateWithoutCategoryInput[] | OrderUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCategoryInput | OrderCreateOrConnectWithoutCategoryInput[]
    createMany?: OrderCreateManyCategoryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProviderCategoryCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput> | ProviderCategoryCreateWithoutCategoryInput[] | ProviderCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutCategoryInput | ProviderCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: ProviderCategoryCreateManyCategoryInputEnvelope
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
  }

  export type LlmClassificationCreateNestedManyWithoutCategoryInput = {
    create?: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput> | LlmClassificationCreateWithoutCategoryInput[] | LlmClassificationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutCategoryInput | LlmClassificationCreateOrConnectWithoutCategoryInput[]
    createMany?: LlmClassificationCreateManyCategoryInputEnvelope
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput> | OrderCreateWithoutCategoryInput[] | OrderUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCategoryInput | OrderCreateOrConnectWithoutCategoryInput[]
    createMany?: OrderCreateManyCategoryInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ProviderCategoryUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput> | ProviderCategoryCreateWithoutCategoryInput[] | ProviderCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutCategoryInput | ProviderCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: ProviderCategoryCreateManyCategoryInputEnvelope
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
  }

  export type LlmClassificationUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput> | LlmClassificationCreateWithoutCategoryInput[] | LlmClassificationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutCategoryInput | LlmClassificationCreateOrConnectWithoutCategoryInput[]
    createMany?: LlmClassificationCreateManyCategoryInputEnvelope
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
  }

  export type OrderUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput> | OrderCreateWithoutCategoryInput[] | OrderUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCategoryInput | OrderCreateOrConnectWithoutCategoryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCategoryInput | OrderUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: OrderCreateManyCategoryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCategoryInput | OrderUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCategoryInput | OrderUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProviderCategoryUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput> | ProviderCategoryCreateWithoutCategoryInput[] | ProviderCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutCategoryInput | ProviderCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: ProviderCategoryUpsertWithWhereUniqueWithoutCategoryInput | ProviderCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProviderCategoryCreateManyCategoryInputEnvelope
    set?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    disconnect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    delete?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    update?: ProviderCategoryUpdateWithWhereUniqueWithoutCategoryInput | ProviderCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProviderCategoryUpdateManyWithWhereWithoutCategoryInput | ProviderCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
  }

  export type LlmClassificationUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput> | LlmClassificationCreateWithoutCategoryInput[] | LlmClassificationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutCategoryInput | LlmClassificationCreateOrConnectWithoutCategoryInput[]
    upsert?: LlmClassificationUpsertWithWhereUniqueWithoutCategoryInput | LlmClassificationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: LlmClassificationCreateManyCategoryInputEnvelope
    set?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    disconnect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    delete?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    update?: LlmClassificationUpdateWithWhereUniqueWithoutCategoryInput | LlmClassificationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: LlmClassificationUpdateManyWithWhereWithoutCategoryInput | LlmClassificationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput> | OrderCreateWithoutCategoryInput[] | OrderUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCategoryInput | OrderCreateOrConnectWithoutCategoryInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCategoryInput | OrderUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: OrderCreateManyCategoryInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCategoryInput | OrderUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCategoryInput | OrderUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ProviderCategoryUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput> | ProviderCategoryCreateWithoutCategoryInput[] | ProviderCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProviderCategoryCreateOrConnectWithoutCategoryInput | ProviderCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: ProviderCategoryUpsertWithWhereUniqueWithoutCategoryInput | ProviderCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProviderCategoryCreateManyCategoryInputEnvelope
    set?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    disconnect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    delete?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    connect?: ProviderCategoryWhereUniqueInput | ProviderCategoryWhereUniqueInput[]
    update?: ProviderCategoryUpdateWithWhereUniqueWithoutCategoryInput | ProviderCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProviderCategoryUpdateManyWithWhereWithoutCategoryInput | ProviderCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
  }

  export type LlmClassificationUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput> | LlmClassificationCreateWithoutCategoryInput[] | LlmClassificationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutCategoryInput | LlmClassificationCreateOrConnectWithoutCategoryInput[]
    upsert?: LlmClassificationUpsertWithWhereUniqueWithoutCategoryInput | LlmClassificationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: LlmClassificationCreateManyCategoryInputEnvelope
    set?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    disconnect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    delete?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    update?: LlmClassificationUpdateWithWhereUniqueWithoutCategoryInput | LlmClassificationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: LlmClassificationUpdateManyWithWhereWithoutCategoryInput | LlmClassificationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutOrdersAsClientInput = {
    create?: XOR<UserCreateWithoutOrdersAsClientInput, UserUncheckedCreateWithoutOrdersAsClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsClientInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrdersAsProviderInput = {
    create?: XOR<UserCreateWithoutOrdersAsProviderInput, UserUncheckedCreateWithoutOrdersAsProviderInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsProviderInput
    connect?: UserWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutOrdersInput = {
    create?: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrdersInput
    connect?: AddressWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CategoryCreateWithoutOrdersInput, CategoryUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutOrdersInput
    connect?: CategoryWhereUniqueInput
  }

  export type OrderSlotCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput> | OrderSlotCreateWithoutOrderInput[] | OrderSlotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderSlotCreateOrConnectWithoutOrderInput | OrderSlotCreateOrConnectWithoutOrderInput[]
    createMany?: OrderSlotCreateManyOrderInputEnvelope
    connect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
  }

  export type OrderCategoryCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput> | OrderCategoryCreateWithoutOrderInput[] | OrderCategoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderCategoryCreateOrConnectWithoutOrderInput | OrderCategoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderCategoryCreateManyOrderInputEnvelope
    connect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
  }

  export type OrderInvitationCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput> | OrderInvitationCreateWithoutOrderInput[] | OrderInvitationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutOrderInput | OrderInvitationCreateOrConnectWithoutOrderInput[]
    createMany?: OrderInvitationCreateManyOrderInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderStatusHistoryCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type OrderReviewCreateNestedOneWithoutOrderInput = {
    create?: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
    connectOrCreate?: OrderReviewCreateOrConnectWithoutOrderInput
    connect?: OrderReviewWhereUniqueInput
  }

  export type PaymentCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput> | PaymentCreateWithoutOrderInput[] | PaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput | PaymentCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentCreateManyOrderInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentEventCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput> | PaymentEventCreateWithoutOrderInput[] | PaymentEventUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutOrderInput | PaymentEventCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentEventCreateManyOrderInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type CommissionCreateNestedOneWithoutOrderInput = {
    create?: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CommissionCreateOrConnectWithoutOrderInput
    connect?: CommissionWhereUniqueInput
  }

  export type ClientCreditCreateNestedManyWithoutOrderInput = {
    create?: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput> | ClientCreditCreateWithoutOrderInput[] | ClientCreditUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutOrderInput | ClientCreditCreateOrConnectWithoutOrderInput[]
    createMany?: ClientCreditCreateManyOrderInputEnvelope
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
  }

  export type ProviderPayoutCreateNestedOneWithoutOrderInput = {
    create?: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutOrderInput
    connect?: ProviderPayoutWhereUniqueInput
  }

  export type MatchScoreCreateNestedManyWithoutOrderInput = {
    create?: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput> | MatchScoreCreateWithoutOrderInput[] | MatchScoreUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutOrderInput | MatchScoreCreateOrConnectWithoutOrderInput[]
    createMany?: MatchScoreCreateManyOrderInputEnvelope
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
  }

  export type LlmClassificationCreateNestedManyWithoutOrderInput = {
    create?: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput> | LlmClassificationCreateWithoutOrderInput[] | LlmClassificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutOrderInput | LlmClassificationCreateOrConnectWithoutOrderInput[]
    createMany?: LlmClassificationCreateManyOrderInputEnvelope
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
  }

  export type OrderSlotUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput> | OrderSlotCreateWithoutOrderInput[] | OrderSlotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderSlotCreateOrConnectWithoutOrderInput | OrderSlotCreateOrConnectWithoutOrderInput[]
    createMany?: OrderSlotCreateManyOrderInputEnvelope
    connect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
  }

  export type OrderCategoryUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput> | OrderCategoryCreateWithoutOrderInput[] | OrderCategoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderCategoryCreateOrConnectWithoutOrderInput | OrderCategoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderCategoryCreateManyOrderInputEnvelope
    connect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
  }

  export type OrderInvitationUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput> | OrderInvitationCreateWithoutOrderInput[] | OrderInvitationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutOrderInput | OrderInvitationCreateOrConnectWithoutOrderInput[]
    createMany?: OrderInvitationCreateManyOrderInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type OrderReviewUncheckedCreateNestedOneWithoutOrderInput = {
    create?: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
    connectOrCreate?: OrderReviewCreateOrConnectWithoutOrderInput
    connect?: OrderReviewWhereUniqueInput
  }

  export type PaymentUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput> | PaymentCreateWithoutOrderInput[] | PaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput | PaymentCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentCreateManyOrderInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PaymentEventUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput> | PaymentEventCreateWithoutOrderInput[] | PaymentEventUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutOrderInput | PaymentEventCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentEventCreateManyOrderInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type CommissionUncheckedCreateNestedOneWithoutOrderInput = {
    create?: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CommissionCreateOrConnectWithoutOrderInput
    connect?: CommissionWhereUniqueInput
  }

  export type ClientCreditUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput> | ClientCreditCreateWithoutOrderInput[] | ClientCreditUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutOrderInput | ClientCreditCreateOrConnectWithoutOrderInput[]
    createMany?: ClientCreditCreateManyOrderInputEnvelope
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
  }

  export type ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput = {
    create?: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutOrderInput
    connect?: ProviderPayoutWhereUniqueInput
  }

  export type MatchScoreUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput> | MatchScoreCreateWithoutOrderInput[] | MatchScoreUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutOrderInput | MatchScoreCreateOrConnectWithoutOrderInput[]
    createMany?: MatchScoreCreateManyOrderInputEnvelope
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
  }

  export type LlmClassificationUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput> | LlmClassificationCreateWithoutOrderInput[] | LlmClassificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutOrderInput | LlmClassificationCreateOrConnectWithoutOrderInput[]
    createMany?: LlmClassificationCreateManyOrderInputEnvelope
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutOrdersAsClientNestedInput = {
    create?: XOR<UserCreateWithoutOrdersAsClientInput, UserUncheckedCreateWithoutOrdersAsClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsClientInput
    upsert?: UserUpsertWithoutOrdersAsClientInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersAsClientInput, UserUpdateWithoutOrdersAsClientInput>, UserUncheckedUpdateWithoutOrdersAsClientInput>
  }

  export type UserUpdateOneWithoutOrdersAsProviderNestedInput = {
    create?: XOR<UserCreateWithoutOrdersAsProviderInput, UserUncheckedCreateWithoutOrdersAsProviderInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersAsProviderInput
    upsert?: UserUpsertWithoutOrdersAsProviderInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersAsProviderInput, UserUpdateWithoutOrdersAsProviderInput>, UserUncheckedUpdateWithoutOrdersAsProviderInput>
  }

  export type AddressUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrdersInput
    upsert?: AddressUpsertWithoutOrdersInput
    disconnect?: AddressWhereInput | boolean
    delete?: AddressWhereInput | boolean
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutOrdersInput, AddressUpdateWithoutOrdersInput>, AddressUncheckedUpdateWithoutOrdersInput>
  }

  export type CategoryUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<CategoryCreateWithoutOrdersInput, CategoryUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutOrdersInput
    upsert?: CategoryUpsertWithoutOrdersInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutOrdersInput, CategoryUpdateWithoutOrdersInput>, CategoryUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderSlotUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput> | OrderSlotCreateWithoutOrderInput[] | OrderSlotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderSlotCreateOrConnectWithoutOrderInput | OrderSlotCreateOrConnectWithoutOrderInput[]
    upsert?: OrderSlotUpsertWithWhereUniqueWithoutOrderInput | OrderSlotUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderSlotCreateManyOrderInputEnvelope
    set?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    disconnect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    delete?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    connect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    update?: OrderSlotUpdateWithWhereUniqueWithoutOrderInput | OrderSlotUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderSlotUpdateManyWithWhereWithoutOrderInput | OrderSlotUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderSlotScalarWhereInput | OrderSlotScalarWhereInput[]
  }

  export type OrderCategoryUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput> | OrderCategoryCreateWithoutOrderInput[] | OrderCategoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderCategoryCreateOrConnectWithoutOrderInput | OrderCategoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderCategoryUpsertWithWhereUniqueWithoutOrderInput | OrderCategoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderCategoryCreateManyOrderInputEnvelope
    set?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    disconnect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    delete?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    connect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    update?: OrderCategoryUpdateWithWhereUniqueWithoutOrderInput | OrderCategoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderCategoryUpdateManyWithWhereWithoutOrderInput | OrderCategoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderCategoryScalarWhereInput | OrderCategoryScalarWhereInput[]
  }

  export type OrderInvitationUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput> | OrderInvitationCreateWithoutOrderInput[] | OrderInvitationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutOrderInput | OrderInvitationCreateOrConnectWithoutOrderInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutOrderInput | OrderInvitationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderInvitationCreateManyOrderInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutOrderInput | OrderInvitationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutOrderInput | OrderInvitationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderStatusHistoryUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput | OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type OrderReviewUpdateOneWithoutOrderNestedInput = {
    create?: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
    connectOrCreate?: OrderReviewCreateOrConnectWithoutOrderInput
    upsert?: OrderReviewUpsertWithoutOrderInput
    disconnect?: OrderReviewWhereInput | boolean
    delete?: OrderReviewWhereInput | boolean
    connect?: OrderReviewWhereUniqueInput
    update?: XOR<XOR<OrderReviewUpdateToOneWithWhereWithoutOrderInput, OrderReviewUpdateWithoutOrderInput>, OrderReviewUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput> | PaymentCreateWithoutOrderInput[] | PaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput | PaymentCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutOrderInput | PaymentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentCreateManyOrderInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutOrderInput | PaymentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutOrderInput | PaymentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentEventUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput> | PaymentEventCreateWithoutOrderInput[] | PaymentEventUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutOrderInput | PaymentEventCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutOrderInput | PaymentEventUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentEventCreateManyOrderInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutOrderInput | PaymentEventUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutOrderInput | PaymentEventUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type CommissionUpdateOneWithoutOrderNestedInput = {
    create?: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CommissionCreateOrConnectWithoutOrderInput
    upsert?: CommissionUpsertWithoutOrderInput
    disconnect?: CommissionWhereInput | boolean
    delete?: CommissionWhereInput | boolean
    connect?: CommissionWhereUniqueInput
    update?: XOR<XOR<CommissionUpdateToOneWithWhereWithoutOrderInput, CommissionUpdateWithoutOrderInput>, CommissionUncheckedUpdateWithoutOrderInput>
  }

  export type ClientCreditUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput> | ClientCreditCreateWithoutOrderInput[] | ClientCreditUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutOrderInput | ClientCreditCreateOrConnectWithoutOrderInput[]
    upsert?: ClientCreditUpsertWithWhereUniqueWithoutOrderInput | ClientCreditUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ClientCreditCreateManyOrderInputEnvelope
    set?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    disconnect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    delete?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    update?: ClientCreditUpdateWithWhereUniqueWithoutOrderInput | ClientCreditUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ClientCreditUpdateManyWithWhereWithoutOrderInput | ClientCreditUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
  }

  export type ProviderPayoutUpdateOneWithoutOrderNestedInput = {
    create?: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutOrderInput
    upsert?: ProviderPayoutUpsertWithoutOrderInput
    disconnect?: ProviderPayoutWhereInput | boolean
    delete?: ProviderPayoutWhereInput | boolean
    connect?: ProviderPayoutWhereUniqueInput
    update?: XOR<XOR<ProviderPayoutUpdateToOneWithWhereWithoutOrderInput, ProviderPayoutUpdateWithoutOrderInput>, ProviderPayoutUncheckedUpdateWithoutOrderInput>
  }

  export type MatchScoreUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput> | MatchScoreCreateWithoutOrderInput[] | MatchScoreUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutOrderInput | MatchScoreCreateOrConnectWithoutOrderInput[]
    upsert?: MatchScoreUpsertWithWhereUniqueWithoutOrderInput | MatchScoreUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MatchScoreCreateManyOrderInputEnvelope
    set?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    disconnect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    delete?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    update?: MatchScoreUpdateWithWhereUniqueWithoutOrderInput | MatchScoreUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MatchScoreUpdateManyWithWhereWithoutOrderInput | MatchScoreUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
  }

  export type LlmClassificationUpdateManyWithoutOrderNestedInput = {
    create?: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput> | LlmClassificationCreateWithoutOrderInput[] | LlmClassificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutOrderInput | LlmClassificationCreateOrConnectWithoutOrderInput[]
    upsert?: LlmClassificationUpsertWithWhereUniqueWithoutOrderInput | LlmClassificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: LlmClassificationCreateManyOrderInputEnvelope
    set?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    disconnect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    delete?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    update?: LlmClassificationUpdateWithWhereUniqueWithoutOrderInput | LlmClassificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: LlmClassificationUpdateManyWithWhereWithoutOrderInput | LlmClassificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
  }

  export type OrderSlotUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput> | OrderSlotCreateWithoutOrderInput[] | OrderSlotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderSlotCreateOrConnectWithoutOrderInput | OrderSlotCreateOrConnectWithoutOrderInput[]
    upsert?: OrderSlotUpsertWithWhereUniqueWithoutOrderInput | OrderSlotUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderSlotCreateManyOrderInputEnvelope
    set?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    disconnect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    delete?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    connect?: OrderSlotWhereUniqueInput | OrderSlotWhereUniqueInput[]
    update?: OrderSlotUpdateWithWhereUniqueWithoutOrderInput | OrderSlotUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderSlotUpdateManyWithWhereWithoutOrderInput | OrderSlotUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderSlotScalarWhereInput | OrderSlotScalarWhereInput[]
  }

  export type OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput> | OrderCategoryCreateWithoutOrderInput[] | OrderCategoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderCategoryCreateOrConnectWithoutOrderInput | OrderCategoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderCategoryUpsertWithWhereUniqueWithoutOrderInput | OrderCategoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderCategoryCreateManyOrderInputEnvelope
    set?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    disconnect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    delete?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    connect?: OrderCategoryWhereUniqueInput | OrderCategoryWhereUniqueInput[]
    update?: OrderCategoryUpdateWithWhereUniqueWithoutOrderInput | OrderCategoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderCategoryUpdateManyWithWhereWithoutOrderInput | OrderCategoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderCategoryScalarWhereInput | OrderCategoryScalarWhereInput[]
  }

  export type OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput> | OrderInvitationCreateWithoutOrderInput[] | OrderInvitationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutOrderInput | OrderInvitationCreateOrConnectWithoutOrderInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutOrderInput | OrderInvitationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderInvitationCreateManyOrderInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutOrderInput | OrderInvitationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutOrderInput | OrderInvitationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput | OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type OrderReviewUncheckedUpdateOneWithoutOrderNestedInput = {
    create?: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
    connectOrCreate?: OrderReviewCreateOrConnectWithoutOrderInput
    upsert?: OrderReviewUpsertWithoutOrderInput
    disconnect?: OrderReviewWhereInput | boolean
    delete?: OrderReviewWhereInput | boolean
    connect?: OrderReviewWhereUniqueInput
    update?: XOR<XOR<OrderReviewUpdateToOneWithWhereWithoutOrderInput, OrderReviewUpdateWithoutOrderInput>, OrderReviewUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput> | PaymentCreateWithoutOrderInput[] | PaymentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput | PaymentCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutOrderInput | PaymentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentCreateManyOrderInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutOrderInput | PaymentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutOrderInput | PaymentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PaymentEventUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput> | PaymentEventCreateWithoutOrderInput[] | PaymentEventUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutOrderInput | PaymentEventCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutOrderInput | PaymentEventUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentEventCreateManyOrderInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutOrderInput | PaymentEventUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutOrderInput | PaymentEventUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type CommissionUncheckedUpdateOneWithoutOrderNestedInput = {
    create?: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CommissionCreateOrConnectWithoutOrderInput
    upsert?: CommissionUpsertWithoutOrderInput
    disconnect?: CommissionWhereInput | boolean
    delete?: CommissionWhereInput | boolean
    connect?: CommissionWhereUniqueInput
    update?: XOR<XOR<CommissionUpdateToOneWithWhereWithoutOrderInput, CommissionUpdateWithoutOrderInput>, CommissionUncheckedUpdateWithoutOrderInput>
  }

  export type ClientCreditUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput> | ClientCreditCreateWithoutOrderInput[] | ClientCreditUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ClientCreditCreateOrConnectWithoutOrderInput | ClientCreditCreateOrConnectWithoutOrderInput[]
    upsert?: ClientCreditUpsertWithWhereUniqueWithoutOrderInput | ClientCreditUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ClientCreditCreateManyOrderInputEnvelope
    set?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    disconnect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    delete?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    connect?: ClientCreditWhereUniqueInput | ClientCreditWhereUniqueInput[]
    update?: ClientCreditUpdateWithWhereUniqueWithoutOrderInput | ClientCreditUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ClientCreditUpdateManyWithWhereWithoutOrderInput | ClientCreditUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
  }

  export type ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput = {
    create?: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
    connectOrCreate?: ProviderPayoutCreateOrConnectWithoutOrderInput
    upsert?: ProviderPayoutUpsertWithoutOrderInput
    disconnect?: ProviderPayoutWhereInput | boolean
    delete?: ProviderPayoutWhereInput | boolean
    connect?: ProviderPayoutWhereUniqueInput
    update?: XOR<XOR<ProviderPayoutUpdateToOneWithWhereWithoutOrderInput, ProviderPayoutUpdateWithoutOrderInput>, ProviderPayoutUncheckedUpdateWithoutOrderInput>
  }

  export type MatchScoreUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput> | MatchScoreCreateWithoutOrderInput[] | MatchScoreUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: MatchScoreCreateOrConnectWithoutOrderInput | MatchScoreCreateOrConnectWithoutOrderInput[]
    upsert?: MatchScoreUpsertWithWhereUniqueWithoutOrderInput | MatchScoreUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: MatchScoreCreateManyOrderInputEnvelope
    set?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    disconnect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    delete?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    connect?: MatchScoreWhereUniqueInput | MatchScoreWhereUniqueInput[]
    update?: MatchScoreUpdateWithWhereUniqueWithoutOrderInput | MatchScoreUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: MatchScoreUpdateManyWithWhereWithoutOrderInput | MatchScoreUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
  }

  export type LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput> | LlmClassificationCreateWithoutOrderInput[] | LlmClassificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: LlmClassificationCreateOrConnectWithoutOrderInput | LlmClassificationCreateOrConnectWithoutOrderInput[]
    upsert?: LlmClassificationUpsertWithWhereUniqueWithoutOrderInput | LlmClassificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: LlmClassificationCreateManyOrderInputEnvelope
    set?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    disconnect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    delete?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    connect?: LlmClassificationWhereUniqueInput | LlmClassificationWhereUniqueInput[]
    update?: LlmClassificationUpdateWithWhereUniqueWithoutOrderInput | LlmClassificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: LlmClassificationUpdateManyWithWhereWithoutOrderInput | LlmClassificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrderSlotsInput = {
    create?: XOR<OrderCreateWithoutOrderSlotsInput, OrderUncheckedCreateWithoutOrderSlotsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderSlotsInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderInvitationCreateNestedManyWithoutSlotInput = {
    create?: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput> | OrderInvitationCreateWithoutSlotInput[] | OrderInvitationUncheckedCreateWithoutSlotInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutSlotInput | OrderInvitationCreateOrConnectWithoutSlotInput[]
    createMany?: OrderInvitationCreateManySlotInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderInvitationUncheckedCreateNestedManyWithoutSlotInput = {
    create?: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput> | OrderInvitationCreateWithoutSlotInput[] | OrderInvitationUncheckedCreateWithoutSlotInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutSlotInput | OrderInvitationCreateOrConnectWithoutSlotInput[]
    createMany?: OrderInvitationCreateManySlotInputEnvelope
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
  }

  export type OrderUpdateOneRequiredWithoutOrderSlotsNestedInput = {
    create?: XOR<OrderCreateWithoutOrderSlotsInput, OrderUncheckedCreateWithoutOrderSlotsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderSlotsInput
    upsert?: OrderUpsertWithoutOrderSlotsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderSlotsInput, OrderUpdateWithoutOrderSlotsInput>, OrderUncheckedUpdateWithoutOrderSlotsInput>
  }

  export type OrderInvitationUpdateManyWithoutSlotNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput> | OrderInvitationCreateWithoutSlotInput[] | OrderInvitationUncheckedCreateWithoutSlotInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutSlotInput | OrderInvitationCreateOrConnectWithoutSlotInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutSlotInput | OrderInvitationUpsertWithWhereUniqueWithoutSlotInput[]
    createMany?: OrderInvitationCreateManySlotInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutSlotInput | OrderInvitationUpdateWithWhereUniqueWithoutSlotInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutSlotInput | OrderInvitationUpdateManyWithWhereWithoutSlotInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderInvitationUncheckedUpdateManyWithoutSlotNestedInput = {
    create?: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput> | OrderInvitationCreateWithoutSlotInput[] | OrderInvitationUncheckedCreateWithoutSlotInput[]
    connectOrCreate?: OrderInvitationCreateOrConnectWithoutSlotInput | OrderInvitationCreateOrConnectWithoutSlotInput[]
    upsert?: OrderInvitationUpsertWithWhereUniqueWithoutSlotInput | OrderInvitationUpsertWithWhereUniqueWithoutSlotInput[]
    createMany?: OrderInvitationCreateManySlotInputEnvelope
    set?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    disconnect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    delete?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    connect?: OrderInvitationWhereUniqueInput | OrderInvitationWhereUniqueInput[]
    update?: OrderInvitationUpdateWithWhereUniqueWithoutSlotInput | OrderInvitationUpdateWithWhereUniqueWithoutSlotInput[]
    updateMany?: OrderInvitationUpdateManyWithWhereWithoutSlotInput | OrderInvitationUpdateManyWithWhereWithoutSlotInput[]
    deleteMany?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrderCategoriesInput = {
    create?: XOR<OrderCreateWithoutOrderCategoriesInput, OrderUncheckedCreateWithoutOrderCategoriesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderCategoriesInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderCategoriesNestedInput = {
    create?: XOR<OrderCreateWithoutOrderCategoriesInput, OrderUncheckedCreateWithoutOrderCategoriesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderCategoriesInput
    upsert?: OrderUpsertWithoutOrderCategoriesInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderCategoriesInput, OrderUpdateWithoutOrderCategoriesInput>, OrderUncheckedUpdateWithoutOrderCategoriesInput>
  }

  export type OrderCreateNestedOneWithoutOrderInvitationsInput = {
    create?: XOR<OrderCreateWithoutOrderInvitationsInput, OrderUncheckedCreateWithoutOrderInvitationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderInvitationsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderInvitationsInput = {
    create?: XOR<UserCreateWithoutOrderInvitationsInput, UserUncheckedCreateWithoutOrderInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderInvitationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderSlotCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<OrderSlotCreateWithoutInvitationsInput, OrderSlotUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrderSlotCreateOrConnectWithoutInvitationsInput
    connect?: OrderSlotWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderInvitationsNestedInput = {
    create?: XOR<OrderCreateWithoutOrderInvitationsInput, OrderUncheckedCreateWithoutOrderInvitationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderInvitationsInput
    upsert?: OrderUpsertWithoutOrderInvitationsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderInvitationsInput, OrderUpdateWithoutOrderInvitationsInput>, OrderUncheckedUpdateWithoutOrderInvitationsInput>
  }

  export type UserUpdateOneRequiredWithoutOrderInvitationsNestedInput = {
    create?: XOR<UserCreateWithoutOrderInvitationsInput, UserUncheckedCreateWithoutOrderInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderInvitationsInput
    upsert?: UserUpsertWithoutOrderInvitationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderInvitationsInput, UserUpdateWithoutOrderInvitationsInput>, UserUncheckedUpdateWithoutOrderInvitationsInput>
  }

  export type OrderSlotUpdateOneWithoutInvitationsNestedInput = {
    create?: XOR<OrderSlotCreateWithoutInvitationsInput, OrderSlotUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrderSlotCreateOrConnectWithoutInvitationsInput
    upsert?: OrderSlotUpsertWithoutInvitationsInput
    disconnect?: OrderSlotWhereInput | boolean
    delete?: OrderSlotWhereInput | boolean
    connect?: OrderSlotWhereUniqueInput
    update?: XOR<XOR<OrderSlotUpdateToOneWithWhereWithoutInvitationsInput, OrderSlotUpdateWithoutInvitationsInput>, OrderSlotUncheckedUpdateWithoutInvitationsInput>
  }

  export type OrderCreateNestedOneWithoutOrderStatusHistoryInput = {
    create?: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderStatusHistoryInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderStatusHistoryInput = {
    create?: XOR<UserCreateWithoutOrderStatusHistoryInput, UserUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderStatusHistoryInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderStatusHistoryNestedInput = {
    create?: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderStatusHistoryInput
    upsert?: OrderUpsertWithoutOrderStatusHistoryInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderStatusHistoryInput, OrderUpdateWithoutOrderStatusHistoryInput>, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type UserUpdateOneWithoutOrderStatusHistoryNestedInput = {
    create?: XOR<UserCreateWithoutOrderStatusHistoryInput, UserUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderStatusHistoryInput
    upsert?: UserUpsertWithoutOrderStatusHistoryInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderStatusHistoryInput, UserUpdateWithoutOrderStatusHistoryInput>, UserUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type OrderCreateNestedOneWithoutOrderReviewInput = {
    create?: XOR<OrderCreateWithoutOrderReviewInput, OrderUncheckedCreateWithoutOrderReviewInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderReviewInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderReviewsAsClientInput = {
    create?: XOR<UserCreateWithoutOrderReviewsAsClientInput, UserUncheckedCreateWithoutOrderReviewsAsClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderReviewsAsClientInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrderReviewsAsProviderInput = {
    create?: XOR<UserCreateWithoutOrderReviewsAsProviderInput, UserUncheckedCreateWithoutOrderReviewsAsProviderInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderReviewsAsProviderInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderReviewNestedInput = {
    create?: XOR<OrderCreateWithoutOrderReviewInput, OrderUncheckedCreateWithoutOrderReviewInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderReviewInput
    upsert?: OrderUpsertWithoutOrderReviewInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderReviewInput, OrderUpdateWithoutOrderReviewInput>, OrderUncheckedUpdateWithoutOrderReviewInput>
  }

  export type UserUpdateOneRequiredWithoutOrderReviewsAsClientNestedInput = {
    create?: XOR<UserCreateWithoutOrderReviewsAsClientInput, UserUncheckedCreateWithoutOrderReviewsAsClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderReviewsAsClientInput
    upsert?: UserUpsertWithoutOrderReviewsAsClientInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderReviewsAsClientInput, UserUpdateWithoutOrderReviewsAsClientInput>, UserUncheckedUpdateWithoutOrderReviewsAsClientInput>
  }

  export type UserUpdateOneRequiredWithoutOrderReviewsAsProviderNestedInput = {
    create?: XOR<UserCreateWithoutOrderReviewsAsProviderInput, UserUncheckedCreateWithoutOrderReviewsAsProviderInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrderReviewsAsProviderInput
    upsert?: UserUpsertWithoutOrderReviewsAsProviderInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrderReviewsAsProviderInput, UserUpdateWithoutOrderReviewsAsProviderInput>, UserUncheckedUpdateWithoutOrderReviewsAsProviderInput>
  }

  export type OrderCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<OrderCreateWithoutPaymentsInput, OrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentsInput
    connect?: OrderWhereUniqueInput
  }

  export type PaymentEventCreateNestedManyWithoutPaymentInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput> | PaymentEventCreateWithoutPaymentInput[] | PaymentEventUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentInput | PaymentEventCreateOrConnectWithoutPaymentInput[]
    createMany?: PaymentEventCreateManyPaymentInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type PaymentEventUncheckedCreateNestedManyWithoutPaymentInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput> | PaymentEventCreateWithoutPaymentInput[] | PaymentEventUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentInput | PaymentEventCreateOrConnectWithoutPaymentInput[]
    createMany?: PaymentEventCreateManyPaymentInputEnvelope
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
  }

  export type OrderUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentsInput, OrderUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentsInput
    upsert?: OrderUpsertWithoutPaymentsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentsInput, OrderUpdateWithoutPaymentsInput>, OrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type PaymentEventUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput> | PaymentEventCreateWithoutPaymentInput[] | PaymentEventUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentInput | PaymentEventCreateOrConnectWithoutPaymentInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutPaymentInput | PaymentEventUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: PaymentEventCreateManyPaymentInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutPaymentInput | PaymentEventUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutPaymentInput | PaymentEventUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type PaymentEventUncheckedUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput> | PaymentEventCreateWithoutPaymentInput[] | PaymentEventUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentEventCreateOrConnectWithoutPaymentInput | PaymentEventCreateOrConnectWithoutPaymentInput[]
    upsert?: PaymentEventUpsertWithWhereUniqueWithoutPaymentInput | PaymentEventUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: PaymentEventCreateManyPaymentInputEnvelope
    set?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    disconnect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    delete?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    connect?: PaymentEventWhereUniqueInput | PaymentEventWhereUniqueInput[]
    update?: PaymentEventUpdateWithWhereUniqueWithoutPaymentInput | PaymentEventUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: PaymentEventUpdateManyWithWhereWithoutPaymentInput | PaymentEventUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
  }

  export type PaymentCreateNestedOneWithoutPaymentEventsInput = {
    create?: XOR<PaymentCreateWithoutPaymentEventsInput, PaymentUncheckedCreateWithoutPaymentEventsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentEventsInput
    connect?: PaymentWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutPaymentEventsInput = {
    create?: XOR<OrderCreateWithoutPaymentEventsInput, OrderUncheckedCreateWithoutPaymentEventsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentEventsInput
    connect?: OrderWhereUniqueInput
  }

  export type PaymentUpdateOneWithoutPaymentEventsNestedInput = {
    create?: XOR<PaymentCreateWithoutPaymentEventsInput, PaymentUncheckedCreateWithoutPaymentEventsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutPaymentEventsInput
    upsert?: PaymentUpsertWithoutPaymentEventsInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutPaymentEventsInput, PaymentUpdateWithoutPaymentEventsInput>, PaymentUncheckedUpdateWithoutPaymentEventsInput>
  }

  export type OrderUpdateOneRequiredWithoutPaymentEventsNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentEventsInput, OrderUncheckedCreateWithoutPaymentEventsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentEventsInput
    upsert?: OrderUpsertWithoutPaymentEventsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentEventsInput, OrderUpdateWithoutPaymentEventsInput>, OrderUncheckedUpdateWithoutPaymentEventsInput>
  }

  export type OrderCreateNestedOneWithoutCommissionInput = {
    create?: XOR<OrderCreateWithoutCommissionInput, OrderUncheckedCreateWithoutCommissionInput>
    connectOrCreate?: OrderCreateOrConnectWithoutCommissionInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutCommissionNestedInput = {
    create?: XOR<OrderCreateWithoutCommissionInput, OrderUncheckedCreateWithoutCommissionInput>
    connectOrCreate?: OrderCreateOrConnectWithoutCommissionInput
    upsert?: OrderUpsertWithoutCommissionInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutCommissionInput, OrderUpdateWithoutCommissionInput>, OrderUncheckedUpdateWithoutCommissionInput>
  }

  export type UserCreateNestedOneWithoutClientCreditsInput = {
    create?: XOR<UserCreateWithoutClientCreditsInput, UserUncheckedCreateWithoutClientCreditsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientCreditsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutClientCreditsInput = {
    create?: XOR<OrderCreateWithoutClientCreditsInput, OrderUncheckedCreateWithoutClientCreditsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutClientCreditsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutClientCreditsNestedInput = {
    create?: XOR<UserCreateWithoutClientCreditsInput, UserUncheckedCreateWithoutClientCreditsInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientCreditsInput
    upsert?: UserUpsertWithoutClientCreditsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientCreditsInput, UserUpdateWithoutClientCreditsInput>, UserUncheckedUpdateWithoutClientCreditsInput>
  }

  export type OrderUpdateOneRequiredWithoutClientCreditsNestedInput = {
    create?: XOR<OrderCreateWithoutClientCreditsInput, OrderUncheckedCreateWithoutClientCreditsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutClientCreditsInput
    upsert?: OrderUpsertWithoutClientCreditsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutClientCreditsInput, OrderUpdateWithoutClientCreditsInput>, OrderUncheckedUpdateWithoutClientCreditsInput>
  }

  export type OrderCreateNestedOneWithoutProviderPayoutInput = {
    create?: XOR<OrderCreateWithoutProviderPayoutInput, OrderUncheckedCreateWithoutProviderPayoutInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProviderPayoutInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProviderPayoutsInput = {
    create?: XOR<UserCreateWithoutProviderPayoutsInput, UserUncheckedCreateWithoutProviderPayoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderPayoutsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneWithoutProviderPayoutNestedInput = {
    create?: XOR<OrderCreateWithoutProviderPayoutInput, OrderUncheckedCreateWithoutProviderPayoutInput>
    connectOrCreate?: OrderCreateOrConnectWithoutProviderPayoutInput
    upsert?: OrderUpsertWithoutProviderPayoutInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutProviderPayoutInput, OrderUpdateWithoutProviderPayoutInput>, OrderUncheckedUpdateWithoutProviderPayoutInput>
  }

  export type UserUpdateOneRequiredWithoutProviderPayoutsNestedInput = {
    create?: XOR<UserCreateWithoutProviderPayoutsInput, UserUncheckedCreateWithoutProviderPayoutsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProviderPayoutsInput
    upsert?: UserUpsertWithoutProviderPayoutsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProviderPayoutsInput, UserUpdateWithoutProviderPayoutsInput>, UserUncheckedUpdateWithoutProviderPayoutsInput>
  }

  export type OrderCreateNestedOneWithoutMatchScoresInput = {
    create?: XOR<OrderCreateWithoutMatchScoresInput, OrderUncheckedCreateWithoutMatchScoresInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMatchScoresInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMatchScoresInput = {
    create?: XOR<UserCreateWithoutMatchScoresInput, UserUncheckedCreateWithoutMatchScoresInput>
    connectOrCreate?: UserCreateOrConnectWithoutMatchScoresInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutMatchScoresNestedInput = {
    create?: XOR<OrderCreateWithoutMatchScoresInput, OrderUncheckedCreateWithoutMatchScoresInput>
    connectOrCreate?: OrderCreateOrConnectWithoutMatchScoresInput
    upsert?: OrderUpsertWithoutMatchScoresInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutMatchScoresInput, OrderUpdateWithoutMatchScoresInput>, OrderUncheckedUpdateWithoutMatchScoresInput>
  }

  export type UserUpdateOneRequiredWithoutMatchScoresNestedInput = {
    create?: XOR<UserCreateWithoutMatchScoresInput, UserUncheckedCreateWithoutMatchScoresInput>
    connectOrCreate?: UserCreateOrConnectWithoutMatchScoresInput
    upsert?: UserUpsertWithoutMatchScoresInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMatchScoresInput, UserUpdateWithoutMatchScoresInput>, UserUncheckedUpdateWithoutMatchScoresInput>
  }

  export type OrderCreateNestedOneWithoutLlmClassificationsInput = {
    create?: XOR<OrderCreateWithoutLlmClassificationsInput, OrderUncheckedCreateWithoutLlmClassificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutLlmClassificationsInput
    connect?: OrderWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutLlmClassificationsInput = {
    create?: XOR<CategoryCreateWithoutLlmClassificationsInput, CategoryUncheckedCreateWithoutLlmClassificationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutLlmClassificationsInput
    connect?: CategoryWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutLlmClassificationsNestedInput = {
    create?: XOR<OrderCreateWithoutLlmClassificationsInput, OrderUncheckedCreateWithoutLlmClassificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutLlmClassificationsInput
    upsert?: OrderUpsertWithoutLlmClassificationsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutLlmClassificationsInput, OrderUpdateWithoutLlmClassificationsInput>, OrderUncheckedUpdateWithoutLlmClassificationsInput>
  }

  export type CategoryUpdateOneWithoutLlmClassificationsNestedInput = {
    create?: XOR<CategoryCreateWithoutLlmClassificationsInput, CategoryUncheckedCreateWithoutLlmClassificationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutLlmClassificationsInput
    upsert?: CategoryUpsertWithoutLlmClassificationsInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutLlmClassificationsInput, CategoryUpdateWithoutLlmClassificationsInput>, CategoryUncheckedUpdateWithoutLlmClassificationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumProviderRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderRequestStatus | EnumProviderRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderRequestStatusFilter<$PrismaModel> | $Enums.ProviderRequestStatus
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumProviderRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProviderRequestStatus | EnumProviderRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProviderRequestStatus[] | ListEnumProviderRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProviderRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProviderRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProviderRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumProviderRequestStatusFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AccountCreateWithoutUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserRoleAssignmentCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleAssignmentUncheckedCreateWithoutUserInput = {
    id?: string
    roleId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRoleAssignmentCreateOrConnectWithoutUserInput = {
    where: UserRoleAssignmentWhereUniqueInput
    create: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput>
  }

  export type UserRoleAssignmentCreateManyUserInputEnvelope = {
    data: UserRoleAssignmentCreateManyUserInput | UserRoleAssignmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AddressCreateWithoutUserInput = {
    id?: string
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
    orders?: OrderCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutUserInput = {
    id?: string
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
    orders?: OrderUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutUserInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput>
  }

  export type AddressCreateManyUserInputEnvelope = {
    data: AddressCreateManyUserInput | AddressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProviderRequestCreateWithoutUserInput = {
    id?: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewedByUser?: UserCreateNestedOneWithoutReviewedRequestsInput
  }

  export type ProviderRequestUncheckedCreateWithoutUserInput = {
    id?: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRequestCreateOrConnectWithoutUserInput = {
    where: ProviderRequestWhereUniqueInput
    create: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput>
  }

  export type ProviderRequestCreateManyUserInputEnvelope = {
    data: ProviderRequestCreateManyUserInput | ProviderRequestCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProviderRequestCreateWithoutReviewedByUserInput = {
    id?: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProviderRequestsInput
  }

  export type ProviderRequestUncheckedCreateWithoutReviewedByUserInput = {
    id?: string
    userId: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRequestCreateOrConnectWithoutReviewedByUserInput = {
    where: ProviderRequestWhereUniqueInput
    create: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput>
  }

  export type ProviderRequestCreateManyReviewedByUserInputEnvelope = {
    data: ProviderRequestCreateManyReviewedByUserInput | ProviderRequestCreateManyReviewedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ProviderProfileCreateWithoutUserInput = {
    bio?: string | null
    radiusKm?: Decimal | DecimalJsLike | number | string
    avgRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    acceptRate30d?: Decimal | DecimalJsLike | number | string
    responseP50S?: number
    noShow30d?: number
  }

  export type ProviderProfileUncheckedCreateWithoutUserInput = {
    bio?: string | null
    radiusKm?: Decimal | DecimalJsLike | number | string
    avgRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    acceptRate30d?: Decimal | DecimalJsLike | number | string
    responseP50S?: number
    noShow30d?: number
  }

  export type ProviderProfileCreateOrConnectWithoutUserInput = {
    where: ProviderProfileWhereUniqueInput
    create: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
  }

  export type ProviderAvailabilityCreateWithoutProviderInput = {
    id?: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderAvailabilityUncheckedCreateWithoutProviderInput = {
    id?: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderAvailabilityCreateOrConnectWithoutProviderInput = {
    where: ProviderAvailabilityWhereUniqueInput
    create: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput>
  }

  export type ProviderAvailabilityCreateManyProviderInputEnvelope = {
    data: ProviderAvailabilityCreateManyProviderInput | ProviderAvailabilityCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderCategoryCreateWithoutProviderInput = {
    id?: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
    category: CategoryCreateNestedOneWithoutProviderCategoriesInput
  }

  export type ProviderCategoryUncheckedCreateWithoutProviderInput = {
    id?: string
    categoryId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type ProviderCategoryCreateOrConnectWithoutProviderInput = {
    where: ProviderCategoryWhereUniqueInput
    create: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput>
  }

  export type ProviderCategoryCreateManyProviderInputEnvelope = {
    data: ProviderCategoryCreateManyProviderInput | ProviderCategoryCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderPayoutCreateWithoutProviderInput = {
    id?: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
    order?: OrderCreateNestedOneWithoutProviderPayoutInput
  }

  export type ProviderPayoutUncheckedCreateWithoutProviderInput = {
    id?: string
    orderId?: string | null
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
  }

  export type ProviderPayoutCreateOrConnectWithoutProviderInput = {
    where: ProviderPayoutWhereUniqueInput
    create: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput>
  }

  export type ProviderPayoutCreateManyProviderInputEnvelope = {
    data: ProviderPayoutCreateManyProviderInput | ProviderPayoutCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type ClientCreditCreateWithoutUserInput = {
    id?: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutClientCreditsInput
  }

  export type ClientCreditUncheckedCreateWithoutUserInput = {
    id?: string
    orderId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type ClientCreditCreateOrConnectWithoutUserInput = {
    where: ClientCreditWhereUniqueInput
    create: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput>
  }

  export type ClientCreditCreateManyUserInputEnvelope = {
    data: ClientCreditCreateManyUserInput | ClientCreditCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutClientInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutClientInput = {
    id?: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutClientInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput>
  }

  export type OrderCreateManyClientInputEnvelope = {
    data: OrderCreateManyClientInput | OrderCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutProviderInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutProviderInput = {
    id?: string
    clientId: string
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutProviderInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput>
  }

  export type OrderCreateManyProviderInputEnvelope = {
    data: OrderCreateManyProviderInput | OrderCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type OrderInvitationCreateWithoutProviderInput = {
    id?: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutOrderInvitationsInput
    slot?: OrderSlotCreateNestedOneWithoutInvitationsInput
  }

  export type OrderInvitationUncheckedCreateWithoutProviderInput = {
    id?: string
    orderId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationCreateOrConnectWithoutProviderInput = {
    where: OrderInvitationWhereUniqueInput
    create: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput>
  }

  export type OrderInvitationCreateManyProviderInputEnvelope = {
    data: OrderInvitationCreateManyProviderInput | OrderInvitationCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type OrderReviewCreateWithoutClientInput = {
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    order: OrderCreateNestedOneWithoutOrderReviewInput
    provider: UserCreateNestedOneWithoutOrderReviewsAsProviderInput
  }

  export type OrderReviewUncheckedCreateWithoutClientInput = {
    orderId: string
    providerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewCreateOrConnectWithoutClientInput = {
    where: OrderReviewWhereUniqueInput
    create: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput>
  }

  export type OrderReviewCreateManyClientInputEnvelope = {
    data: OrderReviewCreateManyClientInput | OrderReviewCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type OrderReviewCreateWithoutProviderInput = {
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    order: OrderCreateNestedOneWithoutOrderReviewInput
    client: UserCreateNestedOneWithoutOrderReviewsAsClientInput
  }

  export type OrderReviewUncheckedCreateWithoutProviderInput = {
    orderId: string
    clientId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewCreateOrConnectWithoutProviderInput = {
    where: OrderReviewWhereUniqueInput
    create: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput>
  }

  export type OrderReviewCreateManyProviderInputEnvelope = {
    data: OrderReviewCreateManyProviderInput | OrderReviewCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type OrderStatusHistoryCreateWithoutByUserInput = {
    id?: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    order: OrderCreateNestedOneWithoutOrderStatusHistoryInput
  }

  export type OrderStatusHistoryUncheckedCreateWithoutByUserInput = {
    id?: string
    orderId: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
  }

  export type OrderStatusHistoryCreateOrConnectWithoutByUserInput = {
    where: OrderStatusHistoryWhereUniqueInput
    create: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput>
  }

  export type OrderStatusHistoryCreateManyByUserInputEnvelope = {
    data: OrderStatusHistoryCreateManyByUserInput | OrderStatusHistoryCreateManyByUserInput[]
    skipDuplicates?: boolean
  }

  export type MatchScoreCreateWithoutProviderInput = {
    id?: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutMatchScoresInput
  }

  export type MatchScoreUncheckedCreateWithoutProviderInput = {
    id?: string
    orderId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type MatchScoreCreateOrConnectWithoutProviderInput = {
    where: MatchScoreWhereUniqueInput
    create: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput>
  }

  export type MatchScoreCreateManyProviderInputEnvelope = {
    data: MatchScoreCreateManyProviderInput | MatchScoreCreateManyProviderInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    token?: StringFilter<"Session"> | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
  }

  export type UserRoleAssignmentUpsertWithWhereUniqueWithoutUserInput = {
    where: UserRoleAssignmentWhereUniqueInput
    update: XOR<UserRoleAssignmentUpdateWithoutUserInput, UserRoleAssignmentUncheckedUpdateWithoutUserInput>
    create: XOR<UserRoleAssignmentCreateWithoutUserInput, UserRoleAssignmentUncheckedCreateWithoutUserInput>
  }

  export type UserRoleAssignmentUpdateWithWhereUniqueWithoutUserInput = {
    where: UserRoleAssignmentWhereUniqueInput
    data: XOR<UserRoleAssignmentUpdateWithoutUserInput, UserRoleAssignmentUncheckedUpdateWithoutUserInput>
  }

  export type UserRoleAssignmentUpdateManyWithWhereWithoutUserInput = {
    where: UserRoleAssignmentScalarWhereInput
    data: XOR<UserRoleAssignmentUpdateManyMutationInput, UserRoleAssignmentUncheckedUpdateManyWithoutUserInput>
  }

  export type UserRoleAssignmentScalarWhereInput = {
    AND?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
    OR?: UserRoleAssignmentScalarWhereInput[]
    NOT?: UserRoleAssignmentScalarWhereInput | UserRoleAssignmentScalarWhereInput[]
    id?: StringFilter<"UserRoleAssignment"> | string
    userId?: StringFilter<"UserRoleAssignment"> | string
    roleId?: StringFilter<"UserRoleAssignment"> | string
    createdAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"UserRoleAssignment"> | Date | string
  }

  export type AddressUpsertWithWhereUniqueWithoutUserInput = {
    where: AddressWhereUniqueInput
    update: XOR<AddressUpdateWithoutUserInput, AddressUncheckedUpdateWithoutUserInput>
    create: XOR<AddressCreateWithoutUserInput, AddressUncheckedCreateWithoutUserInput>
  }

  export type AddressUpdateWithWhereUniqueWithoutUserInput = {
    where: AddressWhereUniqueInput
    data: XOR<AddressUpdateWithoutUserInput, AddressUncheckedUpdateWithoutUserInput>
  }

  export type AddressUpdateManyWithWhereWithoutUserInput = {
    where: AddressScalarWhereInput
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyWithoutUserInput>
  }

  export type AddressScalarWhereInput = {
    AND?: AddressScalarWhereInput | AddressScalarWhereInput[]
    OR?: AddressScalarWhereInput[]
    NOT?: AddressScalarWhereInput | AddressScalarWhereInput[]
    id?: StringFilter<"Address"> | string
    userId?: StringNullableFilter<"Address"> | string | null
    label?: StringNullableFilter<"Address"> | string | null
    cep?: StringNullableFilter<"Address"> | string | null
    street?: StringNullableFilter<"Address"> | string | null
    number?: StringNullableFilter<"Address"> | string | null
    complement?: StringNullableFilter<"Address"> | string | null
    neighborhood?: StringNullableFilter<"Address"> | string | null
    city?: StringNullableFilter<"Address"> | string | null
    state?: StringNullableFilter<"Address"> | string | null
    lat?: FloatNullableFilter<"Address"> | number | null
    lon?: FloatNullableFilter<"Address"> | number | null
    createdAt?: DateTimeFilter<"Address"> | Date | string
  }

  export type ProviderRequestUpsertWithWhereUniqueWithoutUserInput = {
    where: ProviderRequestWhereUniqueInput
    update: XOR<ProviderRequestUpdateWithoutUserInput, ProviderRequestUncheckedUpdateWithoutUserInput>
    create: XOR<ProviderRequestCreateWithoutUserInput, ProviderRequestUncheckedCreateWithoutUserInput>
  }

  export type ProviderRequestUpdateWithWhereUniqueWithoutUserInput = {
    where: ProviderRequestWhereUniqueInput
    data: XOR<ProviderRequestUpdateWithoutUserInput, ProviderRequestUncheckedUpdateWithoutUserInput>
  }

  export type ProviderRequestUpdateManyWithWhereWithoutUserInput = {
    where: ProviderRequestScalarWhereInput
    data: XOR<ProviderRequestUpdateManyMutationInput, ProviderRequestUncheckedUpdateManyWithoutUserInput>
  }

  export type ProviderRequestScalarWhereInput = {
    AND?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
    OR?: ProviderRequestScalarWhereInput[]
    NOT?: ProviderRequestScalarWhereInput | ProviderRequestScalarWhereInput[]
    id?: StringFilter<"ProviderRequest"> | string
    userId?: StringFilter<"ProviderRequest"> | string
    services?: JsonNullableFilter<"ProviderRequest">
    description?: StringFilter<"ProviderRequest"> | string
    experience?: StringFilter<"ProviderRequest"> | string
    phone?: StringFilter<"ProviderRequest"> | string
    cep?: StringNullableFilter<"ProviderRequest"> | string | null
    address?: StringFilter<"ProviderRequest"> | string
    documentNumber?: StringFilter<"ProviderRequest"> | string
    portfolioLinks?: StringNullableFilter<"ProviderRequest"> | string | null
    portfolioLinksJson?: JsonNullableFilter<"ProviderRequest">
    status?: EnumProviderRequestStatusFilter<"ProviderRequest"> | $Enums.ProviderRequestStatus
    rejectionReason?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedBy?: StringNullableFilter<"ProviderRequest"> | string | null
    reviewedAt?: DateTimeNullableFilter<"ProviderRequest"> | Date | string | null
    createdAt?: DateTimeFilter<"ProviderRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ProviderRequest"> | Date | string
  }

  export type ProviderRequestUpsertWithWhereUniqueWithoutReviewedByUserInput = {
    where: ProviderRequestWhereUniqueInput
    update: XOR<ProviderRequestUpdateWithoutReviewedByUserInput, ProviderRequestUncheckedUpdateWithoutReviewedByUserInput>
    create: XOR<ProviderRequestCreateWithoutReviewedByUserInput, ProviderRequestUncheckedCreateWithoutReviewedByUserInput>
  }

  export type ProviderRequestUpdateWithWhereUniqueWithoutReviewedByUserInput = {
    where: ProviderRequestWhereUniqueInput
    data: XOR<ProviderRequestUpdateWithoutReviewedByUserInput, ProviderRequestUncheckedUpdateWithoutReviewedByUserInput>
  }

  export type ProviderRequestUpdateManyWithWhereWithoutReviewedByUserInput = {
    where: ProviderRequestScalarWhereInput
    data: XOR<ProviderRequestUpdateManyMutationInput, ProviderRequestUncheckedUpdateManyWithoutReviewedByUserInput>
  }

  export type ProviderProfileUpsertWithoutUserInput = {
    update: XOR<ProviderProfileUpdateWithoutUserInput, ProviderProfileUncheckedUpdateWithoutUserInput>
    create: XOR<ProviderProfileCreateWithoutUserInput, ProviderProfileUncheckedCreateWithoutUserInput>
    where?: ProviderProfileWhereInput
  }

  export type ProviderProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: ProviderProfileWhereInput
    data: XOR<ProviderProfileUpdateWithoutUserInput, ProviderProfileUncheckedUpdateWithoutUserInput>
  }

  export type ProviderProfileUpdateWithoutUserInput = {
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderProfileUncheckedUpdateWithoutUserInput = {
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    radiusKm?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    avgRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    acceptRate30d?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    responseP50S?: IntFieldUpdateOperationsInput | number
    noShow30d?: IntFieldUpdateOperationsInput | number
  }

  export type ProviderAvailabilityUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderAvailabilityWhereUniqueInput
    update: XOR<ProviderAvailabilityUpdateWithoutProviderInput, ProviderAvailabilityUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderAvailabilityCreateWithoutProviderInput, ProviderAvailabilityUncheckedCreateWithoutProviderInput>
  }

  export type ProviderAvailabilityUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderAvailabilityWhereUniqueInput
    data: XOR<ProviderAvailabilityUpdateWithoutProviderInput, ProviderAvailabilityUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderAvailabilityUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderAvailabilityScalarWhereInput
    data: XOR<ProviderAvailabilityUpdateManyMutationInput, ProviderAvailabilityUncheckedUpdateManyWithoutProviderInput>
  }

  export type ProviderAvailabilityScalarWhereInput = {
    AND?: ProviderAvailabilityScalarWhereInput | ProviderAvailabilityScalarWhereInput[]
    OR?: ProviderAvailabilityScalarWhereInput[]
    NOT?: ProviderAvailabilityScalarWhereInput | ProviderAvailabilityScalarWhereInput[]
    id?: StringFilter<"ProviderAvailability"> | string
    providerId?: StringFilter<"ProviderAvailability"> | string
    weekday?: IntFilter<"ProviderAvailability"> | number
    startTime?: StringFilter<"ProviderAvailability"> | string
    endTime?: StringFilter<"ProviderAvailability"> | string
  }

  export type ProviderCategoryUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderCategoryWhereUniqueInput
    update: XOR<ProviderCategoryUpdateWithoutProviderInput, ProviderCategoryUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderCategoryCreateWithoutProviderInput, ProviderCategoryUncheckedCreateWithoutProviderInput>
  }

  export type ProviderCategoryUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderCategoryWhereUniqueInput
    data: XOR<ProviderCategoryUpdateWithoutProviderInput, ProviderCategoryUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderCategoryUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderCategoryScalarWhereInput
    data: XOR<ProviderCategoryUpdateManyMutationInput, ProviderCategoryUncheckedUpdateManyWithoutProviderInput>
  }

  export type ProviderCategoryScalarWhereInput = {
    AND?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
    OR?: ProviderCategoryScalarWhereInput[]
    NOT?: ProviderCategoryScalarWhereInput | ProviderCategoryScalarWhereInput[]
    id?: StringFilter<"ProviderCategory"> | string
    providerId?: StringFilter<"ProviderCategory"> | string
    categoryId?: StringFilter<"ProviderCategory"> | string
    minPriceCents?: IntFilter<"ProviderCategory"> | number
    active?: BoolFilter<"ProviderCategory"> | boolean
    updatedAt?: DateTimeFilter<"ProviderCategory"> | Date | string
    levelWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    expWeight?: IntNullableFilter<"ProviderCategory"> | number | null
    score?: DecimalNullableFilter<"ProviderCategory"> | Decimal | DecimalJsLike | number | string | null
    isAvailable?: BoolNullableFilter<"ProviderCategory"> | boolean | null
  }

  export type ProviderPayoutUpsertWithWhereUniqueWithoutProviderInput = {
    where: ProviderPayoutWhereUniqueInput
    update: XOR<ProviderPayoutUpdateWithoutProviderInput, ProviderPayoutUncheckedUpdateWithoutProviderInput>
    create: XOR<ProviderPayoutCreateWithoutProviderInput, ProviderPayoutUncheckedCreateWithoutProviderInput>
  }

  export type ProviderPayoutUpdateWithWhereUniqueWithoutProviderInput = {
    where: ProviderPayoutWhereUniqueInput
    data: XOR<ProviderPayoutUpdateWithoutProviderInput, ProviderPayoutUncheckedUpdateWithoutProviderInput>
  }

  export type ProviderPayoutUpdateManyWithWhereWithoutProviderInput = {
    where: ProviderPayoutScalarWhereInput
    data: XOR<ProviderPayoutUpdateManyMutationInput, ProviderPayoutUncheckedUpdateManyWithoutProviderInput>
  }

  export type ProviderPayoutScalarWhereInput = {
    AND?: ProviderPayoutScalarWhereInput | ProviderPayoutScalarWhereInput[]
    OR?: ProviderPayoutScalarWhereInput[]
    NOT?: ProviderPayoutScalarWhereInput | ProviderPayoutScalarWhereInput[]
    id?: StringFilter<"ProviderPayout"> | string
    orderId?: StringNullableFilter<"ProviderPayout"> | string | null
    providerId?: StringFilter<"ProviderPayout"> | string
    grossCents?: IntFilter<"ProviderPayout"> | number
    commissionCents?: IntFilter<"ProviderPayout"> | number
    netCents?: IntFilter<"ProviderPayout"> | number
    status?: StringFilter<"ProviderPayout"> | string
    paidAt?: DateTimeNullableFilter<"ProviderPayout"> | Date | string | null
  }

  export type ClientCreditUpsertWithWhereUniqueWithoutUserInput = {
    where: ClientCreditWhereUniqueInput
    update: XOR<ClientCreditUpdateWithoutUserInput, ClientCreditUncheckedUpdateWithoutUserInput>
    create: XOR<ClientCreditCreateWithoutUserInput, ClientCreditUncheckedCreateWithoutUserInput>
  }

  export type ClientCreditUpdateWithWhereUniqueWithoutUserInput = {
    where: ClientCreditWhereUniqueInput
    data: XOR<ClientCreditUpdateWithoutUserInput, ClientCreditUncheckedUpdateWithoutUserInput>
  }

  export type ClientCreditUpdateManyWithWhereWithoutUserInput = {
    where: ClientCreditScalarWhereInput
    data: XOR<ClientCreditUpdateManyMutationInput, ClientCreditUncheckedUpdateManyWithoutUserInput>
  }

  export type ClientCreditScalarWhereInput = {
    AND?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
    OR?: ClientCreditScalarWhereInput[]
    NOT?: ClientCreditScalarWhereInput | ClientCreditScalarWhereInput[]
    id?: StringFilter<"ClientCredit"> | string
    userId?: StringFilter<"ClientCredit"> | string
    orderId?: StringFilter<"ClientCredit"> | string
    amountCents?: IntFilter<"ClientCredit"> | number
    expiresAt?: DateTimeFilter<"ClientCredit"> | Date | string
    usedCents?: IntFilter<"ClientCredit"> | number
    createdAt?: DateTimeFilter<"ClientCredit"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutClientInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutClientInput, OrderUncheckedUpdateWithoutClientInput>
    create: XOR<OrderCreateWithoutClientInput, OrderUncheckedCreateWithoutClientInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutClientInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutClientInput, OrderUncheckedUpdateWithoutClientInput>
  }

  export type OrderUpdateManyWithWhereWithoutClientInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutClientInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    clientId?: StringFilter<"Order"> | string
    providerId?: StringNullableFilter<"Order"> | string | null
    addressId?: StringNullableFilter<"Order"> | string | null
    categoryId?: StringNullableFilter<"Order"> | string | null
    description?: StringNullableFilter<"Order"> | string | null
    status?: StringFilter<"Order"> | string
    depositMethod?: StringFilter<"Order"> | string
    depositBaseAvgCents?: IntNullableFilter<"Order"> | number | null
    depositCents?: IntFilter<"Order"> | number
    slotStart?: DateTimeNullableFilter<"Order"> | Date | string | null
    slotEnd?: DateTimeNullableFilter<"Order"> | Date | string | null
    finalPriceCents?: IntNullableFilter<"Order"> | number | null
    reviewStatus?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutProviderInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutProviderInput, OrderUncheckedUpdateWithoutProviderInput>
    create: XOR<OrderCreateWithoutProviderInput, OrderUncheckedCreateWithoutProviderInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutProviderInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutProviderInput, OrderUncheckedUpdateWithoutProviderInput>
  }

  export type OrderUpdateManyWithWhereWithoutProviderInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutProviderInput>
  }

  export type OrderInvitationUpsertWithWhereUniqueWithoutProviderInput = {
    where: OrderInvitationWhereUniqueInput
    update: XOR<OrderInvitationUpdateWithoutProviderInput, OrderInvitationUncheckedUpdateWithoutProviderInput>
    create: XOR<OrderInvitationCreateWithoutProviderInput, OrderInvitationUncheckedCreateWithoutProviderInput>
  }

  export type OrderInvitationUpdateWithWhereUniqueWithoutProviderInput = {
    where: OrderInvitationWhereUniqueInput
    data: XOR<OrderInvitationUpdateWithoutProviderInput, OrderInvitationUncheckedUpdateWithoutProviderInput>
  }

  export type OrderInvitationUpdateManyWithWhereWithoutProviderInput = {
    where: OrderInvitationScalarWhereInput
    data: XOR<OrderInvitationUpdateManyMutationInput, OrderInvitationUncheckedUpdateManyWithoutProviderInput>
  }

  export type OrderInvitationScalarWhereInput = {
    AND?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
    OR?: OrderInvitationScalarWhereInput[]
    NOT?: OrderInvitationScalarWhereInput | OrderInvitationScalarWhereInput[]
    id?: StringFilter<"OrderInvitation"> | string
    orderId?: StringFilter<"OrderInvitation"> | string
    providerId?: StringFilter<"OrderInvitation"> | string
    slotId?: StringNullableFilter<"OrderInvitation"> | string | null
    score?: DecimalNullableFilter<"OrderInvitation"> | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFilter<"OrderInvitation"> | Date | string
    respondedAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    response?: StringNullableFilter<"OrderInvitation"> | string | null
    waMessageId?: StringNullableFilter<"OrderInvitation"> | string | null
    waRemoteJid?: StringNullableFilter<"OrderInvitation"> | string | null
    categorySlug?: StringNullableFilter<"OrderInvitation"> | string | null
    status?: StringNullableFilter<"OrderInvitation"> | string | null
    expiresAt?: DateTimeNullableFilter<"OrderInvitation"> | Date | string | null
    meta?: JsonNullableFilter<"OrderInvitation">
  }

  export type OrderReviewUpsertWithWhereUniqueWithoutClientInput = {
    where: OrderReviewWhereUniqueInput
    update: XOR<OrderReviewUpdateWithoutClientInput, OrderReviewUncheckedUpdateWithoutClientInput>
    create: XOR<OrderReviewCreateWithoutClientInput, OrderReviewUncheckedCreateWithoutClientInput>
  }

  export type OrderReviewUpdateWithWhereUniqueWithoutClientInput = {
    where: OrderReviewWhereUniqueInput
    data: XOR<OrderReviewUpdateWithoutClientInput, OrderReviewUncheckedUpdateWithoutClientInput>
  }

  export type OrderReviewUpdateManyWithWhereWithoutClientInput = {
    where: OrderReviewScalarWhereInput
    data: XOR<OrderReviewUpdateManyMutationInput, OrderReviewUncheckedUpdateManyWithoutClientInput>
  }

  export type OrderReviewScalarWhereInput = {
    AND?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
    OR?: OrderReviewScalarWhereInput[]
    NOT?: OrderReviewScalarWhereInput | OrderReviewScalarWhereInput[]
    orderId?: StringFilter<"OrderReview"> | string
    clientId?: StringFilter<"OrderReview"> | string
    providerId?: StringFilter<"OrderReview"> | string
    rating?: IntNullableFilter<"OrderReview"> | number | null
    comment?: StringNullableFilter<"OrderReview"> | string | null
    createdAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderReview"> | Date | string | null
  }

  export type OrderReviewUpsertWithWhereUniqueWithoutProviderInput = {
    where: OrderReviewWhereUniqueInput
    update: XOR<OrderReviewUpdateWithoutProviderInput, OrderReviewUncheckedUpdateWithoutProviderInput>
    create: XOR<OrderReviewCreateWithoutProviderInput, OrderReviewUncheckedCreateWithoutProviderInput>
  }

  export type OrderReviewUpdateWithWhereUniqueWithoutProviderInput = {
    where: OrderReviewWhereUniqueInput
    data: XOR<OrderReviewUpdateWithoutProviderInput, OrderReviewUncheckedUpdateWithoutProviderInput>
  }

  export type OrderReviewUpdateManyWithWhereWithoutProviderInput = {
    where: OrderReviewScalarWhereInput
    data: XOR<OrderReviewUpdateManyMutationInput, OrderReviewUncheckedUpdateManyWithoutProviderInput>
  }

  export type OrderStatusHistoryUpsertWithWhereUniqueWithoutByUserInput = {
    where: OrderStatusHistoryWhereUniqueInput
    update: XOR<OrderStatusHistoryUpdateWithoutByUserInput, OrderStatusHistoryUncheckedUpdateWithoutByUserInput>
    create: XOR<OrderStatusHistoryCreateWithoutByUserInput, OrderStatusHistoryUncheckedCreateWithoutByUserInput>
  }

  export type OrderStatusHistoryUpdateWithWhereUniqueWithoutByUserInput = {
    where: OrderStatusHistoryWhereUniqueInput
    data: XOR<OrderStatusHistoryUpdateWithoutByUserInput, OrderStatusHistoryUncheckedUpdateWithoutByUserInput>
  }

  export type OrderStatusHistoryUpdateManyWithWhereWithoutByUserInput = {
    where: OrderStatusHistoryScalarWhereInput
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyWithoutByUserInput>
  }

  export type OrderStatusHistoryScalarWhereInput = {
    AND?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
    OR?: OrderStatusHistoryScalarWhereInput[]
    NOT?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
    id?: StringFilter<"OrderStatusHistory"> | string
    orderId?: StringFilter<"OrderStatusHistory"> | string
    oldStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    newStatus?: StringFilter<"OrderStatusHistory"> | string
    at?: DateTimeFilter<"OrderStatusHistory"> | Date | string
    byUserId?: StringNullableFilter<"OrderStatusHistory"> | string | null
  }

  export type MatchScoreUpsertWithWhereUniqueWithoutProviderInput = {
    where: MatchScoreWhereUniqueInput
    update: XOR<MatchScoreUpdateWithoutProviderInput, MatchScoreUncheckedUpdateWithoutProviderInput>
    create: XOR<MatchScoreCreateWithoutProviderInput, MatchScoreUncheckedCreateWithoutProviderInput>
  }

  export type MatchScoreUpdateWithWhereUniqueWithoutProviderInput = {
    where: MatchScoreWhereUniqueInput
    data: XOR<MatchScoreUpdateWithoutProviderInput, MatchScoreUncheckedUpdateWithoutProviderInput>
  }

  export type MatchScoreUpdateManyWithWhereWithoutProviderInput = {
    where: MatchScoreScalarWhereInput
    data: XOR<MatchScoreUpdateManyMutationInput, MatchScoreUncheckedUpdateManyWithoutProviderInput>
  }

  export type MatchScoreScalarWhereInput = {
    AND?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
    OR?: MatchScoreScalarWhereInput[]
    NOT?: MatchScoreScalarWhereInput | MatchScoreScalarWhereInput[]
    id?: StringFilter<"MatchScore"> | string
    orderId?: StringFilter<"MatchScore"> | string
    providerId?: StringFilter<"MatchScore"> | string
    distanceKm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    acceptRate?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    responseFast?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    reliability?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    finalScore?: DecimalNullableFilter<"MatchScore"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"MatchScore"> | Date | string
  }

  export type UserRoleAssignmentCreateWithoutRoleInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleAssignmentUncheckedCreateWithoutRoleInput = {
    id?: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRoleAssignmentCreateOrConnectWithoutRoleInput = {
    where: UserRoleAssignmentWhereUniqueInput
    create: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput>
  }

  export type UserRoleAssignmentCreateManyRoleInputEnvelope = {
    data: UserRoleAssignmentCreateManyRoleInput | UserRoleAssignmentCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserRoleAssignmentUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserRoleAssignmentWhereUniqueInput
    update: XOR<UserRoleAssignmentUpdateWithoutRoleInput, UserRoleAssignmentUncheckedUpdateWithoutRoleInput>
    create: XOR<UserRoleAssignmentCreateWithoutRoleInput, UserRoleAssignmentUncheckedCreateWithoutRoleInput>
  }

  export type UserRoleAssignmentUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserRoleAssignmentWhereUniqueInput
    data: XOR<UserRoleAssignmentUpdateWithoutRoleInput, UserRoleAssignmentUncheckedUpdateWithoutRoleInput>
  }

  export type UserRoleAssignmentUpdateManyWithWhereWithoutRoleInput = {
    where: UserRoleAssignmentScalarWhereInput
    data: XOR<UserRoleAssignmentUpdateManyMutationInput, UserRoleAssignmentUncheckedUpdateManyWithoutRoleInput>
  }

  export type RoleCreateWithoutUserRolesInput = {
    id?: string
    name: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleUncheckedCreateWithoutUserRolesInput = {
    id?: string
    name: $Enums.UserRole
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleCreateOrConnectWithoutUserRolesInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
  }

  export type UserCreateWithoutUserRolesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutUserRolesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutUserRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
  }

  export type RoleUpsertWithoutUserRolesInput = {
    update: XOR<RoleUpdateWithoutUserRolesInput, RoleUncheckedUpdateWithoutUserRolesInput>
    create: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUserRolesInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUserRolesInput, RoleUncheckedUpdateWithoutUserRolesInput>
  }

  export type RoleUpdateWithoutUserRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateWithoutUserRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutUserRolesInput = {
    update: XOR<UserUpdateWithoutUserRolesInput, UserUncheckedUpdateWithoutUserRolesInput>
    create: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserRolesInput, UserUncheckedUpdateWithoutUserRolesInput>
  }

  export type UserUpdateWithoutUserRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutUserRolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutProviderRequestsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutProviderRequestsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutProviderRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProviderRequestsInput, UserUncheckedCreateWithoutProviderRequestsInput>
  }

  export type UserCreateWithoutReviewedRequestsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutReviewedRequestsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutReviewedRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedRequestsInput, UserUncheckedCreateWithoutReviewedRequestsInput>
  }

  export type UserUpsertWithoutProviderRequestsInput = {
    update: XOR<UserUpdateWithoutProviderRequestsInput, UserUncheckedUpdateWithoutProviderRequestsInput>
    create: XOR<UserCreateWithoutProviderRequestsInput, UserUncheckedCreateWithoutProviderRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProviderRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProviderRequestsInput, UserUncheckedUpdateWithoutProviderRequestsInput>
  }

  export type UserUpdateWithoutProviderRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutProviderRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserUpsertWithoutReviewedRequestsInput = {
    update: XOR<UserUpdateWithoutReviewedRequestsInput, UserUncheckedUpdateWithoutReviewedRequestsInput>
    create: XOR<UserCreateWithoutReviewedRequestsInput, UserUncheckedCreateWithoutReviewedRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedRequestsInput, UserUncheckedUpdateWithoutReviewedRequestsInput>
  }

  export type UserUpdateWithoutReviewedRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutAddressesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutAddressesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutAddressesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
  }

  export type OrderCreateWithoutAddressInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutAddressInput = {
    id?: string
    clientId: string
    providerId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutAddressInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput>
  }

  export type OrderCreateManyAddressInputEnvelope = {
    data: OrderCreateManyAddressInput | OrderCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAddressesInput = {
    update: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAddressesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type UserUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderUpsertWithWhereUniqueWithoutAddressInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutAddressInput, OrderUncheckedUpdateWithoutAddressInput>
    create: XOR<OrderCreateWithoutAddressInput, OrderUncheckedCreateWithoutAddressInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutAddressInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutAddressInput, OrderUncheckedUpdateWithoutAddressInput>
  }

  export type OrderUpdateManyWithWhereWithoutAddressInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutAddressInput>
  }

  export type UserCreateWithoutProviderProfileInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutProviderProfileInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutProviderProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProviderProfileInput, UserUncheckedCreateWithoutProviderProfileInput>
  }

  export type UserUpsertWithoutProviderProfileInput = {
    update: XOR<UserUpdateWithoutProviderProfileInput, UserUncheckedUpdateWithoutProviderProfileInput>
    create: XOR<UserCreateWithoutProviderProfileInput, UserUncheckedCreateWithoutProviderProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProviderProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProviderProfileInput, UserUncheckedUpdateWithoutProviderProfileInput>
  }

  export type UserUpdateWithoutProviderProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutProviderProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutProviderAvailabilityInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutProviderAvailabilityInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutProviderAvailabilityInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProviderAvailabilityInput, UserUncheckedCreateWithoutProviderAvailabilityInput>
  }

  export type UserUpsertWithoutProviderAvailabilityInput = {
    update: XOR<UserUpdateWithoutProviderAvailabilityInput, UserUncheckedUpdateWithoutProviderAvailabilityInput>
    create: XOR<UserCreateWithoutProviderAvailabilityInput, UserUncheckedCreateWithoutProviderAvailabilityInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProviderAvailabilityInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProviderAvailabilityInput, UserUncheckedUpdateWithoutProviderAvailabilityInput>
  }

  export type UserUpdateWithoutProviderAvailabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutProviderAvailabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserCreateWithoutProviderCategoriesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutProviderCategoriesInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutProviderCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProviderCategoriesInput, UserUncheckedCreateWithoutProviderCategoriesInput>
  }

  export type CategoryCreateWithoutProviderCategoriesInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutProviderCategoriesInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProviderCategoriesInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProviderCategoriesInput, CategoryUncheckedCreateWithoutProviderCategoriesInput>
  }

  export type UserUpsertWithoutProviderCategoriesInput = {
    update: XOR<UserUpdateWithoutProviderCategoriesInput, UserUncheckedUpdateWithoutProviderCategoriesInput>
    create: XOR<UserCreateWithoutProviderCategoriesInput, UserUncheckedCreateWithoutProviderCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProviderCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProviderCategoriesInput, UserUncheckedUpdateWithoutProviderCategoriesInput>
  }

  export type UserUpdateWithoutProviderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutProviderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type CategoryUpsertWithoutProviderCategoriesInput = {
    update: XOR<CategoryUpdateWithoutProviderCategoriesInput, CategoryUncheckedUpdateWithoutProviderCategoriesInput>
    create: XOR<CategoryCreateWithoutProviderCategoriesInput, CategoryUncheckedCreateWithoutProviderCategoriesInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProviderCategoriesInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProviderCategoriesInput, CategoryUncheckedUpdateWithoutProviderCategoriesInput>
  }

  export type CategoryUpdateWithoutProviderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProviderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type OrderCreateWithoutCategoryInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCategoryInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCategoryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput>
  }

  export type OrderCreateManyCategoryInputEnvelope = {
    data: OrderCreateManyCategoryInput | OrderCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProviderCategoryCreateWithoutCategoryInput = {
    id?: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
    provider: UserCreateNestedOneWithoutProviderCategoriesInput
  }

  export type ProviderCategoryUncheckedCreateWithoutCategoryInput = {
    id?: string
    providerId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type ProviderCategoryCreateOrConnectWithoutCategoryInput = {
    where: ProviderCategoryWhereUniqueInput
    create: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type ProviderCategoryCreateManyCategoryInputEnvelope = {
    data: ProviderCategoryCreateManyCategoryInput | ProviderCategoryCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type LlmClassificationCreateWithoutCategoryInput = {
    id?: string
    inputText?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutLlmClassificationsInput
  }

  export type LlmClassificationUncheckedCreateWithoutCategoryInput = {
    id?: string
    orderId: string
    inputText?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type LlmClassificationCreateOrConnectWithoutCategoryInput = {
    where: LlmClassificationWhereUniqueInput
    create: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput>
  }

  export type LlmClassificationCreateManyCategoryInputEnvelope = {
    data: LlmClassificationCreateManyCategoryInput | LlmClassificationCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutCategoryInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCategoryInput, OrderUncheckedUpdateWithoutCategoryInput>
    create: XOR<OrderCreateWithoutCategoryInput, OrderUncheckedCreateWithoutCategoryInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCategoryInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCategoryInput, OrderUncheckedUpdateWithoutCategoryInput>
  }

  export type OrderUpdateManyWithWhereWithoutCategoryInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProviderCategoryUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProviderCategoryWhereUniqueInput
    update: XOR<ProviderCategoryUpdateWithoutCategoryInput, ProviderCategoryUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProviderCategoryCreateWithoutCategoryInput, ProviderCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type ProviderCategoryUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProviderCategoryWhereUniqueInput
    data: XOR<ProviderCategoryUpdateWithoutCategoryInput, ProviderCategoryUncheckedUpdateWithoutCategoryInput>
  }

  export type ProviderCategoryUpdateManyWithWhereWithoutCategoryInput = {
    where: ProviderCategoryScalarWhereInput
    data: XOR<ProviderCategoryUpdateManyMutationInput, ProviderCategoryUncheckedUpdateManyWithoutCategoryInput>
  }

  export type LlmClassificationUpsertWithWhereUniqueWithoutCategoryInput = {
    where: LlmClassificationWhereUniqueInput
    update: XOR<LlmClassificationUpdateWithoutCategoryInput, LlmClassificationUncheckedUpdateWithoutCategoryInput>
    create: XOR<LlmClassificationCreateWithoutCategoryInput, LlmClassificationUncheckedCreateWithoutCategoryInput>
  }

  export type LlmClassificationUpdateWithWhereUniqueWithoutCategoryInput = {
    where: LlmClassificationWhereUniqueInput
    data: XOR<LlmClassificationUpdateWithoutCategoryInput, LlmClassificationUncheckedUpdateWithoutCategoryInput>
  }

  export type LlmClassificationUpdateManyWithWhereWithoutCategoryInput = {
    where: LlmClassificationScalarWhereInput
    data: XOR<LlmClassificationUpdateManyMutationInput, LlmClassificationUncheckedUpdateManyWithoutCategoryInput>
  }

  export type LlmClassificationScalarWhereInput = {
    AND?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
    OR?: LlmClassificationScalarWhereInput[]
    NOT?: LlmClassificationScalarWhereInput | LlmClassificationScalarWhereInput[]
    id?: StringFilter<"LlmClassification"> | string
    orderId?: StringFilter<"LlmClassification"> | string
    inputText?: StringNullableFilter<"LlmClassification"> | string | null
    categoryId?: StringNullableFilter<"LlmClassification"> | string | null
    confidence?: DecimalNullableFilter<"LlmClassification"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"LlmClassification"> | Date | string
  }

  export type UserCreateWithoutOrdersAsClientInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrdersAsClientInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrdersAsClientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersAsClientInput, UserUncheckedCreateWithoutOrdersAsClientInput>
  }

  export type UserCreateWithoutOrdersAsProviderInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrdersAsProviderInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrdersAsProviderInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersAsProviderInput, UserUncheckedCreateWithoutOrdersAsProviderInput>
  }

  export type AddressCreateWithoutOrdersInput = {
    id?: string
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
    user?: UserCreateNestedOneWithoutAddressesInput
  }

  export type AddressUncheckedCreateWithoutOrdersInput = {
    id?: string
    userId?: string | null
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
  }

  export type AddressCreateOrConnectWithoutOrdersInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
  }

  export type CategoryCreateWithoutOrdersInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    providerCategories?: ProviderCategoryCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutOrdersInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutCategoryInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutOrdersInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutOrdersInput, CategoryUncheckedCreateWithoutOrdersInput>
  }

  export type OrderSlotCreateWithoutOrderInput = {
    id?: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
    invitations?: OrderInvitationCreateNestedManyWithoutSlotInput
  }

  export type OrderSlotUncheckedCreateWithoutOrderInput = {
    id?: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
    invitations?: OrderInvitationUncheckedCreateNestedManyWithoutSlotInput
  }

  export type OrderSlotCreateOrConnectWithoutOrderInput = {
    where: OrderSlotWhereUniqueInput
    create: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput>
  }

  export type OrderSlotCreateManyOrderInputEnvelope = {
    data: OrderSlotCreateManyOrderInput | OrderSlotCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderCategoryCreateWithoutOrderInput = {
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
  }

  export type OrderCategoryUncheckedCreateWithoutOrderInput = {
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
  }

  export type OrderCategoryCreateOrConnectWithoutOrderInput = {
    where: OrderCategoryWhereUniqueInput
    create: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderCategoryCreateManyOrderInputEnvelope = {
    data: OrderCategoryCreateManyOrderInput | OrderCategoryCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderInvitationCreateWithoutOrderInput = {
    id?: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    provider: UserCreateNestedOneWithoutOrderInvitationsInput
    slot?: OrderSlotCreateNestedOneWithoutInvitationsInput
  }

  export type OrderInvitationUncheckedCreateWithoutOrderInput = {
    id?: string
    providerId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationCreateOrConnectWithoutOrderInput = {
    where: OrderInvitationWhereUniqueInput
    create: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput>
  }

  export type OrderInvitationCreateManyOrderInputEnvelope = {
    data: OrderInvitationCreateManyOrderInput | OrderInvitationCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderStatusHistoryCreateWithoutOrderInput = {
    id?: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    byUser?: UserCreateNestedOneWithoutOrderStatusHistoryInput
  }

  export type OrderStatusHistoryUncheckedCreateWithoutOrderInput = {
    id?: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    byUserId?: string | null
  }

  export type OrderStatusHistoryCreateOrConnectWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    create: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderStatusHistoryCreateManyOrderInputEnvelope = {
    data: OrderStatusHistoryCreateManyOrderInput | OrderStatusHistoryCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderReviewCreateWithoutOrderInput = {
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    client: UserCreateNestedOneWithoutOrderReviewsAsClientInput
    provider: UserCreateNestedOneWithoutOrderReviewsAsProviderInput
  }

  export type OrderReviewUncheckedCreateWithoutOrderInput = {
    clientId: string
    providerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewCreateOrConnectWithoutOrderInput = {
    where: OrderReviewWhereUniqueInput
    create: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
  }

  export type PaymentCreateWithoutOrderInput = {
    id?: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
    paymentEvents?: PaymentEventCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutOrderInput = {
    id?: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutOrderInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
  }

  export type PaymentCreateManyOrderInputEnvelope = {
    data: PaymentCreateManyOrderInput | PaymentCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type PaymentEventCreateWithoutOrderInput = {
    id?: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
    payment?: PaymentCreateNestedOneWithoutPaymentEventsInput
  }

  export type PaymentEventUncheckedCreateWithoutOrderInput = {
    id?: string
    paymentId?: string | null
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type PaymentEventCreateOrConnectWithoutOrderInput = {
    where: PaymentEventWhereUniqueInput
    create: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput>
  }

  export type PaymentEventCreateManyOrderInputEnvelope = {
    data: PaymentEventCreateManyOrderInput | PaymentEventCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CommissionCreateWithoutOrderInput = {
    finalPriceCents: number
    rateBp?: number
    minCents?: number
    maxCents?: number
    computedCents: number
    computedAt?: Date | string
  }

  export type CommissionUncheckedCreateWithoutOrderInput = {
    finalPriceCents: number
    rateBp?: number
    minCents?: number
    maxCents?: number
    computedCents: number
    computedAt?: Date | string
  }

  export type CommissionCreateOrConnectWithoutOrderInput = {
    where: CommissionWhereUniqueInput
    create: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
  }

  export type ClientCreditCreateWithoutOrderInput = {
    id?: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutClientCreditsInput
  }

  export type ClientCreditUncheckedCreateWithoutOrderInput = {
    id?: string
    userId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type ClientCreditCreateOrConnectWithoutOrderInput = {
    where: ClientCreditWhereUniqueInput
    create: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput>
  }

  export type ClientCreditCreateManyOrderInputEnvelope = {
    data: ClientCreditCreateManyOrderInput | ClientCreditCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type ProviderPayoutCreateWithoutOrderInput = {
    id?: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
    provider: UserCreateNestedOneWithoutProviderPayoutsInput
  }

  export type ProviderPayoutUncheckedCreateWithoutOrderInput = {
    id?: string
    providerId: string
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
  }

  export type ProviderPayoutCreateOrConnectWithoutOrderInput = {
    where: ProviderPayoutWhereUniqueInput
    create: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
  }

  export type MatchScoreCreateWithoutOrderInput = {
    id?: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    provider: UserCreateNestedOneWithoutMatchScoresInput
  }

  export type MatchScoreUncheckedCreateWithoutOrderInput = {
    id?: string
    providerId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type MatchScoreCreateOrConnectWithoutOrderInput = {
    where: MatchScoreWhereUniqueInput
    create: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput>
  }

  export type MatchScoreCreateManyOrderInputEnvelope = {
    data: MatchScoreCreateManyOrderInput | MatchScoreCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type LlmClassificationCreateWithoutOrderInput = {
    id?: string
    inputText?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    category?: CategoryCreateNestedOneWithoutLlmClassificationsInput
  }

  export type LlmClassificationUncheckedCreateWithoutOrderInput = {
    id?: string
    inputText?: string | null
    categoryId?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type LlmClassificationCreateOrConnectWithoutOrderInput = {
    where: LlmClassificationWhereUniqueInput
    create: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput>
  }

  export type LlmClassificationCreateManyOrderInputEnvelope = {
    data: LlmClassificationCreateManyOrderInput | LlmClassificationCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOrdersAsClientInput = {
    update: XOR<UserUpdateWithoutOrdersAsClientInput, UserUncheckedUpdateWithoutOrdersAsClientInput>
    create: XOR<UserCreateWithoutOrdersAsClientInput, UserUncheckedCreateWithoutOrdersAsClientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersAsClientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersAsClientInput, UserUncheckedUpdateWithoutOrdersAsClientInput>
  }

  export type UserUpdateWithoutOrdersAsClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersAsClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserUpsertWithoutOrdersAsProviderInput = {
    update: XOR<UserUpdateWithoutOrdersAsProviderInput, UserUncheckedUpdateWithoutOrdersAsProviderInput>
    create: XOR<UserCreateWithoutOrdersAsProviderInput, UserUncheckedCreateWithoutOrdersAsProviderInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersAsProviderInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersAsProviderInput, UserUncheckedUpdateWithoutOrdersAsProviderInput>
  }

  export type UserUpdateWithoutOrdersAsProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersAsProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type AddressUpsertWithoutOrdersInput = {
    update: XOR<AddressUpdateWithoutOrdersInput, AddressUncheckedUpdateWithoutOrdersInput>
    create: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutOrdersInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutOrdersInput, AddressUncheckedUpdateWithoutOrdersInput>
  }

  export type AddressUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutAddressesNestedInput
  }

  export type AddressUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpsertWithoutOrdersInput = {
    update: XOR<CategoryUpdateWithoutOrdersInput, CategoryUncheckedUpdateWithoutOrdersInput>
    create: XOR<CategoryCreateWithoutOrdersInput, CategoryUncheckedCreateWithoutOrdersInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutOrdersInput, CategoryUncheckedUpdateWithoutOrdersInput>
  }

  export type CategoryUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    providerCategories?: ProviderCategoryUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutCategoryNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type OrderSlotUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderSlotWhereUniqueInput
    update: XOR<OrderSlotUpdateWithoutOrderInput, OrderSlotUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderSlotCreateWithoutOrderInput, OrderSlotUncheckedCreateWithoutOrderInput>
  }

  export type OrderSlotUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderSlotWhereUniqueInput
    data: XOR<OrderSlotUpdateWithoutOrderInput, OrderSlotUncheckedUpdateWithoutOrderInput>
  }

  export type OrderSlotUpdateManyWithWhereWithoutOrderInput = {
    where: OrderSlotScalarWhereInput
    data: XOR<OrderSlotUpdateManyMutationInput, OrderSlotUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderSlotScalarWhereInput = {
    AND?: OrderSlotScalarWhereInput | OrderSlotScalarWhereInput[]
    OR?: OrderSlotScalarWhereInput[]
    NOT?: OrderSlotScalarWhereInput | OrderSlotScalarWhereInput[]
    id?: StringFilter<"OrderSlot"> | string
    orderId?: StringFilter<"OrderSlot"> | string
    label?: StringNullableFilter<"OrderSlot"> | string | null
    startAt?: DateTimeFilter<"OrderSlot"> | Date | string
    endAt?: DateTimeFilter<"OrderSlot"> | Date | string
    origin?: StringFilter<"OrderSlot"> | string
    chosen?: BoolFilter<"OrderSlot"> | boolean
  }

  export type OrderCategoryUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderCategoryWhereUniqueInput
    update: XOR<OrderCategoryUpdateWithoutOrderInput, OrderCategoryUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderCategoryCreateWithoutOrderInput, OrderCategoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderCategoryUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderCategoryWhereUniqueInput
    data: XOR<OrderCategoryUpdateWithoutOrderInput, OrderCategoryUncheckedUpdateWithoutOrderInput>
  }

  export type OrderCategoryUpdateManyWithWhereWithoutOrderInput = {
    where: OrderCategoryScalarWhereInput
    data: XOR<OrderCategoryUpdateManyMutationInput, OrderCategoryUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCategoryScalarWhereInput = {
    AND?: OrderCategoryScalarWhereInput | OrderCategoryScalarWhereInput[]
    OR?: OrderCategoryScalarWhereInput[]
    NOT?: OrderCategoryScalarWhereInput | OrderCategoryScalarWhereInput[]
    orderId?: StringFilter<"OrderCategory"> | string
    categorySlug?: StringFilter<"OrderCategory"> | string
    confidence?: DecimalFilter<"OrderCategory"> | Decimal | DecimalJsLike | number | string
    rank?: IntFilter<"OrderCategory"> | number
  }

  export type OrderInvitationUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderInvitationWhereUniqueInput
    update: XOR<OrderInvitationUpdateWithoutOrderInput, OrderInvitationUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderInvitationCreateWithoutOrderInput, OrderInvitationUncheckedCreateWithoutOrderInput>
  }

  export type OrderInvitationUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderInvitationWhereUniqueInput
    data: XOR<OrderInvitationUpdateWithoutOrderInput, OrderInvitationUncheckedUpdateWithoutOrderInput>
  }

  export type OrderInvitationUpdateManyWithWhereWithoutOrderInput = {
    where: OrderInvitationScalarWhereInput
    data: XOR<OrderInvitationUpdateManyMutationInput, OrderInvitationUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    update: XOR<OrderStatusHistoryUpdateWithoutOrderInput, OrderStatusHistoryUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    data: XOR<OrderStatusHistoryUpdateWithoutOrderInput, OrderStatusHistoryUncheckedUpdateWithoutOrderInput>
  }

  export type OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput = {
    where: OrderStatusHistoryScalarWhereInput
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderReviewUpsertWithoutOrderInput = {
    update: XOR<OrderReviewUpdateWithoutOrderInput, OrderReviewUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderReviewCreateWithoutOrderInput, OrderReviewUncheckedCreateWithoutOrderInput>
    where?: OrderReviewWhereInput
  }

  export type OrderReviewUpdateToOneWithWhereWithoutOrderInput = {
    where?: OrderReviewWhereInput
    data: XOR<OrderReviewUpdateWithoutOrderInput, OrderReviewUncheckedUpdateWithoutOrderInput>
  }

  export type OrderReviewUpdateWithoutOrderInput = {
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: UserUpdateOneRequiredWithoutOrderReviewsAsClientNestedInput
    provider?: UserUpdateOneRequiredWithoutOrderReviewsAsProviderNestedInput
  }

  export type OrderReviewUncheckedUpdateWithoutOrderInput = {
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUpsertWithWhereUniqueWithoutOrderInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutOrderInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentUpdateManyWithWhereWithoutOrderInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutOrderInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    orderId?: StringFilter<"Payment"> | string
    kind?: StringFilter<"Payment"> | string
    gateway?: StringFilter<"Payment"> | string
    gatewayPaymentId?: StringNullableFilter<"Payment"> | string | null
    status?: StringFilter<"Payment"> | string
    amountCents?: IntFilter<"Payment"> | number
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    approvedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
  }

  export type PaymentEventUpsertWithWhereUniqueWithoutOrderInput = {
    where: PaymentEventWhereUniqueInput
    update: XOR<PaymentEventUpdateWithoutOrderInput, PaymentEventUncheckedUpdateWithoutOrderInput>
    create: XOR<PaymentEventCreateWithoutOrderInput, PaymentEventUncheckedCreateWithoutOrderInput>
  }

  export type PaymentEventUpdateWithWhereUniqueWithoutOrderInput = {
    where: PaymentEventWhereUniqueInput
    data: XOR<PaymentEventUpdateWithoutOrderInput, PaymentEventUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentEventUpdateManyWithWhereWithoutOrderInput = {
    where: PaymentEventScalarWhereInput
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyWithoutOrderInput>
  }

  export type PaymentEventScalarWhereInput = {
    AND?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
    OR?: PaymentEventScalarWhereInput[]
    NOT?: PaymentEventScalarWhereInput | PaymentEventScalarWhereInput[]
    id?: StringFilter<"PaymentEvent"> | string
    paymentId?: StringNullableFilter<"PaymentEvent"> | string | null
    orderId?: StringFilter<"PaymentEvent"> | string
    rawPayload?: JsonFilter<"PaymentEvent">
    receivedAt?: DateTimeFilter<"PaymentEvent"> | Date | string
    signatureOk?: BoolNullableFilter<"PaymentEvent"> | boolean | null
  }

  export type CommissionUpsertWithoutOrderInput = {
    update: XOR<CommissionUpdateWithoutOrderInput, CommissionUncheckedUpdateWithoutOrderInput>
    create: XOR<CommissionCreateWithoutOrderInput, CommissionUncheckedCreateWithoutOrderInput>
    where?: CommissionWhereInput
  }

  export type CommissionUpdateToOneWithWhereWithoutOrderInput = {
    where?: CommissionWhereInput
    data: XOR<CommissionUpdateWithoutOrderInput, CommissionUncheckedUpdateWithoutOrderInput>
  }

  export type CommissionUpdateWithoutOrderInput = {
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommissionUncheckedUpdateWithoutOrderInput = {
    finalPriceCents?: IntFieldUpdateOperationsInput | number
    rateBp?: IntFieldUpdateOperationsInput | number
    minCents?: IntFieldUpdateOperationsInput | number
    maxCents?: IntFieldUpdateOperationsInput | number
    computedCents?: IntFieldUpdateOperationsInput | number
    computedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditUpsertWithWhereUniqueWithoutOrderInput = {
    where: ClientCreditWhereUniqueInput
    update: XOR<ClientCreditUpdateWithoutOrderInput, ClientCreditUncheckedUpdateWithoutOrderInput>
    create: XOR<ClientCreditCreateWithoutOrderInput, ClientCreditUncheckedCreateWithoutOrderInput>
  }

  export type ClientCreditUpdateWithWhereUniqueWithoutOrderInput = {
    where: ClientCreditWhereUniqueInput
    data: XOR<ClientCreditUpdateWithoutOrderInput, ClientCreditUncheckedUpdateWithoutOrderInput>
  }

  export type ClientCreditUpdateManyWithWhereWithoutOrderInput = {
    where: ClientCreditScalarWhereInput
    data: XOR<ClientCreditUpdateManyMutationInput, ClientCreditUncheckedUpdateManyWithoutOrderInput>
  }

  export type ProviderPayoutUpsertWithoutOrderInput = {
    update: XOR<ProviderPayoutUpdateWithoutOrderInput, ProviderPayoutUncheckedUpdateWithoutOrderInput>
    create: XOR<ProviderPayoutCreateWithoutOrderInput, ProviderPayoutUncheckedCreateWithoutOrderInput>
    where?: ProviderPayoutWhereInput
  }

  export type ProviderPayoutUpdateToOneWithWhereWithoutOrderInput = {
    where?: ProviderPayoutWhereInput
    data: XOR<ProviderPayoutUpdateWithoutOrderInput, ProviderPayoutUncheckedUpdateWithoutOrderInput>
  }

  export type ProviderPayoutUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider?: UserUpdateOneRequiredWithoutProviderPayoutsNestedInput
  }

  export type ProviderPayoutUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MatchScoreUpsertWithWhereUniqueWithoutOrderInput = {
    where: MatchScoreWhereUniqueInput
    update: XOR<MatchScoreUpdateWithoutOrderInput, MatchScoreUncheckedUpdateWithoutOrderInput>
    create: XOR<MatchScoreCreateWithoutOrderInput, MatchScoreUncheckedCreateWithoutOrderInput>
  }

  export type MatchScoreUpdateWithWhereUniqueWithoutOrderInput = {
    where: MatchScoreWhereUniqueInput
    data: XOR<MatchScoreUpdateWithoutOrderInput, MatchScoreUncheckedUpdateWithoutOrderInput>
  }

  export type MatchScoreUpdateManyWithWhereWithoutOrderInput = {
    where: MatchScoreScalarWhereInput
    data: XOR<MatchScoreUpdateManyMutationInput, MatchScoreUncheckedUpdateManyWithoutOrderInput>
  }

  export type LlmClassificationUpsertWithWhereUniqueWithoutOrderInput = {
    where: LlmClassificationWhereUniqueInput
    update: XOR<LlmClassificationUpdateWithoutOrderInput, LlmClassificationUncheckedUpdateWithoutOrderInput>
    create: XOR<LlmClassificationCreateWithoutOrderInput, LlmClassificationUncheckedCreateWithoutOrderInput>
  }

  export type LlmClassificationUpdateWithWhereUniqueWithoutOrderInput = {
    where: LlmClassificationWhereUniqueInput
    data: XOR<LlmClassificationUpdateWithoutOrderInput, LlmClassificationUncheckedUpdateWithoutOrderInput>
  }

  export type LlmClassificationUpdateManyWithWhereWithoutOrderInput = {
    where: LlmClassificationScalarWhereInput
    data: XOR<LlmClassificationUpdateManyMutationInput, LlmClassificationUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutOrderSlotsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderSlotsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderSlotsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderSlotsInput, OrderUncheckedCreateWithoutOrderSlotsInput>
  }

  export type OrderInvitationCreateWithoutSlotInput = {
    id?: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutOrderInvitationsInput
    provider: UserCreateNestedOneWithoutOrderInvitationsInput
  }

  export type OrderInvitationUncheckedCreateWithoutSlotInput = {
    id?: string
    orderId: string
    providerId: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationCreateOrConnectWithoutSlotInput = {
    where: OrderInvitationWhereUniqueInput
    create: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput>
  }

  export type OrderInvitationCreateManySlotInputEnvelope = {
    data: OrderInvitationCreateManySlotInput | OrderInvitationCreateManySlotInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutOrderSlotsInput = {
    update: XOR<OrderUpdateWithoutOrderSlotsInput, OrderUncheckedUpdateWithoutOrderSlotsInput>
    create: XOR<OrderCreateWithoutOrderSlotsInput, OrderUncheckedCreateWithoutOrderSlotsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderSlotsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderSlotsInput, OrderUncheckedUpdateWithoutOrderSlotsInput>
  }

  export type OrderUpdateWithoutOrderSlotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderSlotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderInvitationUpsertWithWhereUniqueWithoutSlotInput = {
    where: OrderInvitationWhereUniqueInput
    update: XOR<OrderInvitationUpdateWithoutSlotInput, OrderInvitationUncheckedUpdateWithoutSlotInput>
    create: XOR<OrderInvitationCreateWithoutSlotInput, OrderInvitationUncheckedCreateWithoutSlotInput>
  }

  export type OrderInvitationUpdateWithWhereUniqueWithoutSlotInput = {
    where: OrderInvitationWhereUniqueInput
    data: XOR<OrderInvitationUpdateWithoutSlotInput, OrderInvitationUncheckedUpdateWithoutSlotInput>
  }

  export type OrderInvitationUpdateManyWithWhereWithoutSlotInput = {
    where: OrderInvitationScalarWhereInput
    data: XOR<OrderInvitationUpdateManyMutationInput, OrderInvitationUncheckedUpdateManyWithoutSlotInput>
  }

  export type OrderCreateWithoutOrderCategoriesInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderCategoriesInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderCategoriesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderCategoriesInput, OrderUncheckedCreateWithoutOrderCategoriesInput>
  }

  export type OrderUpsertWithoutOrderCategoriesInput = {
    update: XOR<OrderUpdateWithoutOrderCategoriesInput, OrderUncheckedUpdateWithoutOrderCategoriesInput>
    create: XOR<OrderCreateWithoutOrderCategoriesInput, OrderUncheckedCreateWithoutOrderCategoriesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderCategoriesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderCategoriesInput, OrderUncheckedUpdateWithoutOrderCategoriesInput>
  }

  export type OrderUpdateWithoutOrderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateWithoutOrderInvitationsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderInvitationsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderInvitationsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderInvitationsInput, OrderUncheckedCreateWithoutOrderInvitationsInput>
  }

  export type UserCreateWithoutOrderInvitationsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrderInvitationsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrderInvitationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderInvitationsInput, UserUncheckedCreateWithoutOrderInvitationsInput>
  }

  export type OrderSlotCreateWithoutInvitationsInput = {
    id?: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
    order: OrderCreateNestedOneWithoutOrderSlotsInput
  }

  export type OrderSlotUncheckedCreateWithoutInvitationsInput = {
    id?: string
    orderId: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
  }

  export type OrderSlotCreateOrConnectWithoutInvitationsInput = {
    where: OrderSlotWhereUniqueInput
    create: XOR<OrderSlotCreateWithoutInvitationsInput, OrderSlotUncheckedCreateWithoutInvitationsInput>
  }

  export type OrderUpsertWithoutOrderInvitationsInput = {
    update: XOR<OrderUpdateWithoutOrderInvitationsInput, OrderUncheckedUpdateWithoutOrderInvitationsInput>
    create: XOR<OrderCreateWithoutOrderInvitationsInput, OrderUncheckedCreateWithoutOrderInvitationsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderInvitationsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderInvitationsInput, OrderUncheckedUpdateWithoutOrderInvitationsInput>
  }

  export type OrderUpdateWithoutOrderInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutOrderInvitationsInput = {
    update: XOR<UserUpdateWithoutOrderInvitationsInput, UserUncheckedUpdateWithoutOrderInvitationsInput>
    create: XOR<UserCreateWithoutOrderInvitationsInput, UserUncheckedCreateWithoutOrderInvitationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderInvitationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderInvitationsInput, UserUncheckedUpdateWithoutOrderInvitationsInput>
  }

  export type UserUpdateWithoutOrderInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderSlotUpsertWithoutInvitationsInput = {
    update: XOR<OrderSlotUpdateWithoutInvitationsInput, OrderSlotUncheckedUpdateWithoutInvitationsInput>
    create: XOR<OrderSlotCreateWithoutInvitationsInput, OrderSlotUncheckedCreateWithoutInvitationsInput>
    where?: OrderSlotWhereInput
  }

  export type OrderSlotUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: OrderSlotWhereInput
    data: XOR<OrderSlotUpdateWithoutInvitationsInput, OrderSlotUncheckedUpdateWithoutInvitationsInput>
  }

  export type OrderSlotUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
    order?: OrderUpdateOneRequiredWithoutOrderSlotsNestedInput
  }

  export type OrderSlotUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderCreateWithoutOrderStatusHistoryInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderStatusHistoryInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderStatusHistoryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
  }

  export type UserCreateWithoutOrderStatusHistoryInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrderStatusHistoryInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrderStatusHistoryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderStatusHistoryInput, UserUncheckedCreateWithoutOrderStatusHistoryInput>
  }

  export type OrderUpsertWithoutOrderStatusHistoryInput = {
    update: XOR<OrderUpdateWithoutOrderStatusHistoryInput, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
    create: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderStatusHistoryInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderStatusHistoryInput, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type OrderUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutOrderStatusHistoryInput = {
    update: XOR<UserUpdateWithoutOrderStatusHistoryInput, UserUncheckedUpdateWithoutOrderStatusHistoryInput>
    create: XOR<UserCreateWithoutOrderStatusHistoryInput, UserUncheckedCreateWithoutOrderStatusHistoryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderStatusHistoryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderStatusHistoryInput, UserUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type UserUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderCreateWithoutOrderReviewInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderReviewInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderReviewInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderReviewInput, OrderUncheckedCreateWithoutOrderReviewInput>
  }

  export type UserCreateWithoutOrderReviewsAsClientInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrderReviewsAsClientInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrderReviewsAsClientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderReviewsAsClientInput, UserUncheckedCreateWithoutOrderReviewsAsClientInput>
  }

  export type UserCreateWithoutOrderReviewsAsProviderInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutOrderReviewsAsProviderInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutOrderReviewsAsProviderInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrderReviewsAsProviderInput, UserUncheckedCreateWithoutOrderReviewsAsProviderInput>
  }

  export type OrderUpsertWithoutOrderReviewInput = {
    update: XOR<OrderUpdateWithoutOrderReviewInput, OrderUncheckedUpdateWithoutOrderReviewInput>
    create: XOR<OrderCreateWithoutOrderReviewInput, OrderUncheckedCreateWithoutOrderReviewInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderReviewInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderReviewInput, OrderUncheckedUpdateWithoutOrderReviewInput>
  }

  export type OrderUpdateWithoutOrderReviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderReviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutOrderReviewsAsClientInput = {
    update: XOR<UserUpdateWithoutOrderReviewsAsClientInput, UserUncheckedUpdateWithoutOrderReviewsAsClientInput>
    create: XOR<UserCreateWithoutOrderReviewsAsClientInput, UserUncheckedCreateWithoutOrderReviewsAsClientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderReviewsAsClientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderReviewsAsClientInput, UserUncheckedUpdateWithoutOrderReviewsAsClientInput>
  }

  export type UserUpdateWithoutOrderReviewsAsClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderReviewsAsClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type UserUpsertWithoutOrderReviewsAsProviderInput = {
    update: XOR<UserUpdateWithoutOrderReviewsAsProviderInput, UserUncheckedUpdateWithoutOrderReviewsAsProviderInput>
    create: XOR<UserCreateWithoutOrderReviewsAsProviderInput, UserUncheckedCreateWithoutOrderReviewsAsProviderInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrderReviewsAsProviderInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrderReviewsAsProviderInput, UserUncheckedUpdateWithoutOrderReviewsAsProviderInput>
  }

  export type UserUpdateWithoutOrderReviewsAsProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutOrderReviewsAsProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderCreateWithoutPaymentsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentsInput, OrderUncheckedCreateWithoutPaymentsInput>
  }

  export type PaymentEventCreateWithoutPaymentInput = {
    id?: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
    order: OrderCreateNestedOneWithoutPaymentEventsInput
  }

  export type PaymentEventUncheckedCreateWithoutPaymentInput = {
    id?: string
    orderId: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type PaymentEventCreateOrConnectWithoutPaymentInput = {
    where: PaymentEventWhereUniqueInput
    create: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput>
  }

  export type PaymentEventCreateManyPaymentInputEnvelope = {
    data: PaymentEventCreateManyPaymentInput | PaymentEventCreateManyPaymentInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutPaymentsInput = {
    update: XOR<OrderUpdateWithoutPaymentsInput, OrderUncheckedUpdateWithoutPaymentsInput>
    create: XOR<OrderCreateWithoutPaymentsInput, OrderUncheckedCreateWithoutPaymentsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutPaymentsInput, OrderUncheckedUpdateWithoutPaymentsInput>
  }

  export type OrderUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type PaymentEventUpsertWithWhereUniqueWithoutPaymentInput = {
    where: PaymentEventWhereUniqueInput
    update: XOR<PaymentEventUpdateWithoutPaymentInput, PaymentEventUncheckedUpdateWithoutPaymentInput>
    create: XOR<PaymentEventCreateWithoutPaymentInput, PaymentEventUncheckedCreateWithoutPaymentInput>
  }

  export type PaymentEventUpdateWithWhereUniqueWithoutPaymentInput = {
    where: PaymentEventWhereUniqueInput
    data: XOR<PaymentEventUpdateWithoutPaymentInput, PaymentEventUncheckedUpdateWithoutPaymentInput>
  }

  export type PaymentEventUpdateManyWithWhereWithoutPaymentInput = {
    where: PaymentEventScalarWhereInput
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyWithoutPaymentInput>
  }

  export type PaymentCreateWithoutPaymentEventsInput = {
    id?: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
    order: OrderCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutPaymentEventsInput = {
    id?: string
    orderId: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
  }

  export type PaymentCreateOrConnectWithoutPaymentEventsInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutPaymentEventsInput, PaymentUncheckedCreateWithoutPaymentEventsInput>
  }

  export type OrderCreateWithoutPaymentEventsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentEventsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentEventsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentEventsInput, OrderUncheckedCreateWithoutPaymentEventsInput>
  }

  export type PaymentUpsertWithoutPaymentEventsInput = {
    update: XOR<PaymentUpdateWithoutPaymentEventsInput, PaymentUncheckedUpdateWithoutPaymentEventsInput>
    create: XOR<PaymentCreateWithoutPaymentEventsInput, PaymentUncheckedCreateWithoutPaymentEventsInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutPaymentEventsInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutPaymentEventsInput, PaymentUncheckedUpdateWithoutPaymentEventsInput>
  }

  export type PaymentUpdateWithoutPaymentEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutPaymentEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderUpsertWithoutPaymentEventsInput = {
    update: XOR<OrderUpdateWithoutPaymentEventsInput, OrderUncheckedUpdateWithoutPaymentEventsInput>
    create: XOR<OrderCreateWithoutPaymentEventsInput, OrderUncheckedCreateWithoutPaymentEventsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutPaymentEventsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutPaymentEventsInput, OrderUncheckedUpdateWithoutPaymentEventsInput>
  }

  export type OrderUpdateWithoutPaymentEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateWithoutCommissionInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCommissionInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCommissionInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCommissionInput, OrderUncheckedCreateWithoutCommissionInput>
  }

  export type OrderUpsertWithoutCommissionInput = {
    update: XOR<OrderUpdateWithoutCommissionInput, OrderUncheckedUpdateWithoutCommissionInput>
    create: XOR<OrderCreateWithoutCommissionInput, OrderUncheckedCreateWithoutCommissionInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutCommissionInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutCommissionInput, OrderUncheckedUpdateWithoutCommissionInput>
  }

  export type OrderUpdateWithoutCommissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCommissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserCreateWithoutClientCreditsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutClientCreditsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutClientCreditsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientCreditsInput, UserUncheckedCreateWithoutClientCreditsInput>
  }

  export type OrderCreateWithoutClientCreditsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutClientCreditsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutClientCreditsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutClientCreditsInput, OrderUncheckedCreateWithoutClientCreditsInput>
  }

  export type UserUpsertWithoutClientCreditsInput = {
    update: XOR<UserUpdateWithoutClientCreditsInput, UserUncheckedUpdateWithoutClientCreditsInput>
    create: XOR<UserCreateWithoutClientCreditsInput, UserUncheckedCreateWithoutClientCreditsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientCreditsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientCreditsInput, UserUncheckedUpdateWithoutClientCreditsInput>
  }

  export type UserUpdateWithoutClientCreditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutClientCreditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderUpsertWithoutClientCreditsInput = {
    update: XOR<OrderUpdateWithoutClientCreditsInput, OrderUncheckedUpdateWithoutClientCreditsInput>
    create: XOR<OrderCreateWithoutClientCreditsInput, OrderUncheckedCreateWithoutClientCreditsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutClientCreditsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutClientCreditsInput, OrderUncheckedUpdateWithoutClientCreditsInput>
  }

  export type OrderUpdateWithoutClientCreditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutClientCreditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateWithoutProviderPayoutInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutProviderPayoutInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutProviderPayoutInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutProviderPayoutInput, OrderUncheckedCreateWithoutProviderPayoutInput>
  }

  export type UserCreateWithoutProviderPayoutsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreCreateNestedManyWithoutProviderInput
  }

  export type UserUncheckedCreateWithoutProviderPayoutsInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutProviderInput
  }

  export type UserCreateOrConnectWithoutProviderPayoutsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProviderPayoutsInput, UserUncheckedCreateWithoutProviderPayoutsInput>
  }

  export type OrderUpsertWithoutProviderPayoutInput = {
    update: XOR<OrderUpdateWithoutProviderPayoutInput, OrderUncheckedUpdateWithoutProviderPayoutInput>
    create: XOR<OrderCreateWithoutProviderPayoutInput, OrderUncheckedCreateWithoutProviderPayoutInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutProviderPayoutInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutProviderPayoutInput, OrderUncheckedUpdateWithoutProviderPayoutInput>
  }

  export type OrderUpdateWithoutProviderPayoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutProviderPayoutInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutProviderPayoutsInput = {
    update: XOR<UserUpdateWithoutProviderPayoutsInput, UserUncheckedUpdateWithoutProviderPayoutsInput>
    create: XOR<UserCreateWithoutProviderPayoutsInput, UserUncheckedCreateWithoutProviderPayoutsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProviderPayoutsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProviderPayoutsInput, UserUncheckedUpdateWithoutProviderPayoutsInput>
  }

  export type UserUpdateWithoutProviderPayoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUpdateManyWithoutProviderNestedInput
  }

  export type UserUncheckedUpdateWithoutProviderPayoutsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutProviderNestedInput
  }

  export type OrderCreateWithoutMatchScoresInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    llmClassifications?: LlmClassificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutMatchScoresInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    llmClassifications?: LlmClassificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutMatchScoresInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutMatchScoresInput, OrderUncheckedCreateWithoutMatchScoresInput>
  }

  export type UserCreateWithoutMatchScoresInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentCreateNestedManyWithoutUserInput
    addresses?: AddressCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutByUserInput
  }

  export type UserUncheckedCreateWithoutMatchScoresInput = {
    id?: string
    name: string
    email?: string | null
    emailVerified?: boolean
    image?: string | null
    role?: string | null
    phoneE164?: string | null
    whatsappId?: string | null
    cpf?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userRoles?: UserRoleAssignmentUncheckedCreateNestedManyWithoutUserInput
    addresses?: AddressUncheckedCreateNestedManyWithoutUserInput
    providerRequests?: ProviderRequestUncheckedCreateNestedManyWithoutUserInput
    reviewedRequests?: ProviderRequestUncheckedCreateNestedManyWithoutReviewedByUserInput
    providerProfile?: ProviderProfileUncheckedCreateNestedOneWithoutUserInput
    providerAvailability?: ProviderAvailabilityUncheckedCreateNestedManyWithoutProviderInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutProviderInput
    providerPayouts?: ProviderPayoutUncheckedCreateNestedManyWithoutProviderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutUserInput
    ordersAsClient?: OrderUncheckedCreateNestedManyWithoutClientInput
    ordersAsProvider?: OrderUncheckedCreateNestedManyWithoutProviderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutProviderInput
    orderReviewsAsClient?: OrderReviewUncheckedCreateNestedManyWithoutClientInput
    orderReviewsAsProvider?: OrderReviewUncheckedCreateNestedManyWithoutProviderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutByUserInput
  }

  export type UserCreateOrConnectWithoutMatchScoresInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMatchScoresInput, UserUncheckedCreateWithoutMatchScoresInput>
  }

  export type OrderUpsertWithoutMatchScoresInput = {
    update: XOR<OrderUpdateWithoutMatchScoresInput, OrderUncheckedUpdateWithoutMatchScoresInput>
    create: XOR<OrderCreateWithoutMatchScoresInput, OrderUncheckedCreateWithoutMatchScoresInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutMatchScoresInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutMatchScoresInput, OrderUncheckedUpdateWithoutMatchScoresInput>
  }

  export type OrderUpdateWithoutMatchScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutMatchScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutMatchScoresInput = {
    update: XOR<UserUpdateWithoutMatchScoresInput, UserUncheckedUpdateWithoutMatchScoresInput>
    create: XOR<UserCreateWithoutMatchScoresInput, UserUncheckedCreateWithoutMatchScoresInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMatchScoresInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMatchScoresInput, UserUncheckedUpdateWithoutMatchScoresInput>
  }

  export type UserUpdateWithoutMatchScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUpdateManyWithoutUserNestedInput
    addresses?: AddressUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMatchScoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    phoneE164?: NullableStringFieldUpdateOperationsInput | string | null
    whatsappId?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userRoles?: UserRoleAssignmentUncheckedUpdateManyWithoutUserNestedInput
    addresses?: AddressUncheckedUpdateManyWithoutUserNestedInput
    providerRequests?: ProviderRequestUncheckedUpdateManyWithoutUserNestedInput
    reviewedRequests?: ProviderRequestUncheckedUpdateManyWithoutReviewedByUserNestedInput
    providerProfile?: ProviderProfileUncheckedUpdateOneWithoutUserNestedInput
    providerAvailability?: ProviderAvailabilityUncheckedUpdateManyWithoutProviderNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutProviderNestedInput
    providerPayouts?: ProviderPayoutUncheckedUpdateManyWithoutProviderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutUserNestedInput
    ordersAsClient?: OrderUncheckedUpdateManyWithoutClientNestedInput
    ordersAsProvider?: OrderUncheckedUpdateManyWithoutProviderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutProviderNestedInput
    orderReviewsAsClient?: OrderReviewUncheckedUpdateManyWithoutClientNestedInput
    orderReviewsAsProvider?: OrderReviewUncheckedUpdateManyWithoutProviderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutByUserNestedInput
  }

  export type OrderCreateWithoutLlmClassificationsInput = {
    id?: string
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    client: UserCreateNestedOneWithoutOrdersAsClientInput
    provider?: UserCreateNestedOneWithoutOrdersAsProviderInput
    address?: AddressCreateNestedOneWithoutOrdersInput
    category?: CategoryCreateNestedOneWithoutOrdersInput
    orderSlots?: OrderSlotCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewCreateNestedOneWithoutOrderInput
    payments?: PaymentCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventCreateNestedManyWithoutOrderInput
    commission?: CommissionCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutLlmClassificationsInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    orderSlots?: OrderSlotUncheckedCreateNestedManyWithoutOrderInput
    orderCategories?: OrderCategoryUncheckedCreateNestedManyWithoutOrderInput
    orderInvitations?: OrderInvitationUncheckedCreateNestedManyWithoutOrderInput
    orderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    orderReview?: OrderReviewUncheckedCreateNestedOneWithoutOrderInput
    payments?: PaymentUncheckedCreateNestedManyWithoutOrderInput
    paymentEvents?: PaymentEventUncheckedCreateNestedManyWithoutOrderInput
    commission?: CommissionUncheckedCreateNestedOneWithoutOrderInput
    clientCredits?: ClientCreditUncheckedCreateNestedManyWithoutOrderInput
    providerPayout?: ProviderPayoutUncheckedCreateNestedOneWithoutOrderInput
    matchScores?: MatchScoreUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutLlmClassificationsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutLlmClassificationsInput, OrderUncheckedCreateWithoutLlmClassificationsInput>
  }

  export type CategoryCreateWithoutLlmClassificationsInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderCreateNestedManyWithoutCategoryInput
    providerCategories?: ProviderCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutLlmClassificationsInput = {
    id?: string
    name: string
    slug?: string | null
    active?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutCategoryInput
    providerCategories?: ProviderCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutLlmClassificationsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutLlmClassificationsInput, CategoryUncheckedCreateWithoutLlmClassificationsInput>
  }

  export type OrderUpsertWithoutLlmClassificationsInput = {
    update: XOR<OrderUpdateWithoutLlmClassificationsInput, OrderUncheckedUpdateWithoutLlmClassificationsInput>
    create: XOR<OrderCreateWithoutLlmClassificationsInput, OrderUncheckedCreateWithoutLlmClassificationsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutLlmClassificationsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutLlmClassificationsInput, OrderUncheckedUpdateWithoutLlmClassificationsInput>
  }

  export type OrderUpdateWithoutLlmClassificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutLlmClassificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type CategoryUpsertWithoutLlmClassificationsInput = {
    update: XOR<CategoryUpdateWithoutLlmClassificationsInput, CategoryUncheckedUpdateWithoutLlmClassificationsInput>
    create: XOR<CategoryCreateWithoutLlmClassificationsInput, CategoryUncheckedCreateWithoutLlmClassificationsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutLlmClassificationsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutLlmClassificationsInput, CategoryUncheckedUpdateWithoutLlmClassificationsInput>
  }

  export type CategoryUpdateWithoutLlmClassificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutCategoryNestedInput
    providerCategories?: ProviderCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutLlmClassificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutCategoryNestedInput
    providerCategories?: ProviderCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type AccountCreateManyUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateManyUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type UserRoleAssignmentCreateManyUserInput = {
    id?: string
    roleId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AddressCreateManyUserInput = {
    id?: string
    label?: string | null
    cep?: string | null
    street?: string | null
    number?: string | null
    complement?: string | null
    neighborhood?: string | null
    city?: string | null
    state?: string | null
    lat?: number | null
    lon?: number | null
    createdAt?: Date | string
  }

  export type ProviderRequestCreateManyUserInput = {
    id?: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderRequestCreateManyReviewedByUserInput = {
    id?: string
    userId: string
    services?: NullableJsonNullValueInput | InputJsonValue
    description: string
    experience: string
    phone: string
    cep?: string | null
    address: string
    documentNumber: string
    portfolioLinks?: string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProviderRequestStatus
    rejectionReason?: string | null
    reviewedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderAvailabilityCreateManyProviderInput = {
    id?: string
    weekday: number
    startTime: string
    endTime: string
  }

  export type ProviderCategoryCreateManyProviderInput = {
    id?: string
    categoryId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type ProviderPayoutCreateManyProviderInput = {
    id?: string
    orderId?: string | null
    grossCents: number
    commissionCents: number
    netCents: number
    status: string
    paidAt?: Date | string | null
  }

  export type ClientCreditCreateManyUserInput = {
    id?: string
    orderId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type OrderCreateManyClientInput = {
    id?: string
    providerId?: string | null
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyProviderInput = {
    id?: string
    clientId: string
    addressId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderInvitationCreateManyProviderInput = {
    id?: string
    orderId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderReviewCreateManyClientInput = {
    orderId: string
    providerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderReviewCreateManyProviderInput = {
    orderId: string
    clientId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type OrderStatusHistoryCreateManyByUserInput = {
    id?: string
    orderId: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
  }

  export type MatchScoreCreateManyProviderInput = {
    id?: string
    orderId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserRoleAssignmentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleAssignmentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    roleId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: OrderUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    street?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    complement?: NullableStringFieldUpdateOperationsInput | string | null
    neighborhood?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lon?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedByUser?: UserUpdateOneWithoutReviewedRequestsNestedInput
  }

  export type ProviderRequestUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestUpdateWithoutReviewedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProviderRequestsNestedInput
  }

  export type ProviderRequestUncheckedUpdateWithoutReviewedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderRequestUncheckedUpdateManyWithoutReviewedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    services?: NullableJsonNullValueInput | InputJsonValue
    description?: StringFieldUpdateOperationsInput | string
    experience?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    portfolioLinks?: NullableStringFieldUpdateOperationsInput | string | null
    portfolioLinksJson?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProviderRequestStatusFieldUpdateOperationsInput | $Enums.ProviderRequestStatus
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderAvailabilityUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderAvailabilityUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderAvailabilityUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    weekday?: IntFieldUpdateOperationsInput | number
    startTime?: StringFieldUpdateOperationsInput | string
    endTime?: StringFieldUpdateOperationsInput | string
  }

  export type ProviderCategoryUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    category?: CategoryUpdateOneRequiredWithoutProviderCategoriesNestedInput
  }

  export type ProviderCategoryUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProviderCategoryUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProviderPayoutUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneWithoutProviderPayoutNestedInput
  }

  export type ProviderPayoutUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProviderPayoutUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    grossCents?: IntFieldUpdateOperationsInput | number
    commissionCents?: IntFieldUpdateOperationsInput | number
    netCents?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientCreditUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutClientCreditsNestedInput
  }

  export type ClientCreditUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderInvitationUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutOrderInvitationsNestedInput
    slot?: OrderSlotUpdateOneWithoutInvitationsNestedInput
  }

  export type OrderInvitationUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderReviewUpdateWithoutClientInput = {
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutOrderReviewNestedInput
    provider?: UserUpdateOneRequiredWithoutOrderReviewsAsProviderNestedInput
  }

  export type OrderReviewUncheckedUpdateWithoutClientInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderReviewUncheckedUpdateManyWithoutClientInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderReviewUpdateWithoutProviderInput = {
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order?: OrderUpdateOneRequiredWithoutOrderReviewNestedInput
    client?: UserUpdateOneRequiredWithoutOrderReviewsAsClientNestedInput
  }

  export type OrderReviewUncheckedUpdateWithoutProviderInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderReviewUncheckedUpdateManyWithoutProviderInput = {
    orderId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrderStatusHistoryUpdateWithoutByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutOrderStatusHistoryNestedInput
  }

  export type OrderStatusHistoryUncheckedUpdateWithoutByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutMatchScoresNestedInput
  }

  export type MatchScoreUncheckedUpdateWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreUncheckedUpdateManyWithoutProviderInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentCreateManyRoleInput = {
    id?: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserRoleAssignmentUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleAssignmentUncheckedUpdateWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserRoleAssignmentUncheckedUpdateManyWithoutRoleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateManyAddressInput = {
    id?: string
    clientId: string
    providerId?: string | null
    categoryId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    category?: CategoryUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateManyCategoryInput = {
    id?: string
    clientId: string
    providerId?: string | null
    addressId?: string | null
    description?: string | null
    status: string
    depositMethod?: string
    depositBaseAvgCents?: number | null
    depositCents?: number
    slotStart?: Date | string | null
    slotEnd?: Date | string | null
    finalPriceCents?: number | null
    reviewStatus?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProviderCategoryCreateManyCategoryInput = {
    id?: string
    providerId: string
    minPriceCents: number
    active?: boolean
    updatedAt?: Date | string
    levelWeight?: number | null
    expWeight?: number | null
    score?: Decimal | DecimalJsLike | number | string | null
    isAvailable?: boolean | null
  }

  export type LlmClassificationCreateManyCategoryInput = {
    id?: string
    orderId: string
    inputText?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type OrderUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: UserUpdateOneRequiredWithoutOrdersAsClientNestedInput
    provider?: UserUpdateOneWithoutOrdersAsProviderNestedInput
    address?: AddressUpdateOneWithoutOrdersNestedInput
    orderSlots?: OrderSlotUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUpdateOneWithoutOrderNestedInput
    payments?: PaymentUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUpdateManyWithoutOrderNestedInput
    commission?: CommissionUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderSlots?: OrderSlotUncheckedUpdateManyWithoutOrderNestedInput
    orderCategories?: OrderCategoryUncheckedUpdateManyWithoutOrderNestedInput
    orderInvitations?: OrderInvitationUncheckedUpdateManyWithoutOrderNestedInput
    orderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    orderReview?: OrderReviewUncheckedUpdateOneWithoutOrderNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutOrderNestedInput
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutOrderNestedInput
    commission?: CommissionUncheckedUpdateOneWithoutOrderNestedInput
    clientCredits?: ClientCreditUncheckedUpdateManyWithoutOrderNestedInput
    providerPayout?: ProviderPayoutUncheckedUpdateOneWithoutOrderNestedInput
    matchScores?: MatchScoreUncheckedUpdateManyWithoutOrderNestedInput
    llmClassifications?: LlmClassificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    providerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    depositMethod?: StringFieldUpdateOperationsInput | string
    depositBaseAvgCents?: NullableIntFieldUpdateOperationsInput | number | null
    depositCents?: IntFieldUpdateOperationsInput | number
    slotStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    slotEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalPriceCents?: NullableIntFieldUpdateOperationsInput | number | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProviderCategoryUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    provider?: UserUpdateOneRequiredWithoutProviderCategoriesNestedInput
  }

  export type ProviderCategoryUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProviderCategoryUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    minPriceCents?: IntFieldUpdateOperationsInput | number
    active?: BoolFieldUpdateOperationsInput | boolean
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    levelWeight?: NullableIntFieldUpdateOperationsInput | number | null
    expWeight?: NullableIntFieldUpdateOperationsInput | number | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAvailable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type LlmClassificationUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutLlmClassificationsNestedInput
  }

  export type LlmClassificationUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderSlotCreateManyOrderInput = {
    id?: string
    label?: string | null
    startAt: Date | string
    endAt: Date | string
    origin: string
    chosen?: boolean
  }

  export type OrderCategoryCreateManyOrderInput = {
    categorySlug: string
    confidence: Decimal | DecimalJsLike | number | string
    rank: number
  }

  export type OrderInvitationCreateManyOrderInput = {
    id?: string
    providerId: string
    slotId?: string | null
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderStatusHistoryCreateManyOrderInput = {
    id?: string
    oldStatus?: string | null
    newStatus: string
    at?: Date | string
    byUserId?: string | null
  }

  export type PaymentCreateManyOrderInput = {
    id?: string
    kind: string
    gateway?: string
    gatewayPaymentId?: string | null
    status: string
    amountCents: number
    createdAt?: Date | string
    approvedAt?: Date | string | null
  }

  export type PaymentEventCreateManyOrderInput = {
    id?: string
    paymentId?: string | null
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type ClientCreditCreateManyOrderInput = {
    id?: string
    userId: string
    amountCents: number
    expiresAt: Date | string
    usedCents?: number
    createdAt?: Date | string
  }

  export type MatchScoreCreateManyOrderInput = {
    id?: string
    providerId: string
    distanceKm?: Decimal | DecimalJsLike | number | string | null
    ratingNorm?: Decimal | DecimalJsLike | number | string | null
    acceptRate?: Decimal | DecimalJsLike | number | string | null
    responseFast?: Decimal | DecimalJsLike | number | string | null
    reliability?: Decimal | DecimalJsLike | number | string | null
    finalScore?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type LlmClassificationCreateManyOrderInput = {
    id?: string
    inputText?: string | null
    categoryId?: string | null
    confidence?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
  }

  export type OrderSlotUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
    invitations?: OrderInvitationUpdateManyWithoutSlotNestedInput
  }

  export type OrderSlotUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
    invitations?: OrderInvitationUncheckedUpdateManyWithoutSlotNestedInput
  }

  export type OrderSlotUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origin?: StringFieldUpdateOperationsInput | string
    chosen?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderCategoryUpdateWithoutOrderInput = {
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCategoryUncheckedUpdateWithoutOrderInput = {
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderCategoryUncheckedUpdateManyWithoutOrderInput = {
    categorySlug?: StringFieldUpdateOperationsInput | string
    confidence?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rank?: IntFieldUpdateOperationsInput | number
  }

  export type OrderInvitationUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    provider?: UserUpdateOneRequiredWithoutOrderInvitationsNestedInput
    slot?: OrderSlotUpdateOneWithoutInvitationsNestedInput
  }

  export type OrderInvitationUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    slotId?: NullableStringFieldUpdateOperationsInput | string | null
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderStatusHistoryUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    byUser?: UserUpdateOneWithoutOrderStatusHistoryNestedInput
  }

  export type OrderStatusHistoryUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    byUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldStatus?: NullableStringFieldUpdateOperationsInput | string | null
    newStatus?: StringFieldUpdateOperationsInput | string
    at?: DateTimeFieldUpdateOperationsInput | Date | string
    byUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentEvents?: PaymentEventUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentEvents?: PaymentEventUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    kind?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    gatewayPaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentEventUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
    payment?: PaymentUpdateOneWithoutPaymentEventsNestedInput
  }

  export type PaymentEventUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PaymentEventUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ClientCreditUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutClientCreditsNestedInput
  }

  export type ClientCreditUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreditUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amountCents?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usedCents?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    provider?: UserUpdateOneRequiredWithoutMatchScoresNestedInput
  }

  export type MatchScoreUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatchScoreUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    distanceKm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ratingNorm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    responseFast?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reliability?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneWithoutLlmClassificationsNestedInput
  }

  export type LlmClassificationUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LlmClassificationUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    inputText?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    confidence?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderInvitationCreateManySlotInput = {
    id?: string
    orderId: string
    providerId: string
    score?: Decimal | DecimalJsLike | number | string | null
    sentAt?: Date | string
    respondedAt?: Date | string | null
    response?: string | null
    waMessageId?: string | null
    waRemoteJid?: string | null
    categorySlug?: string | null
    status?: string | null
    expiresAt?: Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUpdateWithoutSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutOrderInvitationsNestedInput
    provider?: UserUpdateOneRequiredWithoutOrderInvitationsNestedInput
  }

  export type OrderInvitationUncheckedUpdateWithoutSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderInvitationUncheckedUpdateManyWithoutSlotInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    score?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    response?: NullableStringFieldUpdateOperationsInput | string | null
    waMessageId?: NullableStringFieldUpdateOperationsInput | string | null
    waRemoteJid?: NullableStringFieldUpdateOperationsInput | string | null
    categorySlug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type PaymentEventCreateManyPaymentInput = {
    id?: string
    orderId: string
    rawPayload: JsonNullValueInput | InputJsonValue
    receivedAt?: Date | string
    signatureOk?: boolean | null
  }

  export type PaymentEventUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
    order?: OrderUpdateOneRequiredWithoutPaymentEventsNestedInput
  }

  export type PaymentEventUncheckedUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PaymentEventUncheckedUpdateManyWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    rawPayload?: JsonNullValueInput | InputJsonValue
    receivedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    signatureOk?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}