
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  phoneE164: 'phoneE164',
  whatsappId: 'whatsappId',
  cpf: 'cpf',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleAssignmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProviderRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  services: 'services',
  description: 'description',
  experience: 'experience',
  phone: 'phone',
  cep: 'cep',
  address: 'address',
  documentNumber: 'documentNumber',
  portfolioLinks: 'portfolioLinks',
  portfolioLinksJson: 'portfolioLinksJson',
  status: 'status',
  rejectionReason: 'rejectionReason',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  label: 'label',
  cep: 'cep',
  street: 'street',
  number: 'number',
  complement: 'complement',
  neighborhood: 'neighborhood',
  city: 'city',
  state: 'state',
  lat: 'lat',
  lon: 'lon',
  createdAt: 'createdAt'
};

exports.Prisma.ProviderProfileScalarFieldEnum = {
  userId: 'userId',
  bio: 'bio',
  radiusKm: 'radiusKm',
  avgRating: 'avgRating',
  totalReviews: 'totalReviews',
  acceptRate30d: 'acceptRate30d',
  responseP50S: 'responseP50S',
  noShow30d: 'noShow30d'
};

exports.Prisma.ProviderAvailabilityScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  weekday: 'weekday',
  startTime: 'startTime',
  endTime: 'endTime'
};

exports.Prisma.ProviderCategoryScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  categoryId: 'categoryId',
  minPriceCents: 'minPriceCents',
  active: 'active',
  updatedAt: 'updatedAt',
  levelWeight: 'levelWeight',
  expWeight: 'expWeight',
  score: 'score',
  isAvailable: 'isAvailable'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  active: 'active'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  providerId: 'providerId',
  addressId: 'addressId',
  categoryId: 'categoryId',
  description: 'description',
  status: 'status',
  depositMethod: 'depositMethod',
  depositBaseAvgCents: 'depositBaseAvgCents',
  depositCents: 'depositCents',
  slotStart: 'slotStart',
  slotEnd: 'slotEnd',
  finalPriceCents: 'finalPriceCents',
  reviewStatus: 'reviewStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderSlotScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  label: 'label',
  startAt: 'startAt',
  endAt: 'endAt',
  origin: 'origin',
  chosen: 'chosen'
};

exports.Prisma.OrderCategoryScalarFieldEnum = {
  orderId: 'orderId',
  categorySlug: 'categorySlug',
  confidence: 'confidence',
  rank: 'rank'
};

exports.Prisma.OrderInvitationScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  providerId: 'providerId',
  slotId: 'slotId',
  score: 'score',
  sentAt: 'sentAt',
  respondedAt: 'respondedAt',
  response: 'response',
  waMessageId: 'waMessageId',
  waRemoteJid: 'waRemoteJid',
  categorySlug: 'categorySlug',
  status: 'status',
  expiresAt: 'expiresAt',
  meta: 'meta'
};

exports.Prisma.OrderStatusHistoryScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  oldStatus: 'oldStatus',
  newStatus: 'newStatus',
  at: 'at',
  byUserId: 'byUserId'
};

exports.Prisma.OrderReviewScalarFieldEnum = {
  orderId: 'orderId',
  clientId: 'clientId',
  providerId: 'providerId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  kind: 'kind',
  gateway: 'gateway',
  gatewayPaymentId: 'gatewayPaymentId',
  status: 'status',
  amountCents: 'amountCents',
  createdAt: 'createdAt',
  approvedAt: 'approvedAt'
};

exports.Prisma.PaymentEventScalarFieldEnum = {
  id: 'id',
  paymentId: 'paymentId',
  orderId: 'orderId',
  rawPayload: 'rawPayload',
  receivedAt: 'receivedAt',
  signatureOk: 'signatureOk'
};

exports.Prisma.CommissionScalarFieldEnum = {
  orderId: 'orderId',
  finalPriceCents: 'finalPriceCents',
  rateBp: 'rateBp',
  minCents: 'minCents',
  maxCents: 'maxCents',
  computedCents: 'computedCents',
  computedAt: 'computedAt'
};

exports.Prisma.ClientCreditScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  orderId: 'orderId',
  amountCents: 'amountCents',
  expiresAt: 'expiresAt',
  usedCents: 'usedCents',
  createdAt: 'createdAt'
};

exports.Prisma.ProviderPayoutScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  providerId: 'providerId',
  grossCents: 'grossCents',
  commissionCents: 'commissionCents',
  netCents: 'netCents',
  status: 'status',
  paidAt: 'paidAt'
};

exports.Prisma.MatchScoreScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  providerId: 'providerId',
  distanceKm: 'distanceKm',
  ratingNorm: 'ratingNorm',
  acceptRate: 'acceptRate',
  responseFast: 'responseFast',
  reliability: 'reliability',
  finalScore: 'finalScore',
  createdAt: 'createdAt'
};

exports.Prisma.LlmClassificationScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  inputText: 'inputText',
  categoryId: 'categoryId',
  confidence: 'confidence',
  createdAt: 'createdAt'
};

exports.Prisma.RefusalRuleScalarFieldEnum = {
  code: 'code',
  clientCreditPct: 'clientCreditPct',
  providerPct: 'providerPct',
  platformPct: 'platformPct'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMINISTRADOR: 'ADMINISTRADOR',
  PRESTADOR: 'PRESTADOR',
  CLIENTE: 'CLIENTE'
};

exports.ProviderRequestStatus = exports.$Enums.ProviderRequestStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRoleAssignment: 'UserRoleAssignment',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  ProviderRequest: 'ProviderRequest',
  Address: 'Address',
  ProviderProfile: 'ProviderProfile',
  ProviderAvailability: 'ProviderAvailability',
  ProviderCategory: 'ProviderCategory',
  Category: 'Category',
  Order: 'Order',
  OrderSlot: 'OrderSlot',
  OrderCategory: 'OrderCategory',
  OrderInvitation: 'OrderInvitation',
  OrderStatusHistory: 'OrderStatusHistory',
  OrderReview: 'OrderReview',
  Payment: 'Payment',
  PaymentEvent: 'PaymentEvent',
  Commission: 'Commission',
  ClientCredit: 'ClientCredit',
  ProviderPayout: 'ProviderPayout',
  MatchScore: 'MatchScore',
  LlmClassification: 'LlmClassification',
  RefusalRule: 'RefusalRule'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\src\\flicapp\\flicapp-front\\src\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\src\\flicapp\\flicapp-front\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// =============================================================================\n// AUTH MODELS\n// =============================================================================\n\nmodel User {\n  id            String  @id @default(dbgenerated(\"gen_random_uuid()\"))\n  name          String\n  email         String? @unique\n  emailVerified Boolean @default(false)\n  image         String?\n\n  // PostgreSQL users table fields\n  role       String? // ADMINISTRADOR, PRESTADOR, CLIENTE\n  phoneE164  String? @unique\n  whatsappId String?\n  cpf        String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  // Auth relations\n  accounts  Account[]\n  sessions  Session[]\n  userRoles UserRoleAssignment[]\n\n  // PostgreSQL relations\n  addresses            Address[]\n  providerRequests     ProviderRequest[]      @relation(\"UserProviderRequests\")\n  reviewedRequests     ProviderRequest[]      @relation(\"ReviewedProviderRequests\")\n  providerProfile      ProviderProfile?\n  providerAvailability ProviderAvailability[]\n  providerCategories   ProviderCategory[]\n  providerPayouts      ProviderPayout[]\n  clientCredits        ClientCredit[]\n\n  // Order relations\n  ordersAsClient         Order[]              @relation(\"OrderClient\")\n  ordersAsProvider       Order[]              @relation(\"OrderProvider\")\n  orderInvitations       OrderInvitation[]\n  orderReviewsAsClient   OrderReview[]        @relation(\"OrderReviewClient\")\n  orderReviewsAsProvider OrderReview[]        @relation(\"OrderReviewProvider\")\n  orderStatusHistory     OrderStatusHistory[]\n  matchScores            MatchScore[]\n\n  @@map(\"users\")\n}\n\nmodel Role {\n  id        String               @id @default(cuid())\n  name      UserRole             @unique\n  createdAt DateTime             @default(now())\n  updatedAt DateTime             @updatedAt\n  userRoles UserRoleAssignment[]\n\n  @@map(\"role\")\n}\n\nmodel UserRoleAssignment {\n  id        String   @id @default(cuid())\n  userId    String\n  roleId    String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, roleId])\n  @@map(\"user_role_assignment\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  @@map(\"verification\")\n}\n\nmodel ProviderRequest {\n  id                 String                @id @default(cuid())\n  userId             String\n  user               User                  @relation(\"UserProviderRequests\", fields: [userId], references: [id], onDelete: Cascade)\n  services           Json? // Array of service selections with experience levels\n  description        String\n  experience         String\n  phone              String\n  cep                String? // CEP field for address lookup\n  address            String\n  documentNumber     String\n  portfolioLinks     String? // Legacy field - will be migrated to JSON later\n  portfolioLinksJson Json? // New JSON field for portfolio links with titles and URLs\n  status             ProviderRequestStatus @default(PENDING)\n  rejectionReason    String? // Motivo da rejeição\n  reviewedBy         String?\n  reviewedByUser     User?                 @relation(\"ReviewedProviderRequests\", fields: [reviewedBy], references: [id])\n  reviewedAt         DateTime?\n  createdAt          DateTime              @default(now())\n  updatedAt          DateTime              @updatedAt\n\n  @@map(\"provider_request\")\n}\n\n// =============================================================================\n// USER & PROVIDER DOMAIN\n// =============================================================================\n\nmodel Address {\n  id           String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  userId       String?\n  label        String?\n  cep          String?\n  street       String?\n  number       String?\n  complement   String?\n  neighborhood String?\n  city         String?\n  state        String?\n  lat          Float?\n  lon          Float?\n  createdAt    DateTime @default(now())\n\n  user   User?   @relation(fields: [userId], references: [id])\n  orders Order[]\n\n  @@index([lon, lat])\n  @@map(\"addresses\")\n}\n\nmodel ProviderProfile {\n  userId        String  @id @default(dbgenerated(\"gen_random_uuid()\"))\n  bio           String?\n  radiusKm      Decimal @default(10)\n  avgRating     Decimal @default(0)\n  totalReviews  Int     @default(0)\n  acceptRate30d Decimal @default(0)\n  responseP50S  Int     @default(0)\n  noShow30d     Int     @default(0)\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@map(\"provider_profiles\")\n}\n\nmodel ProviderAvailability {\n  id         String @id @default(dbgenerated(\"gen_random_uuid()\"))\n  providerId String\n  weekday    Int // 0-6 (Sunday-Saturday)\n  startTime  String // Time format\n  endTime    String // Time format\n\n  provider User @relation(fields: [providerId], references: [id])\n\n  @@unique([providerId, weekday, startTime, endTime])\n  @@map(\"provider_availability\")\n}\n\nmodel ProviderCategory {\n  id            String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  providerId    String\n  categoryId    String\n  minPriceCents Int\n  active        Boolean  @default(true)\n  updatedAt     DateTime @default(now())\n  levelWeight   Int?     @default(1)\n  expWeight     Int?     @default(1)\n  score         Decimal?\n  isAvailable   Boolean? @default(true)\n\n  provider User     @relation(fields: [providerId], references: [id])\n  category Category @relation(fields: [categoryId], references: [id])\n\n  @@unique([providerId, categoryId])\n  @@index([categoryId, isAvailable])\n  @@index([categoryId, score(sort: Desc)])\n  @@index([categoryId, active])\n  @@map(\"provider_categories\")\n}\n\n// =============================================================================\n// CATEGORIES DOMAIN\n// =============================================================================\n\nmodel Category {\n  id     String  @id @default(dbgenerated(\"gen_random_uuid()\"))\n  name   String\n  slug   String? @unique\n  active Boolean @default(true)\n\n  orders             Order[]\n  providerCategories ProviderCategory[]\n  llmClassifications LlmClassification[]\n\n  @@map(\"categories\")\n}\n\n// =============================================================================\n// ORDERS DOMAIN\n// =============================================================================\n\nmodel Order {\n  id                  String    @id @default(dbgenerated(\"gen_random_uuid()\"))\n  clientId            String\n  providerId          String?\n  addressId           String?\n  categoryId          String?\n  description         String?\n  status              String\n  depositMethod       String    @default(\"avg_min_20\")\n  depositBaseAvgCents Int?\n  depositCents        Int       @default(0)\n  slotStart           DateTime?\n  slotEnd             DateTime?\n  finalPriceCents     Int?\n  reviewStatus        String?\n  createdAt           DateTime  @default(now())\n  updatedAt           DateTime  @default(now()) @updatedAt\n\n  // Relations\n  client   User      @relation(\"OrderClient\", fields: [clientId], references: [id])\n  provider User?     @relation(\"OrderProvider\", fields: [providerId], references: [id])\n  address  Address?  @relation(fields: [addressId], references: [id])\n  category Category? @relation(fields: [categoryId], references: [id])\n\n  // Order sub-models\n  orderSlots         OrderSlot[]\n  orderCategories    OrderCategory[]\n  orderInvitations   OrderInvitation[]\n  orderStatusHistory OrderStatusHistory[]\n  orderReview        OrderReview?\n\n  // Payment relations\n  payments       Payment[]\n  paymentEvents  PaymentEvent[]\n  commission     Commission?\n  clientCredits  ClientCredit[]\n  providerPayout ProviderPayout?\n\n  // Matching relations\n  matchScores        MatchScore[]\n  llmClassifications LlmClassification[]\n\n  @@index([status, createdAt(sort: Desc)])\n  @@map(\"orders\")\n}\n\nmodel OrderSlot {\n  id      String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId String\n  label   String?\n  startAt DateTime\n  endAt   DateTime\n  origin  String\n  chosen  Boolean  @default(false)\n\n  order       Order             @relation(fields: [orderId], references: [id])\n  invitations OrderInvitation[]\n\n  @@map(\"order_slots\")\n}\n\nmodel OrderCategory {\n  orderId      String\n  categorySlug String\n  confidence   Decimal\n  rank         Int\n\n  order Order @relation(fields: [orderId], references: [id])\n\n  @@id([orderId, categorySlug])\n  @@index([orderId, rank])\n  @@map(\"order_categories\")\n}\n\nmodel OrderInvitation {\n  id           String    @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId      String\n  providerId   String\n  slotId       String?\n  score        Decimal?\n  sentAt       DateTime  @default(now())\n  respondedAt  DateTime?\n  response     String?\n  waMessageId  String?   @unique\n  waRemoteJid  String?\n  categorySlug String?\n  status       String?\n  expiresAt    DateTime?\n  meta         Json?\n\n  order    Order      @relation(fields: [orderId], references: [id])\n  provider User       @relation(fields: [providerId], references: [id])\n  slot     OrderSlot? @relation(fields: [slotId], references: [id])\n\n  @@unique([orderId, providerId])\n  @@index([categorySlug, slotId])\n  @@index([orderId, categorySlug, slotId])\n  @@index([orderId, expiresAt], map: \"idx_order_invitations_order_expires\")\n  @@index([orderId, providerId])\n  @@index([orderId, status])\n  @@index([providerId, status])\n  @@index([waMessageId])\n  @@index([orderId, sentAt])\n  @@map(\"order_invitations\")\n}\n\nmodel OrderStatusHistory {\n  id        String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId   String\n  oldStatus String?\n  newStatus String\n  at        DateTime @default(now())\n  byUserId  String?\n\n  order  Order @relation(fields: [orderId], references: [id])\n  byUser User? @relation(fields: [byUserId], references: [id])\n\n  @@map(\"order_status_history\")\n}\n\nmodel OrderReview {\n  orderId    String    @id\n  clientId   String\n  providerId String\n  rating     Int?\n  comment    String?\n  createdAt  DateTime? @default(now())\n  updatedAt  DateTime? @default(now()) @updatedAt\n\n  order    Order @relation(fields: [orderId], references: [id])\n  client   User  @relation(\"OrderReviewClient\", fields: [clientId], references: [id])\n  provider User  @relation(\"OrderReviewProvider\", fields: [providerId], references: [id])\n\n  @@map(\"order_reviews\")\n}\n\n// =============================================================================\n// PAYMENTS DOMAIN\n// =============================================================================\n\nmodel Payment {\n  id               String    @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId          String\n  kind             String\n  gateway          String    @default(\"mercadopago\")\n  gatewayPaymentId String?   @unique\n  status           String\n  amountCents      Int\n  createdAt        DateTime  @default(now())\n  approvedAt       DateTime?\n\n  order         Order          @relation(fields: [orderId], references: [id])\n  paymentEvents PaymentEvent[]\n\n  @@unique([gateway, gatewayPaymentId])\n  @@index([orderId, status])\n  @@map(\"payments\")\n}\n\nmodel PaymentEvent {\n  id          String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  paymentId   String?\n  orderId     String\n  rawPayload  Json\n  receivedAt  DateTime @default(now())\n  signatureOk Boolean?\n\n  payment Payment? @relation(fields: [paymentId], references: [id])\n  order   Order    @relation(fields: [orderId], references: [id])\n\n  @@map(\"payment_events\")\n}\n\nmodel Commission {\n  orderId         String   @id\n  finalPriceCents Int\n  rateBp          Int      @default(1200)\n  minCents        Int      @default(1000)\n  maxCents        Int      @default(4000)\n  computedCents   Int\n  computedAt      DateTime @default(now())\n\n  order Order @relation(fields: [orderId], references: [id])\n\n  @@map(\"commissions\")\n}\n\nmodel ClientCredit {\n  id          String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  userId      String\n  orderId     String\n  amountCents Int\n  expiresAt   DateTime\n  usedCents   Int      @default(0)\n  createdAt   DateTime @default(now())\n\n  user  User  @relation(fields: [userId], references: [id])\n  order Order @relation(fields: [orderId], references: [id])\n\n  @@index([userId, expiresAt])\n  @@map(\"client_credits\")\n}\n\n// =============================================================================\n// PROVIDER PAYOUTS DOMAIN\n// =============================================================================\n\nmodel ProviderPayout {\n  id              String    @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId         String?   @unique\n  providerId      String\n  grossCents      Int\n  commissionCents Int\n  netCents        Int\n  status          String\n  paidAt          DateTime?\n\n  order    Order? @relation(fields: [orderId], references: [id])\n  provider User   @relation(fields: [providerId], references: [id])\n\n  @@map(\"provider_payouts\")\n}\n\n// =============================================================================\n// MATCHING & CLASSIFICATION DOMAIN\n// =============================================================================\n\nmodel MatchScore {\n  id           String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId      String\n  providerId   String\n  distanceKm   Decimal?\n  ratingNorm   Decimal?\n  acceptRate   Decimal?\n  responseFast Decimal?\n  reliability  Decimal?\n  finalScore   Decimal?\n  createdAt    DateTime @default(now())\n\n  order    Order @relation(fields: [orderId], references: [id])\n  provider User  @relation(fields: [providerId], references: [id])\n\n  @@map(\"match_scores\")\n}\n\nmodel LlmClassification {\n  id         String   @id @default(dbgenerated(\"gen_random_uuid()\"))\n  orderId    String\n  inputText  String?\n  categoryId String?\n  confidence Decimal?\n  createdAt  DateTime @default(now())\n\n  order    Order     @relation(fields: [orderId], references: [id])\n  category Category? @relation(fields: [categoryId], references: [id])\n\n  @@map(\"llm_classifications\")\n}\n\n// =============================================================================\n// BUSINESS RULES DOMAIN\n// =============================================================================\n\nmodel RefusalRule {\n  code            String @id\n  clientCreditPct Int\n  providerPct     Int\n  platformPct     Int\n\n  @@map(\"refusal_rules\")\n}\n\n// =============================================================================\n// ENUMS\n// =============================================================================\n\nenum UserRole {\n  ADMINISTRADOR\n  PRESTADOR\n  CLIENTE\n}\n\nenum ProviderRequestStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\n// =============================================================================\n// POSTGRESQL EXTENSIONS & TRIGGERS\n// =============================================================================\n\n// Note: The following PostgreSQL extensions are available but not modeled in Prisma:\n// - pgcrypto: Cryptographic functions (armor, crypt, digest, hmac, etc.)\n// - cube: Geometric data type for multi-dimensional cubes\n// - earthdistance: Geographic distance calculations\n// - unaccent: Text search without accents\n\n// Trigger: trg_orders_status_history\n// Function: log_order_status_change()\n// Description: Automatically logs order status changes to order_status_history table\n// This trigger is handled at the database level and doesn't need Prisma modeling\n",
  "inlineSchemaHash": "c67171fa9aa981d1c02afa0ffc9c64795d2292b05a7bf67f8e0fa3812b4e6902",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneE164\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"whatsappId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"UserRoleAssignment\",\"relationName\":\"UserToUserRoleAssignment\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToUser\"},{\"name\":\"providerRequests\",\"kind\":\"object\",\"type\":\"ProviderRequest\",\"relationName\":\"UserProviderRequests\"},{\"name\":\"reviewedRequests\",\"kind\":\"object\",\"type\":\"ProviderRequest\",\"relationName\":\"ReviewedProviderRequests\"},{\"name\":\"providerProfile\",\"kind\":\"object\",\"type\":\"ProviderProfile\",\"relationName\":\"ProviderProfileToUser\"},{\"name\":\"providerAvailability\",\"kind\":\"object\",\"type\":\"ProviderAvailability\",\"relationName\":\"ProviderAvailabilityToUser\"},{\"name\":\"providerCategories\",\"kind\":\"object\",\"type\":\"ProviderCategory\",\"relationName\":\"ProviderCategoryToUser\"},{\"name\":\"providerPayouts\",\"kind\":\"object\",\"type\":\"ProviderPayout\",\"relationName\":\"ProviderPayoutToUser\"},{\"name\":\"clientCredits\",\"kind\":\"object\",\"type\":\"ClientCredit\",\"relationName\":\"ClientCreditToUser\"},{\"name\":\"ordersAsClient\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderClient\"},{\"name\":\"ordersAsProvider\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderProvider\"},{\"name\":\"orderInvitations\",\"kind\":\"object\",\"type\":\"OrderInvitation\",\"relationName\":\"OrderInvitationToUser\"},{\"name\":\"orderReviewsAsClient\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"OrderReviewClient\"},{\"name\":\"orderReviewsAsProvider\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"OrderReviewProvider\"},{\"name\":\"orderStatusHistory\",\"kind\":\"object\",\"type\":\"OrderStatusHistory\",\"relationName\":\"OrderStatusHistoryToUser\"},{\"name\":\"matchScores\",\"kind\":\"object\",\"type\":\"MatchScore\",\"relationName\":\"MatchScoreToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"UserRoleAssignment\",\"relationName\":\"RoleToUserRoleAssignment\"}],\"dbName\":\"role\"},\"UserRoleAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRoleAssignment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRoleAssignment\"}],\"dbName\":\"user_role_assignment\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"ProviderRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserProviderRequests\"},{\"name\":\"services\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cep\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolioLinks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolioLinksJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProviderRequestStatus\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewedProviderRequests\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"provider_request\"},\"Address\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cep\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"neighborhood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lon\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AddressToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"AddressToOrder\"}],\"dbName\":\"addresses\"},\"ProviderProfile\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"radiusKm\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"avgRating\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalReviews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"acceptRate30d\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"responseP50S\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"noShow30d\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProviderProfileToUser\"}],\"dbName\":\"provider_profiles\"},\"ProviderAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weekday\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProviderAvailabilityToUser\"}],\"dbName\":\"provider_availability\"},\"ProviderCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"levelWeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expWeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProviderCategoryToUser\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProviderCategory\"}],\"dbName\":\"provider_categories\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CategoryToOrder\"},{\"name\":\"providerCategories\",\"kind\":\"object\",\"type\":\"ProviderCategory\",\"relationName\":\"CategoryToProviderCategory\"},{\"name\":\"llmClassifications\",\"kind\":\"object\",\"type\":\"LlmClassification\",\"relationName\":\"CategoryToLlmClassification\"}],\"dbName\":\"categories\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositBaseAvgCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"depositCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slotStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"slotEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finalPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reviewStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderClient\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderProvider\"},{\"name\":\"address\",\"kind\":\"object\",\"type\":\"Address\",\"relationName\":\"AddressToOrder\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToOrder\"},{\"name\":\"orderSlots\",\"kind\":\"object\",\"type\":\"OrderSlot\",\"relationName\":\"OrderToOrderSlot\"},{\"name\":\"orderCategories\",\"kind\":\"object\",\"type\":\"OrderCategory\",\"relationName\":\"OrderToOrderCategory\"},{\"name\":\"orderInvitations\",\"kind\":\"object\",\"type\":\"OrderInvitation\",\"relationName\":\"OrderToOrderInvitation\"},{\"name\":\"orderStatusHistory\",\"kind\":\"object\",\"type\":\"OrderStatusHistory\",\"relationName\":\"OrderToOrderStatusHistory\"},{\"name\":\"orderReview\",\"kind\":\"object\",\"type\":\"OrderReview\",\"relationName\":\"OrderToOrderReview\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrderToPayment\"},{\"name\":\"paymentEvents\",\"kind\":\"object\",\"type\":\"PaymentEvent\",\"relationName\":\"OrderToPaymentEvent\"},{\"name\":\"commission\",\"kind\":\"object\",\"type\":\"Commission\",\"relationName\":\"CommissionToOrder\"},{\"name\":\"clientCredits\",\"kind\":\"object\",\"type\":\"ClientCredit\",\"relationName\":\"ClientCreditToOrder\"},{\"name\":\"providerPayout\",\"kind\":\"object\",\"type\":\"ProviderPayout\",\"relationName\":\"OrderToProviderPayout\"},{\"name\":\"matchScores\",\"kind\":\"object\",\"type\":\"MatchScore\",\"relationName\":\"MatchScoreToOrder\"},{\"name\":\"llmClassifications\",\"kind\":\"object\",\"type\":\"LlmClassification\",\"relationName\":\"LlmClassificationToOrder\"}],\"dbName\":\"orders\"},\"OrderSlot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chosen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderSlot\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"OrderInvitation\",\"relationName\":\"OrderInvitationToOrderSlot\"}],\"dbName\":\"order_slots\"},\"OrderCategory\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categorySlug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"rank\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderCategory\"}],\"dbName\":\"order_categories\"},\"OrderInvitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"respondedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"waMessageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"waRemoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categorySlug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meta\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderInvitation\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderInvitationToUser\"},{\"name\":\"slot\",\"kind\":\"object\",\"type\":\"OrderSlot\",\"relationName\":\"OrderInvitationToOrderSlot\"}],\"dbName\":\"order_invitations\"},\"OrderStatusHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"byUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderStatusHistory\"},{\"name\":\"byUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderStatusHistoryToUser\"}],\"dbName\":\"order_status_history\"},\"OrderReview\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderReview\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderReviewClient\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderReviewProvider\"}],\"dbName\":\"order_reviews\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kind\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gateway\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gatewayPaymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPayment\"},{\"name\":\"paymentEvents\",\"kind\":\"object\",\"type\":\"PaymentEvent\",\"relationName\":\"PaymentToPaymentEvent\"}],\"dbName\":\"payments\"},\"PaymentEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawPayload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"signatureOk\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPaymentEvent\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPaymentEvent\"}],\"dbName\":\"payment_events\"},\"Commission\":{\"fields\":[{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"finalPriceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rateBp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"computedCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"computedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CommissionToOrder\"}],\"dbName\":\"commissions\"},\"ClientCredit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usedCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientCreditToUser\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"ClientCreditToOrder\"}],\"dbName\":\"client_credits\"},\"ProviderPayout\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grossCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"commissionCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"netCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToProviderPayout\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProviderPayoutToUser\"}],\"dbName\":\"provider_payouts\"},\"MatchScore\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"distanceKm\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ratingNorm\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"acceptRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"responseFast\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reliability\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"finalScore\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"MatchScoreToOrder\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MatchScoreToUser\"}],\"dbName\":\"match_scores\"},\"LlmClassification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"LlmClassificationToOrder\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToLlmClassification\"}],\"dbName\":\"llm_classifications\"},\"RefusalRule\":{\"fields\":[{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientCreditPct\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"providerPct\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"platformPct\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"refusal_rules\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

